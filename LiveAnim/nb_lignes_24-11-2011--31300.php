<?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Récupération de mot de passe</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}
# On définit la page courante:
$_SESSION['page_actuelle'] = "recuperation_mdp";

?>

<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
      <!-- header -->
      <div id="header">
      	<div class="wrapper">
         	<div class="col-1">	
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>			
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
            </div>
            <div class="col-2">
            	<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
            </div>
        </div>
    </div>
    <div id="content">
      	<div class="wrapper">
         	<div class="aside">
            	<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_types_artistes.php');
						require_once('include_partenaire.php');
						require_once('include_nouveaux_artistes.php');
						require_once('include_dernieres_annonces.php');
					?>					
			   </div>
            </div>
			<?php
				require_once('include_pub_haut.php');
			?>	
            <div class="mainContent maxheight">
            	<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_recuperation_mdp.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
	    <?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Fiche du prestataire N°<?php echo $_GET['id_personne']; ?></title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


		
require_once('script_prechargement_personne.php');

# On définit la page courante:
$_SESSION['page_actuelle'] = "personne";

?>

<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_types_artistes.php');
						require_once('include_nouveaux_artistes.php');
						require_once('include_dernieres_annonces.php');
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<?php
					require_once('include_pub_haut.php');
				?>	
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_personne.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Lecture d'une news</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_news.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}
	
# On définit la page courante:
$_SESSION['page_actuelle'] = "news";

?>
<script type="text/javascript" src="js/news.js"></script>
<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_derniers_projets.php
					*/
						require_once('include_dernieres_annonces.php');
						require_once('include_partenaire.php');
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_news.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_footer.php');
?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html>
<?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Modification d'un slide</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_modifier_slide.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_slide";

?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_slide.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_GET['id_contrat'])){
		$ID_CONTRAT = (int)$_GET['id_contrat'];
		if($ID_CONTRAT > 0){
			# On vérifie que la personne ai bien le droit de valider ce contrat donc soit le destinataire actuel du contrat.
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_contrat.php');
			require_once('couche_metier/PCS_personne.php');
			
			$oMSG = new MSG();
			$oPCS_contrat = new PCS_contrat();
			$oPCS_personne = new PCS_personne();
			
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			$oMSG->setData('DESTINATAIRE', $_SESSION['compte']['ID_PERSONNE']);
			
			$nb_contrat = $oPCS_contrat->fx_compter_ID_CONTRAT_by_ID_CONTRAT_et_DESTINATAIRE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

			if($nb_contrat[0]['nb_contrat'] == 1){
				# La personne est bien le destinataire actuel de ce contrat.
				
				
				# On valide le contrat.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				$oMSG->setData('STATUT_CONTRAT', 'Validé');
				$oMSG->setData('URL_CONTRAT_PDF', '');# finalement je vais auto générer le contrat à chaque fois.
				
				$oPCS_contrat->fx_valider_contrat($oMSG);
				
				# Notre destinataire actuel prend le nom d'expéditeur, on le récupère.
				$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
				
				$expediteur = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On récupère le nouveau destinataire.
				$id_destinataire = $oPCS_contrat->fx_recuperer_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				$oMSG->setData('ID_PERSONNE', $id_destinataire[0]['ID_PERSONNE']);
				
				$destinataire = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On envoi l'email.
				$additional_headers = "From: noreply@liveanim.fr \r\n";
				$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
				$destinataires = $expediteur[0]['EMAIL'].', '.$destinataire[0]['EMAIL'];
				$sujet = utf8_decode("LiveAnim [Validation du contrat N°".$ID_CONTRAT." !]");
				
				$message = "------------------------------\n";
				$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
				$message.= "------------------------------\n\n";
				$message.= utf8_decode("Bonjour, \n");
				$message.= utf8_decode("Nous vous informons que le contrat ".$ID_CONTRAT." a été validé par ".$expediteur[0]['PSEUDO'].". \n\n");
				$message.= utf8_decode("Il n'est donc plus modifiable. Vous pouvez le consulter à cette adresse: ".$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT."\n\n");
				$message.= utf8_decode("Si vous avez un empèchement quelconque vous obligant à annuler ce contrat, vous pouvez l'annuler à cette adresse: ".$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT." \n");
				$message.= utf8_decode("Veuillez dans ce cas prévenir -par respect- votre interlocuteur: \n");
				$message.= utf8_decode("Email de ".$expediteur[0]['PSEUDO'].": ".$expediteur[0]['EMAIL']." \n");
				$message.= utf8_decode("Email de ".$destinataire[0]['PSEUDO'].": ".$destinataire[0]['EMAIL']." \n\n\n");
				$message.= utf8_decode("------------------------------\n\n\n");
				$message.= utf8_decode("LiveAnim vous remercie de votre confiance.\n\n");
				$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
				
				mail($destinataires, $sujet, $message, $additional_headers);
				
				$_SESSION['contrat']['message_affiche'] = false;
				$_SESSION['contrat']['message'] = "<span class='valide'>Le contrat a été validé, un mail vous a été envoyé.</span>";
				
				header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
			}else{
				# La personne n'a pas le droit de valider ce contrat.
				$_SESSION['historique_contrat']['message_affiche'] = false;
				$_SESSION['historique_contrat']['message'] = "<span class='alert'>Vous n'avez pas les droits suffisants pour valider ce contrat.</span>";
				
				header('Location: '.$oCL_page->getPage('historique_contrat', 'absolu'));
			}
		}else{
			# ID_CONTRAT invalide.
			$_SESSION['historique_contrat']['message_affiche'] = false;
			$_SESSION['historique_contrat']['message'] = "<span class='alert'>Le contrat que vous essayez de valider n'existe pas.</span>";
			
			header('Location: '.$oCL_page->getPage('historique_contrat', 'absolu'));
		}
	}else{
		# Pas de POST.
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php 
# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
if(isset($_POST['payment_status'])){
	//permet de traiter le retour ipn de paypal
	$email_account = $oCL_page->getConfig('compte_credite');
	$req = 'cmd=_notify-validate';

	foreach ($_POST as $key => $value) {
		$value = urlencode(stripslashes($value));
		$req .= "&$key=$value";
	}

	$header = "POST /cgi-bin/webscr HTTP/1.0\r\n";
	$header .= "Content-Type: application/x-www-form-urlencoded\r\n";
	$header .= "Content-Length: " . strlen($req) . "\r\n\r\n";
	$fp = fsockopen ('ssl://www.paypal.com', 443, $errno, $errstr, 30);
	$item_name = $_POST['item_name'];
	$item_number = $_POST['item_number'];
	$payment_status = $_POST['payment_status'];
	$payment_amount = $_POST['mc_gross'];
	$payment_currency = $_POST['mc_currency'];
	$txn_id = $_POST['txn_id'];
	$receiver_email = $_POST['receiver_email'];
	$payer_email = $_POST['payer_email'];
	$transaction_subject = $_POST['transaction_subject'];
	parse_str($_POST['custom'],$custom);

	if (!$fp) {
		file_put_contents('aalog.txt', print_r('Vient pas de la bonne adresse', true));
	} else {
	fputs ($fp, $header . $req);
	while (!feof($fp)) {
		$res = fgets ($fp, 1024);
		if (strcmp ($res, "VERIFIED") == 0) {
			// vérifier que payment_status a la valeur Completed
			if ( $payment_status == "Completed") {
				   if ( $email_account == $receiver_email) {
						# On récupère nos données et on les met dans le tableau associatif $datas.
						$tab_datas = explode('&', $transaction_subject);
						$datas = Array();
						
						foreach($tab_datas as $key=>$data){
							$tab_datas[$key] = explode('=', $data);
							$datas[$tab_datas[$key][0]] = $tab_datas[$key][1];
						}
						
						# On charge les informations de notre client via id_personne.
						require_once('couche_metier/MSG.php');
						require_once('couche_metier/PCS_personne.php');
						require_once('couche_metier/PCS_pack.php');
						require_once('couche_metier/CL_date.php');

						$oMSG = new MSG();
						$oPCS_personne = new PCS_personne();
						$oPCS_pack = new PCS_pack();
						$oCL_date = new CL_date();
						
						# On crée nos variables 
						$nb_error = 0;
						$message = "";
						
						$oMSG->setData('ID_PERSONNE', $datas['id_personne']);
						
						$personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
						
						# On charge les informations du pack via id_pack.
						$oMSG->setData('ID_PACK', $datas['id_pack']);
						
						$pack = $oPCS_pack->fx_recuperer_pack_by_ID_PACK($oMSG)->getData(1)->fetchAll();
						
						
						
						# On calcule la réduction auquel est soumis le pack.
						if($pack[0]['VISIBLE'] == true){
						
							$PRIX = $pack[0]['PRIX_BASE'];
							$MAX = $pack[0]['GAIN_PARRAINAGE_MAX'];# Le maximum de réduction auquel est soumis le pack.
							$REDUCTION = $personne[0]['REDUCTION'];
							
							if($pack[0]['SOUMIS_REDUCTIONS_PARRAINAGE'] == true){
								# Le pack est soumis à des réductions.
								
								# Trois cas possibles, soit la réduction possédée est inférieure au MAX soit elle est égale soit elle est supérieure.
								if($REDUCTION >= $MAX){
									# Si la réduction possédée est supérieure ou égale au MAX de réduction possible.
									$REDUCTION = $MAX;# On met le taux de réduction au maximum.
								}
								
								# Si la réduction n'est pas négative ou nulle on l'effectue.
								if($REDUCTION > 0){
									$pack[0]['nouvelle_reduction'] = $REDUCTION;# On stocke la réduction du pack.
									$pack[0]['economie'] = round($PRIX*($REDUCTION/100), 2);# On calcule l'économie réalisée.
									$pack[0]['nouveau_prix'] = round($PRIX-($PRIX*($REDUCTION/100)), 2);# Le nouveau prix est égal à l'ancien prix multiplié par la réduction.
									$pack[0]['beneficie_reduction'] = true;
								}else{
									$pack[0]['nouveau_prix'] = $PRIX;
									$pack[0]['beneficie_reduction'] = false;
								}
							}else{
								# le pack n'est pas soumis à des réductions.
								$pack[0]['beneficie_reduction'] = false;
								$pack[0]['nouveau_prix'] = $PRIX;
							}
						}else{
							$nb_error++;
							$message.= "&error".$nb_error."=Pack non soumis aux réductions parrainage ou non visible.";
						}
						
						if($pack[0]['beneficie_reduction']){
							# Si la personne bénéficie d'une quelconque réduction.
							$message.= "&beneficie_reduction=1";
							
						}else{
							# Si la personne ne bénéficie pas de réduction.
							$message.= "&beneficie_reduction=0";
						}
						
						# On vérifie que le prix appliqué est bien conforme au prix calculé.
						if($pack[0]['nouveau_prix'] != $payment_amount){
							# Le prix payé est différent de celui calculé.
							$nb_error++;
							$message.= "&error".$nb_error."=Prix payé et prix calculé différents.";
						}
					
						
						# On vérifie la monnaie utilisée.
						if($_POST['mc_currency'] != "EUR"){
							# La monnaie utilisée est différente de l'euro.
							$nb_error++;
							$message.= "&error".$nb_error."=Monnaie utilisée différente de l'euro. (".$_POST['mc_currency'].")";
						}
					
						
						$now = date('Y-m-d H:i:s');
						$now_concat = date("Y-m-d_H")."h".date("i")."mn".date("s");
						$DATAS_PAYPAL = "item_name=".$item_name."&item_number=".$item_number."&payment_status=".$payment_status."&payment_amount=".$payment_amount.
						"&payment_currency=".$payment_currency."&txn_id=".$txn_id."&receiver_email=".$receiver_email."&payer_email=".$payer_email.
						"&payment_date=".$_POST['payment_date']."&pending_reason=".$_POST['pending_reason'].
						"&mc_currency=".$_POST['mc_currency']."&custom=".$transaction_subject."&nb_error=".$nb_error.$message;
						
						if($nb_error == 0){
							# On valide l'achat.
							
							# On calcule la nouvelle réduction.
							if($pack[0]['beneficie_reduction']){
								# On doit modifier la réduction car il en a bénéficié.
								$pack_reduction = $pack[0]['nouvelle_reduction'];
								$personne[0]['nouvelle_reduction'] = $personne[0]['REDUCTION'] - $REDUCTION;
								$a_beneficie_reduction = true;
							}else{
								# Inutile de modifier la réduction.
								$pack_reduction = 0;
								$personne[0]['nouvelle_reduction'] = $REDUCTION;
								$a_beneficie_reduction = false;
							}
							# On calcule la date de fin de validité.
							
							# On récupère le pack dont la date de fin est supérieure à maintenant. 
							$oMSG->setData('limit', 'LIMIT 0,1');
		
							$pack_personne = $oPCS_pack->fx_recuperer_dernier_pack_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
							
							# On met à jour la réduction de la personne si elle en a bénéficiée.
							if($pack[0]['beneficie_reduction'] == true && $a_beneficie_reduction == true){
								# Le pack permet une réduction et la nouvelle réduction est différente de la réduction possédée au début par la personne.
								$oMSG->setData('REDUCTION', $personne[0]['nouvelle_reduction']);
								$oMSG->setData('ID_PERSONNE', $personne[0]['ID_PERSONNE']);
								
								$oPCS_personne->fx_modifier_REDUCTION_by_ID_PERSONNE($oMSG);
							}
							
							# On vérifie si le membre a un parrain.
							if(isset($personne[0]['PARRAIN']) && !empty($personne[0]['PARRAIN']) && $personne[0]['PARRAIN'] != "Aucun" && $personne[0]['PARRAIN'] != 0){
								$oMSG->setData('ID_PERSONNE', $personne[0]['PARRAIN']);
								$oMSG->setData('REDUCTION', $pack[0]['REDUCTION']);# On attribue au parrain la réduction du pack (en plus de ce qu'il possède déjà)
								
								$oPCS_personne->fx_modifier_REDUCTION_by_ID_PARRAIN($oMSG);
							}
							
							
							if($datas['activer_pack_maintenant']){
								# On active le pack maintenant							
								if(isset($pack_personne[0]['ID_PACK']) && !empty($pack_personne[0]['ID_PACK'])){
									# Le pack existe bel et bien. On modifie le pack actuel.
									$oMSG->setData('ID_PERSONNE', $personne[0]['ID_PERSONNE']);
									$oMSG->setData('ID_PACK', $pack_personne[0]['ID_PACK']);
									$oMSG->setData('DATE_ACHAT', $pack_personne[0]['DATE_ACHAT']);
									$oMSG->setData('DATE_FIN', $now);
									
									$oPCS_pack->fx_modifier_DATE_FIN_by_IDs($oMSG);

									# On calcule la nouvelle date de début et de fin.
									$DATE_DEBUT = $now;
									$DATE_FIN = $oCL_date->fx_convertir_date($DATE_DEBUT, true, false, "en", $pack[0]['DUREE']);

								}else{
									# le pack n'existe pas, on calcule la nouvelle date de début et de fin.
									$DATE_DEBUT = $now;
									$DATE_FIN = $oCL_date->fx_convertir_date($DATE_DEBUT, true, false, "en", $pack[0]['DUREE']);
								}							
							
							}else{
								# On active le pack après le pack actuel.
								# On attribue au nouveau pack pour date de début la date de fin du pack actuel et pour date de fin la date de début plus la durée du pack.
								# On active le pack maintenant							
								if(isset($pack_personne[0]['ID_PACK']) && !empty($pack_personne[0]['ID_PACK'])){
									# Le pack existe bel et bien. On calcule la nouvelle date de début et de fin.
									$DATE_DEBUT = $pack_personne[0]['DATE_FIN'];
									$DATE_FIN = $oCL_date->fx_convertir_date($DATE_DEBUT, true, false, "en", $pack[0]['DUREE']);

								}else{
									# le pack n'existe pas, on calcule la nouvelle date de début et de fin.
									$DATE_DEBUT = $now;
									$DATE_FIN = $oCL_date->fx_convertir_date($DATE_DEBUT, true, false, "en", $pack[0]['DUREE']);
								}					
								
							}
							
							# On attribue le pack à la personne.
							$oMSG->setData('ID_PACK', $pack[0]['ID_PACK']);
							$oMSG->setData('ID_PERSONNE', $personne[0]['ID_PERSONNE']);
							$oMSG->setData('DATE_ACHAT', $now);
							$oMSG->setData('DATE_DEBUT', $DATE_DEBUT);
							$oMSG->setData('DATE_FIN', $DATE_FIN);
							$oMSG->setData('REDUCTION', $pack_reduction);
							$oMSG->setData('NB_FICHES_VISITABLES', $pack[0]['NB_FICHES_VISITABLES']);
							$oMSG->setData('DATAS_PAYPAL', $DATAS_PAYPAL);
							
							$oPCS_pack->fx_lier_pack_personne($oMSG);
							
							file_put_contents($oCL_page->getPage('paiement_bancaire_pack')."OK_".$personne[0]['ID_PERSONNE']."_".$personne[0]['EMAIL']."_".$now_concat."_POST.txt", print_r($_POST, true));
							file_put_contents($oCL_page->getPage('paiement_bancaire_pack')."OK_".$personne[0]['ID_PERSONNE']."_".$personne[0]['EMAIL']."_".$now_concat."_oMSG.txt", print_r($oMSG->getDatas(), true));
							
							# On envoi un email.
							$additional_headers = "From: noreply@liveanim.fr \r\n";
							$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
							$destinataires = $personne[0]['EMAIL'];
							$sujet = utf8_decode("LiveAnim [Achat du Pack ".$pack[0]['NOM']."]");
							
							$message = "------------------------------\n";
							$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
							$message.= "------------------------------\n\n";
							$message.= utf8_decode("Bonjour ".$personne[0]['PSEUDO'].", \n");
							$message.= utf8_decode("Votre achat du Pack ".$pack[0]['NOM']." a bien été effectué. \n\n");
							$message.= utf8_decode("Le montant initial du Pack est de ".$pack[0]['PRIX_BASE']." euros. \n");
							if($pack[0]['beneficie_reduction']){
								$message.= utf8_decode("Vous êtes bénéficiaire d'une réduction de ".$REDUCTION."% du prix initial. \n");
								$message.= utf8_decode("Ce qui vous fait un total à payer de ".$pack[0]['nouveau_prix']." euros soit une réduction effective de ".$pack[0]['economie']." euros. \n\n");
							}else{
								$message.= utf8_decode("Vous ne bénéficiez d'aucune réduction ce qui vous fait un total à payer de ".$pack[0]['nouveau_prix'].". \n\n");
							}
							$message.= utf8_decode("La durée de votre Pack est de ".$pack[0]['DUREE']." mois. \n");
							if($datas['activer_pack_maintenant']){
								$message.= utf8_decode("Vous avez choisi d'activer immédiatement votre pack. Il est donc dès à présent activé. \n");
							}else{
								$message.= utf8_decode("Vous avez choisi d'activer ce pack après votre pack actuel, si vous possédiez un pack d'activé alors il a été fait selon votre demande.\n Le pack que vous venez d'acheter s'activera automatiquement après que l'actuel ait expiré. \n");
							}
							$message.= utf8_decode("Votre compte a été débité de la somme correspondante. \n");
							$message.= utf8_decode("La totalité de la transaction bancaire a été gérée par PayPal. \n\n");
							$message.= utf8_decode("S'il y a un problème quelconque concernant le paiement veuillez contacter notre équipe, nous ferons notre possible pour vous donner entière satisfaction. \n");
							$message.= utf8_decode("------------------------------\n\n\n");
							$message.= utf8_decode("LiveAnim vous remercie de votre confiance et espère que votre nouveau produit vous satisferat ! \n\n");
							$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
							
							mail($destinataires, $sujet, $message, $additional_headers);
							
						}else{
							# On invalide l'achat.
							# On sauvegarde les erreurs en BDD ainsi que la tentative de paiement.
							$oMSG->setData('ID_PACK', 7);
							$oMSG->setData('ID_PERSONNE', $personne[0]['ID_PERSONNE']);
							$oMSG->setData('DATE_ACHAT', $now);
							$oMSG->setData('DATE_DEBUT', '1950-01-01 00:00:00');
							$oMSG->setData('DATE_FIN', '1950-01-01 00:00:00');
							$oMSG->setData('REDUCTION', 0);
							$oMSG->setData('NB_FICHES_VISITABLES', 0);
							$oMSG->setData('DATAS_PAYPAL', "ERROR: ".$DATAS_PAYPAL);
							
							$oPCS_pack->fx_lier_pack_personne($oMSG);
							
							file_put_contents($oCL_page->getPage('paiement_bancaire_pack')."ERROR_".$personne[0]['ID_PERSONNE']."_".$personne[0]['EMAIL']."_".$now_concat."_POST.txt", print_r($_POST, true));
							file_put_contents($oCL_page->getPage('paiement_bancaire_pack')."ERROR_".$personne[0]['ID_PERSONNE']."_".$personne[0]['EMAIL']."_".$now_concat."_oMSG.txt", print_r($oMSG->getDatas(), true));
							
							# On envoi un email.
							$additional_headers = "From: noreply@liveanim.fr \r\n";
							$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
							$destinataires = $personne[0]['EMAIL'];
							$sujet = utf8_decode("LiveAnim [Echec de l'achat du Pack".$pack[0]['NOM']."]");
							
							$message = "------------------------------\n";
							$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
							$message.= "------------------------------\n\n";
							$message.= utf8_decode("Bonjour ".$personne[0]['PSEUDO'].", \n");
							$message.= utf8_decode("Votre achat du Pack ".$pack[0]['NOM']." a échoué. \n\n");
							$message.= utf8_decode("Votre compte a été débité de ".$payment_amount." ".$_POST['mc_currency'].". \n\n");
							$message.= utf8_decode("Si l'erreur ne vient pas de vous (Tentative de modification du fonctionnement normal du système de paiement) nous vous invitons à nous contacter. \n");
							$message.= utf8_decode("(Inutile de préciser que dans le cas où vous auriez tenté d'altérer le fonctionnement normal de notre système de paiement il est inutile de faire une réclamation) \n\n");
							$message.= utf8_decode("------------------------------\n\n\n");
							$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
							
							mail($destinataires, $sujet, $message, $additional_headers);
							
						}

					}else{
					}
			}else {
					// Statut de paiement: Echec
					
					# On récupère nos données et on les met dans le tableau associatif $datas.
					$tab_datas = explode('&', $transaction_subject);
					$datas = Array();
					
					foreach($tab_datas as $key=>$data){
						$tab_datas[$key] = explode('=', $data);
						$datas[$tab_datas[$key][0]] = $tab_datas[$key][1];
					}
						
					require_once('couche_metier/MSG.php');
					require_once('couche_metier/PCS_personne.php');

					$oMSG = new MSG();
					$oPCS_personne = new PCS_personne();
				
					
					$oMSG->setData('ID_PERSONNE', $datas['id_personne']);
					
					$personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
					
					# On envoi un email.
					$additional_headers = "From: postmaster@liveanim.fr \r\n";
					$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
					$destinataires = $personne[0]['EMAIL'];
					$sujet = utf8_decode("LiveAnim [Echec d'achat via PayPal]");
					
					$message = "------------------------------\n";
					$message.= utf8_decode("Vous pouvez répondre à cet e-mail. \n");
					$message.= "------------------------------\n\n";
					$message.= utf8_decode("Bonjour ".$personne[0]['PSEUDO'].", \n");
					$message.= utf8_decode("Vous avez fait une tentative d'achat d'un de nos packs. \n\n");
					$message.= utf8_decode("Cette tentative a échouée pour une raison qu'il nous est impossible à certifier exactement. \n\n");
					$message.= utf8_decode("Votre compte PayPal n'a normalement pas été débité. Si c'est le cas merci de nous retourner cet email ainsi qu'un descriptif de vos actions concernant le paiement. \n");
					$message.= utf8_decode("Il est possible que la cause de l'erreur soit la monnaie utilisée mais rien ne l'indique avec certitude. Nous attendons des € (EUR) et vous avez payé en ".$_POST['mc_currency'].". \n\n");
					$message.= utf8_decode("Si l'erreur vient de la monnaie que vous avez utilisé et que vous avez été débité nous vous rembourseront si vous nous fournissez les pièces justificatives de l'achat. (Ce mail et la facture PayPal) \n\n");
					$message.= utf8_decode("------------------------------\n\n\n");
					$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
					
					mail($destinataires, $sujet, $message, $additional_headers);
			}
			exit();
	   }else if (strcmp ($res, "INVALID") == 0) {
			// Transaction invalide
		}
	}
	fclose ($fp);
	}	
}else{
	# Si $_POST['payment_status'] n'existe pas:
	session_start();
	$_SESSION['connexion']['message'] = "<span class='orange'>Vous avez tenté d'accéder à une page de manière non autorisée, vous avez été redirigé.</span><br /> ";
	$_SESSION['connexion']['message_affiche'] = false;
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['role_singulier'])){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_types.php');
		
		$oMSG = new MSG();
		$oPCS_types = new PCS_types();
		
		$nb_erreur = 0;
		$reponse = "";
		
		$ROLE = ucfirst(trim($_POST['role_singulier']));
		$ROLES = ucfirst(trim($_POST['role_pluriel']));
		
		# On vérifie que les champs ne soient pas vides.
		if(empty($ROLE) || empty($ROLES)){
			$nb_erreur++;
			$reponse.= "<span class='orange'>Un des champs est vide.</span><br />";
		}
		
		# On vérifie que les deux termes ne soient pas identiques.
		if($ROLE == $ROLES){
			$nb_erreur++;
			$reponse.= "<span class='orange'>Les deux champs ne doivent pas avoir la même valeur.</span><br />";
		}
		
		# On vérifie que le pluriel soit bien correspondant au singulier.
		if($ROLES != $ROLE."s" && $ROLES != $ROLE."x"){
			$nb_erreur++;
			$reponse.= "<span class='orange'>Le terme au pluriel ne correspond pas à celui au singulier. <span class='petit'>(Ex: Artiste -> Artistes)</span></span><br />";
		}

		# On vérifie que le ROLE ne soit pas déjà pris.
		$oMSG->setData('ID_TYPES', $ROLE);

		$nb_types = $oPCS_types->fx_compter_types_by_ID_TYPES($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		if($nb_types[0]['nb_types'] > 0){
			$nb_erreur++;
			$reponse.= "<span class='orange'>Le rôle (singulier) est déjà pris, veuillez en sélectionner un autre.</span><br />";
		}
		
		# On véfifie que le ROLES ne soit pas déjà pris.
		$oMSG->setData('ID_TYPES', $ROLES);
		
		$nb_types = $oPCS_types->fx_compter_types_by_ID_TYPES($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		if($nb_types[0]['nb_types'] > 0){
			$nb_erreur++;
			$reponse.= "<span class='orange'>Le rôle (pluriel) est déjà pris, veuillez en sélectionner un autre.</span><br />";
		}
		
		if($nb_erreur == 0){			
			# On insère le singulier.
			$oMSG->setData('ID_FAMILLE_TYPES', 'Role');
			$oMSG->setData('ID_TYPES', $ROLE);
			
			$oPCS_types->fx_ajouter_ID_TYPES($oMSG);
			
			# On insère le pluriel.
			$oMSG->setData('ID_FAMILLE_TYPES', 'Roles');
			$oMSG->setData('ID_TYPES', $ROLES);
			
			$oPCS_types->fx_ajouter_ID_TYPES($oMSG);
			
			$reponse.="<span class='rose'>Le rôle a été ajouté.</span><br />";
			echo $reponse;
		}else{
			$reponse.= "<span class='alert'>Le rôle n'a pas été ajouté.</span><br />";
			echo $reponse;
		}		
	}else{
		$reponse.= "<span class='orange'>Erreur: Données invalides.</span><br />";
		echo $reponse;
		header('Location: '.$oCL_page->getPage('liste_role_admin', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	echo "Accès interdit.";
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>
<?php 
# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
if(isset($_POST['payment_status'])){
	//permet de traiter le retour ipn de paypal
	$email_account = $oCL_page->getConfig('compte_credite');
	$req = 'cmd=_notify-validate';

	foreach ($_POST as $key => $value) {
		$value = urlencode(stripslashes($value));
		$req .= "&$key=$value";
	}

	$header = "POST /cgi-bin/webscr HTTP/1.0\r\n";
	$header .= "Content-Type: application/x-www-form-urlencoded\r\n";
	$header .= "Content-Length: " . strlen($req) . "\r\n\r\n";
	$fp = fsockopen ('ssl://www.paypal.com', 443, $errno, $errstr, 30);
	$item_name = $_POST['item_name'];
	$item_number = $_POST['item_number'];
	$payment_status = $_POST['payment_status'];
	$payment_amount = $_POST['mc_gross'];
	$payment_currency = $_POST['mc_currency'];
	$txn_id = $_POST['txn_id'];
	$receiver_email = $_POST['receiver_email'];
	$payer_email = $_POST['payer_email'];
	$transaction_subject = $_POST['transaction_subject'];
	parse_str($_POST['custom'],$custom);

	if(!$fp){
		file_put_contents($oCL_page->getPage('paiement_bancaire_annonce_goldlive')."ERROR_".$now_concat."_POST.txt", print_r($_POST, true));
	}else{
		fputs ($fp, $header . $req);
		while (!feof($fp)) {
			$res = fgets ($fp, 1024);
			if (strcmp ($res, "VERIFIED") == 0) {
				// vérifier que payment_status a la valeur Completed
				if ( $payment_status == "Completed") {
					   if ( $email_account == $receiver_email) {
							# On récupère nos données et on les met dans le tableau associatif $datas.
							$tab_datas = explode('&', $transaction_subject);
							$datas = Array();
							
							foreach($tab_datas as $key=>$data){
								$tab_datas[$key] = explode('=', $data);
								$datas[$tab_datas[$key][0]] = $tab_datas[$key][1];
							}
							
							$nb_erreur = 0;
							
							# On charge les informations de notre client via id_personne.
							require_once('couche_metier/MSG.php');
							require_once('couche_metier/PCS_annonce.php');
							
							$oMSG = new MSG();
							$oPCS_annonce = new PCS_annonce();
							
							# On vérifie que le prix soit au moins de 1.00
							if($payment_amount < 1.60){
								$nb_erreur++;
							}
							
							# On vérifie que la monnaie soit l'euro.
							if($payment_currency != "EUR"){
								$nb_erreur++;
							}
							
							# On vérifie qu'il n'y ait pas d'erreur.
							if($nb_erreur == 0){
								# On met à jour l'annonce comme étant goldlive.
								
								$oMSG->setData('ID_ANNONCE', $datas['id_annonce']);
								$oMSG->setData('GOLDLIVE', 1);
								
								$oPCS_annonce->fx_modifier_goldlive_by_ID_ANNONCE($oMSG);
								
								$now_concat = date('Y-m-d-H-i-s');
								
								# On sauvegarde dans un fichier les données de l'achat.
								file_put_contents($oCL_page->getPage('paiement_bancaire_annonce_goldlive')."OK_IDP-".$datas['id_personne']."_IDA-".$datas['id_annonce']."_".$now_concat."_POST.txt", print_r($_POST, true));
							}else{
								file_put_contents($oCL_page->getPage('paiement_bancaire_annonce_goldlive')."ERROR_IDP-".$datas['id_personne']."_IDA-".$datas['id_annonce']."_".$now_concat."_POST.txt", print_r($_POST, true));
							}
						}else{
							file_put_contents($oCL_page->getPage('paiement_bancaire_annonce_goldlive')."ERROR_".$now_concat."_POST.txt", print_r($_POST, true));
						}
				}else {
					file_put_contents($oCL_page->getPage('paiement_bancaire_annonce_goldlive')."ERROR_".$now_concat."_POST.txt", print_r($_POST, true));
				}
				exit();
		   }else if (strcmp ($res, "INVALID") == 0) {
				// Transaction invalide
					file_put_contents($oCL_page->getPage('paiement_bancaire_annonce_goldlive')."ERROR_".$now_concat."_POST.txt", print_r($_POST, true));
				}
		}
		fclose ($fp);
	}	
}else{
	# Si $_POST['payment_status'] n'existe pas:
	session_start();
	$_SESSION['connexion']['message'] = "<span class='orange'>Vous avez tenté d'accéder à une page de manière non autorisée, vous avez été redirigé.</span><br /> ";
	$_SESSION['connexion']['message_affiche'] = false;
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_GET['id_contrat'])){
		$ID_CONTRAT = (int)$_GET['id_contrat'];
		if($ID_CONTRAT > 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_contrat.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/PCS_message.php');
			
			$oMSG = new MSG();
			$oPCS_contrat = new PCS_contrat();
			$oPCS_personne = new PCS_personne();
			$oPCS_message = new PCS_message();
			
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$nb_contrat = $oPCS_contrat->fx_compter_contrat_by_ID_CONTRAT_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			if($nb_contrat[0]['nb_contrat'] == 1){
				# On récupère le contrat.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				
				$contrat = $oPCS_contrat->fx_recuperer_contrat_by_ID_CONTRAT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				if($contrat[0]['STATUT_CONTRAT'] == "Validé"){
					# L'utilisateur annule un contrat déjà validé, on passe le statut à 'Annulé après validation'
					$oMSG->setData('STATUT_CONTRAT', 'Annulé après validation');
				}else if($contrat[0]['STATUT_CONTRAT'] == "En attente"){
					# Le contrat a été annulé alors qu'il avait pas été accepté auparavant, rien de spécial.
					$oMSG->setData('STATUT_CONTRAT', 'Annulé');
				}else{
					# Contrat n'est ni Validé ni en attente, soit il est refusé soit il est Annulé après validation, on arrête tout.
					$_SESSION['contrat']['message_affiche'] = false;
					$_SESSION['contrat']['message'] = "<span class='alert'>Ce contrat a déjà été traité, il est ".$contrat[0]['STATUT_CONTRAT'].".</span><br /><br />";
					header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
					die();
				}
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				
				$oPCS_contrat->fx_maj_STATUT_by_ID_CONTRAT($oMSG);
				
				# On récupère l'expediteur.
				$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
				
				$expediteur = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On récupère le destinataire.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
				
				$destinataire = $oPCS_contrat->fx_recuperer_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				$oMSG->setData('ID_PERSONNE', $destinataire[0]['ID_PERSONNE']);
				
				$destinataire = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On envoi un email.
				$additional_headers = "From: noreply@liveanim.fr \r\n";
				$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
				$destinataires = $expediteur[0]['EMAIL'].', '.$destinataire[0]['EMAIL'];
				$sujet = utf8_decode("LiveAnim [Annulation du contrat N°".$ID_CONTRAT."]");
				
				$message = "------------------------------\n";
				$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
				$message.= "------------------------------\n\n";
				$message.= utf8_decode("Bonjour, \n");
				$message.= utf8_decode("Nous vous informons que le contrat ".$ID_CONTRAT." a été annulé définitivement par ".$expediteur[0]['PSEUDO'].". \n\n");
				$message.= utf8_decode("Il n'est donc plus modifiable. Vous pouvez le consulter à cette adresse: ".$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT."\n\n");
				$message.= utf8_decode("------------------------------\n\n\n");
				$message.= utf8_decode("LiveAnim vous remercie de votre confiance.\n\n");
				$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
				
				mail($destinataires, $sujet, $message, $additional_headers);
				
				
				# On envoi un message à tous les prestataire qui ont leur pack actuel qui accepte ALERTE_NON_DISPONIBILITE et dont le département de l'annonce figure dans NB_DEPARTEMENT_ALERTE
				# On récupère d'abord le département de l'annonce.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				
				$departement = $oPCS_contrat->fx_recuperer_departement_annonce_lors_annulation_contrat($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				

				# On récupère ensuite tous les prestataires dont le pack actuel valide l'alerte et dont le département de l'annonce figure dans la liste des départements.
				$oMSG->setData('ID_DEPARTEMENT', $departement[0]['ID_DEPARTEMENT']);
				
				$prestataires = $oPCS_personne->fx_recuperer_prestataires_lors_annulation_contrat($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

				# On vérifie qu'on ai bien eu des résultats.
				if(!empty($prestataires[0]['ID_PERSONNE'])){
					# On défini ici ce qui n'est pas variable. (Moins de ressources utilisées si c'est pas refait inutilement en boucle !)
					$oMSG->setData('TITRE', "<span class='alert'>[Alerte]</span><br /><span class='orange'>Annulation d'un contrat dans votre département !</span>");
					$oMSG->setData('DATE_ENVOI', date('Y-m-d H:i:s'));
					$oMSG->setData('EXPEDITEUR', 0);// Correspond à LiveAnim.
					$oMSG->setData('TYPE_MESSAGE', 'Alerte annulation');
					$oMSG->setData('VISIBLE', 1);
					$oMSG->setData('STATUT_MESSAGE', 'Non lu');
					
					# Pour chaque prestataire récupéré on envoi un message.
					foreach($prestataires as $key=>$prestataire){
						# Si le prestataire en cours est différent du prestataire ou de l'organisateur qui a annulé le contrat alors on continue.
						if($prestataire['ID_PERSONNE'] != $expediteur[0]['ID_PERSONNE'] && $prestataire['ID_PERSONNE'] != $destinataire[0]['ID_PERSONNE']){
							# On prépare les variables du message.
							if($expediteur[0]['TYPE_PERSONNE'] != "Prestataire"){
								$expediteur[0]['TYPE_PERSONNE_modifié'] = "l'annonceur";
							}else{
								$expediteur[0]['TYPE_PERSONNE_modifié'] = "le prestataire";
							}
						
							# On envoi un message.
							$contenu=	"Bonjour ".$prestataire['PSEUDO'].", <br />".
										"<br />".
										"Vous recevez ce message automatique car un contrat vient d'être annulé dans l'un des départements que vous surveillez.<br />".
										"Le statut du contrat qui vient d'être annulé était <b class='rose'>".$contrat[0]['STATUT_CONTRAT']."</b> avant son annulation.<br />";
							if($expediteur[0]['TYPE_PERSONNE'] == "Prestataire"){
								$contenu.=	"C'est <a href='".$oCL_page->getPage('personne')."?id_personne=".$_SESSION['compte']['ID_PERSONNE']."'>".$expediteur[0]['TYPE_PERSONNE_modifié']."</a> qui a annulé le contrat.<br />";
							}else{
								$contenu.=	"C'est ".$expediteur[0]['TYPE_PERSONNE_modifié']." qui a annulé le contrat.<br />";
							}
							$contenu.=	"Vous pouvez visualiser directement l'annonce: <a href='".$oCL_page->getPage('annonce', 'absolu')."?id_annonce=".$contrat[0]['ID_ANNONCE']."'>Voir l'annonce</a><br />".
										"<br />".
										"En espérant que cette information vous sera utile.<br />".
										"<b class='rose'>L'équipe LiveAnim</b>.";
										
							$oMSG->setData('CONTENU', $contenu);
							
							
							$oMSG->setData('DESTINATAIRE', $prestataire['ID_PERSONNE']);					

							$ID_MESSAGE = $oPCS_message->fx_creer_message($oMSG)->getData(1);
							
							# On lie le message à la personne
							$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);		
							$oMSG->setData('ID_PERSONNE', $prestataire['ID_PERSONNE']);		
							
							$oPCS_message->fx_lier_message($oMSG);
						}# Fin du if	
					}# Fin du foreach($prestataires as $key=>$prestataire)
				}# Fin du if(!empty($prestataires[0]['ID_PERSONNE']))
						
				$_SESSION['contrat']['message_affiche'] = false;
				$_SESSION['contrat']['message'] = "<span class='valide'>Le contrat a bien été annulé. Un email a été envoyé à vous et votre correspondant.</span><br /><br />";
				header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
				
			}else{
				$_SESSION['historique_contrat']['message_affiche'] = false;
				$_SESSION['historique_contrat']['message'] = "<span class='alert'>Vous n'avez pas les droits nécessaires pour annuler ce contrat.</span><br /><br />";
				header('Location: '.$oCL_page->getPage('historique_contrat', 'absolu'));
			}
		}else{
			# Valeur de id_contrat incorrecte
			$_SESSION['historique_contrat']['message_affiche'] = false;
			$_SESSION['historique_contrat']['message'] = "<span class='alert'>Le contrat que vous essayez d'annuler n'existe pas.</span><br /><br />";
			header('Location: '.$oCL_page->getPage('historique_contrat', 'absolu'));
		}
	}else{
		# Pas de GET
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

$_SESSION['bannir_membre']['message_affiche'] = false;

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_bannissement_id_personne'])){
		$ID_PERSONNE = (int)$_POST['form_bannissement_id_personne'];
		$duree_bannissement = (int)$_POST['form_bannissement_duree'];
		$RAISON_SUPPRESSION = nl2br($_POST['form_bannissement_raison']);
		$PERSONNE_SUPPRIMEE = $_POST['form_bannissement_personne_supprimee'];
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_personne.php');
		
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		
		$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
		
		# On récupère les informations de la personne notamment son email car on va en avoir besoin.
		$personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
		
		$EMAIL = $personne[0]['EMAIL'];
		$PSEUDO = $personne[0]['PSEUDO'];
		
		# On voit si le ban est définitif ou temporaire.
		if($PERSONNE_SUPPRIMEE == "on"){
			$PERSONNE_SUPPRIMEE = 1;
			$duree_bannissement = 3000;
		}else{
			$PERSONNE_SUPPRIMEE = 0;
			
			# On va vérifier la valeur de la duree_bannissement.
			if($duree_bannissement == 0){
				$duree_bannissement = 3000;
			}
		}
		# On calcule la date de bannissement.
		$DATE_BANNISSEMENT = date("Y/m/d", mktime(0, 0, 0, date("m"), date("d")+$duree_bannissement,  date("Y")));
		
		# On écrit le message final.
		$oMSG->setData('EMAIL', $EMAIL);
		$oMSG->setData('DATE_BANNISSEMENT', $DATE_BANNISSEMENT);
		$oMSG->setData('DATE_SUPPRESSION_REELLE', date("Y-m-d"));
		$oMSG->setData('RAISON_SUPPRESSION', $RAISON_SUPPRESSION);
		$oMSG->setData('VISIBLE', 0);
		$oMSG->setData('PERSONNE_SUPPRIMEE', $PERSONNE_SUPPRIMEE);
		
		# On banni la personne.
		$oPCS_personne->fx_bannir_personne($oMSG);
			
		
		# On crée le message.
		if($PERSONNE_SUPPRIMEE == 1){
			$duree = "définitivement";
		}else{
			$duree = "temporairement";
		}
		
		# On envoi un email à la personne bannie.
		$additional_headers = "From: noreply@liveanim.fr \r\n";
		$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
		$destinataires = $EMAIL;
		$sujet = utf8_decode("Alerte LiveAnim [Bannissement de votre compte]");
		
		$message = "------------------------------\n";
		$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
		$message.= "------------------------------\n\n";
		$message.= utf8_decode("Bonjour ".$PSEUDO.", \n");
		$message.= utf8_decode("Notre service de modération vient de vous bannir ".$duree.". \n");
		if($PERSONNE_SUPPRIMEE == 1){
		$message.= utf8_decode("Le bannissement est définitif: \n\n");
		$message.= utf8_decode(str_replace("<br />", "\n", $RAISON_SUPPRESSION)." \n\n");
		$message.= utf8_decode("Si vous pensez avoir été victime d'une erreur, nous vous prions de nous contacter.\n Votre compte est bloqué et inaccessible mais vos données ne seront pas supprimées avant deux mois. \n");
		$message.= utf8_decode("Au revoir. \n");
		}else{
		$message.= utf8_decode("La durée du bannissement est de ".$duree_bannissement." jour(s): \n\n");
		$message.= utf8_decode(str_replace("<br />", "", $RAISON_SUPPRESSION)." \n\n");
		$message.= utf8_decode("Si vous pensez avoir été victime d'une erreur, nous vous prions de nous contacter.\n Votre compte est bloqué et inaccessible mais vos données ne seront pas supprimées avant deux mois. \n");
		$message.= utf8_decode("Votre compte sera automatiquement réactivé le ".$DATE_BANNISSEMENT.". \n");
		$message.= utf8_decode("LiveAnim vous encourage à lire les règles en attendant cette date.\nAu revoir. \n");
		}
		$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
		
		$_SESSION['bannir_membre']['message'] = "<span class='valide'>Le membre $PSEUDO a été banni $duree pour une durée de $duree_bannissement jour(s).<br />";

		
		if(mail($destinataires, $sujet, $message, $additional_headers)){
			# Si le mail a été correctement envoyé:		
			$_SESSION['bannir_membre']['message'].= "Un email lui a été envoyé.</span><br />";
		}else{
			$_SESSION['bannir_membre']['message'].= "Le serveur mail a eu un problème et aucun email n'a pu partir afin de prévenir l'utilisateur.</span><br />";
		}
		
		
		header('Location: '.$oCL_page->getPage('bannir_membre'));
		
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_cacher_commentaire_id_nouveaute'])){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_commentaire.php');
		
		$oMSG = new MSG();
		$oPCS_commentaire = new PCS_commentaire();
		
		$ID_NOUVEAUTE = (int)$_POST['form_cacher_commentaire_id_nouveaute'];
		$ID_COMMENTAIRE = (int)$_POST['form_cacher_commentaire_id_commentaire'];
		
		if($ID_NOUVEAUTE > 0 && $ID_COMMENTAIRE > 0){
			# On passe le commentaire en mode invisible.
			$oMSG->setData('ID_COMMENTAIRE', $ID_COMMENTAIRE);
			$oMSG->setData('ID_NOUVEAUTE', $ID_NOUVEAUTE);
			$oMSG->setData('VISIBLE', 0);
			
			$oPCS_commentaire->fx_cacher_commentaire($oMSG);
			
			$_SESSION['news']['message'] = "<span class='valide'>Le commentaire a été supprimé.</span>";
			$_SESSION['news']['message_affiche'] = false;
			header('Location: '.$oCL_page->getPage('news', 'absolu')."?id_news=".$ID_NOUVEAUTE);
		}else{
			# Ids incorrects
			header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
		}	
	}else{
		# Pas de POST.
		header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	if(isset($_POST['form_changer_rang_pseudo'])){
		# Si on reçoit les données du formulaire.
		$pseudo = ucfirst(trim($_POST['form_changer_rang_pseudo']));
		$type_personne = $_POST['form_changer_rang_type_personne'];
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_personne.php');
		
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		
		$oMSG->setData('PSEUDO', $pseudo);
		$oMSG->setData('TYPE_PERSONNE', $type_personne);
		
		# On vérifie que le membre existe bien.
		
		$nb_pseudo = $oPCS_personne->fx_compter_pseudo_by_PSEUDO($oMSG)->getData(1)->fetchAll();
		
		if($nb_pseudo[0]['nb_pseudo'] == 1){
			# Le membre existe, on vérifie le rang attribué.
			require_once('couche_metier/PCS_types.php');
			
			$oPCS_types = new PCS_types();
			
			$oMSG->setData('ID_TYPES', $type_personne);
			
			$nb_types = $oPCS_types->fx_compter_types_by_ID_TYPES($oMSG)->getData(1)->fetchAll();
			
			if($nb_types[0]['nb_types'] == 1){
				# Le type sélectionné existe, on valide.
				
				$oPCS_personne->fx_modifier_rang($oMSG);
		
				$_SESSION['administration']['message_affiche'] = false;
				$_SESSION['administration']['message'] = "<span class='valide'>Opération réussie. Le rang du membre a été modifié.</span><br />";
			}
			else{
				# Le rang n'existe pas.
				$_SESSION['administration']['message_affiche'] = false;
				$_SESSION['administration']['message'] = "<span class='alert'>Le nouveau rang spécifié n'existe pas.</span><br />";
			}
		}else{
		# Le membre n'existe pas.
			$_SESSION['administration']['message_affiche'] = false;
			$_SESSION['administration']['message'] = "<span class='alert'>Le membre n'existe pas.</span><br />";
		}
		header('Location: '.$oCL_page->getPage('changer_rang', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
session_start();

require_once('couche_metier/CL_page.php');
$oCL_page = new CL_page();

if(isset($_POST['form_connexion_pseudo'])){
	$PSEUDO = ucfirst(trim($_POST['form_connexion_pseudo']));
	$MDP = $_POST['form_connexion_mdp'];
	
	$_SESSION['connexion'] = array();
	$_SESSION['connexion']['message_affiche'] = false;
	
	if(!isset($_SESSION['connexion']['nb_tentative'])){
		
		# On autorise 5 tentative par session.
		
		$_SESSION['connexion']['nb_tentative'] = 0;
	}
	# Si le nombre de tentative est atteint, on envoit chier l'abruti.
	if($_SESSION['connexion']['nb_tentative'] >= 5){
		
		$_SESSION['connexion']['message'] = "<span class='alert'>Nombre maximal de tentatives de connexion atteint.</span><br />Si vous avez oublié votre mot de passe, vous pouvez faire une <a href='".$oCL_page->getPage('recuperation_mdp')."'>Récupération de mot de passe</a> !";
											
		header('Location: '.$oCL_page->getPage('accueil'));
		die();
	}
	
	# On vérifie que le login existe (pour aider l'utilisateur, fuck les hackeurs).
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/MSG.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	
	$oMSG->setData('PSEUDO', $PSEUDO);
	
	$nb_pseudo = $oPCS_personne->fx_compter_pseudo_by_PSEUDO($oMSG)->getData(1)->fetchAll();
	if($nb_pseudo[0]['nb_pseudo'] != 1){
		
		$_SESSION['connexion']['nb_tentative']++;
		$_SESSION['connexion']['message'] = "<span class='alert'>L'identifiant que vous avez rentré n'existe pas.</span><br />";
		header('Location: '.$oCL_page->getPage('accueil'));
		die();
	}
	
	# On va crypter le mot de passe fournit.

	require_once('couche_metier/CL_cryptage.php');
	$oCL_cryptage = new CL_cryptage();
	
	$MDP = $oCL_cryptage->Cryptage($MDP, $PSEUDO);
	
	$oMSG->setData('MDP', utf8_encode($MDP));
	
	# On vérifie que le login et le mot de passe renvoient bien un seul résultat.
	$nb_pseudo = $oPCS_personne->fx_compter_pseudo_by_PSEUDO_et_MDP($oMSG)->getData(1)->fetchAll();
	
	if($nb_pseudo[0]['nb_pseudo'] != 1){
		# S'il n'y a pas de résultats alors on augmente le nombre de tentatives et on arrête tout.
		$_SESSION['connexion']['nb_tentative']++;
		$_SESSION['connexion']['message'] = "<span class='alert'>Mot de passe incorrect.</span><br />";
		header('Location: '.$oCL_page->getPage('accueil'));
		die();
	}
	
	# On récupère les données du compte possédant ce PSEUDO pour ce MDP:
	$Personne = $oPCS_personne->fx_recuperer_compte_by_PSEUDO($oMSG)->getData(1)->fetchAll();
	
	# On formate la date de manière à pouvoir effectuer des calculs dessus.
	$Personne[0]['DATE_SUPPRESSION_REELLE_formatee'] = new DateTime($Personne[0]['DATE_SUPPRESSION_REELLE']);
	$Personne[0]['DATE_SUPPRESSION_REELLE_formatee'] = $Personne[0]['DATE_SUPPRESSION_REELLE_formatee']->format("Ymd");
	if($Personne[0]['DATE_SUPPRESSION_REELLE_formatee'][0] == "-"){
		$Personne[0]['DATE_SUPPRESSION_REELLE_formatee'][0] = "";
	}
	
	# On met la date au format FR.
	$tab_date_suppression = explode("-", $Personne[0]['DATE_SUPPRESSION_REELLE']);# On récupère la date dans un tableau de trois cases ([Y][M][D])
	$Personne[0]['DATE_SUPPRESSION_REELLE'] = date("d-m-Y", mktime(0, 0, 0, $tab_date_suppression[1], $tab_date_suppression[2],  $tab_date_suppression[0]));
	
	
	# On formate la date de manière à pouvoir effectuer des calculs dessus.
	$Personne[0]['DATE_BANNISSEMENT_formatee'] = new DateTime($Personne[0]['DATE_BANNISSEMENT']);
	$Personne[0]['DATE_BANNISSEMENT_formatee'] = $Personne[0]['DATE_BANNISSEMENT_formatee']->format("Ymd");
	if($Personne[0]['DATE_BANNISSEMENT_formatee'][0] == "-"){
		$Personne[0]['DATE_BANNISSEMENT_formatee'][0] = "";
	}
	
	# On met la date au format FR.
	$tab_date_bannissement = explode("-", $Personne[0]['DATE_BANNISSEMENT']);# On récupère la date dans un tableau de trois cases ([Y][M][D])
	$Personne[0]['DATE_BANNISSEMENT'] = date("d-m-Y", mktime(0, 0, 0, $tab_date_bannissement[1], $tab_date_bannissement[2],  $tab_date_bannissement[0]));
	
	
	# On vérifie que l'utilisateur ait bien le droit de se connecter.

	$nb_erreur = 0;
	$now = date("d-m-Y");
	$oNOW = new DateTime( $now );
	$now = $oNOW->format("Ymd");
	
	// echo $Personne[0]['DATE_SUPPRESSION_REELLE_formatee']."<br />".$Personne[0]['DATE_BANNISSEMENT_formatee']."<br />".$this_day."<br />".$now."<br />";
	
	if(strlen($Personne[0]['CLE_ACTIVATION']) != 0){
		# Le compte n'a pas été activé.
		$nb_erreur++;
		$_SESSION['connexion']['message'] = "<span class='alert'>Votre compte n'a pas été activé. Activez le grâce à l'e-mail reçu lors de votre inscription.</span><br />";
		header('Location: '.$oCL_page->getPage('accueil'));
	}
	
	if($Personne[0]['VISIBLE'] == false){
		if($Personne[0]['PERSONNE_SUPPRIMEE'] == true && ($Personne[0]['DATE_BANNISSEMENT_formatee'] <= $now)){
			# Le compte a été supprimé par l'utilisateur ou un tiers.
			$nb_erreur++;			
			$_SESSION['connexion']['message'] = "<span class='alert'>Votre compte a été supprimé.<br />En voici la raison:</span><br /><br />".
											   $Personne[0]['RAISON_SUPPRESSION']."<br /><br />".
											   "Si c'est une personne tierce qui a supprimée votre compte et que vous".
											   " souhaitez le récupérer, vous pouvez contacter notre service.<br /><br />La suppression réelle de votre compte".
											   " aura lieue aux alentours du: ".$Personne[0]['DATE_SUPPRESSION_REELLE'].".<br /><br />Jusqu'à cette date nous conservons vos informations".
											   " dans un but de statistiques. Elles ne seront pas dévoilées à des services tiers.<br />".
											   "Si toutefois vous souhaitez que nous les supprimions immédiatement alors envoyez nous un mail avec votre pseudo ".
											   " nous vous contacterons pour vérifier votre identité puis nous supprimerons définitivement toutes vos informations.<br />";
			header('Location: '.$oCL_page->getPage('accueil'));
			
		}else if($Personne[0]['PERSONNE_SUPPRIMEE'] == true && ($Personne[0]['DATE_BANNISSEMENT_formatee'] > $now)){
			# Le compte a été supprimé par l'équipe d'administration.
			$nb_erreur++;			
			$_SESSION['connexion']['message'] = "<span class='alert'>Votre compte a été supprimé par notre équipe.<br />En voici la raison:</span><br /><br />".
											   $Personne[0]['RAISON_SUPPRESSION']."<br /><br />";
			header('Location: '.$oCL_page->getPage('accueil'));
		
		}else if($Personne[0]['PERSONNE_SUPPRIMEE'] == false && ($Personne[0]['DATE_BANNISSEMENT_formatee'] > $now)){
			# Le compte a banni temporairement.
			$nb_erreur++;	
			$_SESSION['connexion']['message'] = "<span class='alert'>Votre compte a été banni temporairement par l'équipe de modération.<br />En voici la raison:</span><br /><br />".
											   $Personne[0]['RAISON_SUPPRESSION']."<br /><br />".
											   "Si vous pensez être victime d'une erreur, veuillez nous contacter. Abstenez vous dans le cas contraire.<br />".
											   "Votre compte sera automatiquement réactivé le:".$Personne[0]['DATE_BANNISSEMENT'].".";
			header('Location: '.$oCL_page->getPage('accueil'));
		}else if($Personne[0]['PERSONNE_SUPPRIMEE'] == false && ($Personne[0]['DATE_BANNISSEMENT_formatee'] <= $now)){
			# Le compte a été banni mais est à nouveau utilisable.
		
		}else{
			# Cas oublié ?
			$nb_erreur++;
			$_SESSION['connexion']['message'] = "<span class='alert'>Votre compte n'est pas accessible. Cela peut-être dû à une erreur, veuillez nous contacter.</span><br />";
			header('Location: '.$oCL_page->getPage('accueil'));
		}
	}
	
	
	
	if($nb_erreur == 0){
		# On récupère l'IP de l'utilisateur et on la stocke.
		$IP = $_SERVER["REMOTE_ADDR"];
			
		if($Personne[0]['TYPE_PERSONNE'] == "Prestataire"){
			$_SESSION['compte'] = array();
			$_SESSION['compte']['connecté'] = true;
			$_SESSION['compte']['première_visite'] = false;
			$_SESSION['compte']['date_connexion'] = $oNOW->format("YmdHis");
			$_SESSION['compte']['ID_PERSONNE'] = $Personne[0]['ID_PERSONNE'];
			$_SESSION['compte']['PSEUDO'] = $Personne[0]['PSEUDO'];
			$_SESSION['compte']['NOM'] = $Personne[0]['NOM'];
			$_SESSION['compte']['PRENOM'] = $Personne[0]['PRENOM'];
			$_SESSION['compte']['CIVILITE'] = $Personne[0]['CIVILITE'];
			$_SESSION['compte']['EMAIL'] = $Personne[0]['EMAIL'];
			$_SESSION['compte']['TYPE_PERSONNE'] = $Personne[0]['TYPE_PERSONNE'];
			$_SESSION['compte']['PARRAIN'] = $Personne[0]['PARRAIN'];
			$_SESSION['compte']['REDUCTION'] = $Personne[0]['REDUCTION'];
			$_SESSION['compte']['annonces_visitées'] = $Personne[0]['ANNONCES_VISITEES'];
			
			# On met en forme les annonces_visitées de manière à en faire un tableau.
			if(!empty($_SESSION['compte']['annonces_visitées'])){
				$_SESSION['compte']['annonces_visitées'] = explode('/', $_SESSION['compte']['annonces_visitées']);
			}else{
				$_SESSION['compte']['annonces_visitées'] = array();
			}
			
			# On récupère le pack actif de la personne.
			require_once('couche_metier/PCS_pack.php');
			$oPCS_pack = new PCS_pack();
					
			$oMSG->setData('ID_PERSONNE', $Personne[0]['ID_PERSONNE']);
			$oMSG->setData('limit', 'LIMIT 0,1');
			
			$pack_personne = $oPCS_pack->fx_recuperer_pack_actif_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			
			# On vérifie que le pack est encore actif et on met en forme les dates.
			if(isset($pack_personne[0]['ID_PACK']) && !empty($pack_personne[0]['ID_PACK'])){
				# Il y a bien un pack d'activé, on va revérifier au cas où avec un traitement logiciel.
				
				$DATE_ACHAT = $pack_personne[0]['DATE_ACHAT'];
				$DATE_FIN = $pack_personne[0]['DATE_FIN'];
				
				$tab_date_achat = explode('-', $DATE_ACHAT);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])	
				$tab_date_achat2 = explode(' ', $tab_date_achat[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
				$tab_date_achat3 = explode(':', $tab_date_achat2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
				
				$tab_date_fin = explode('-', $DATE_FIN);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])
				$tab_date_fin2 = explode(' ', $tab_date_fin[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
				$tab_date_fin3 = explode(':', $tab_date_fin2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
				
				# On stocke la date de fin de validité sous son format affichable et calculé.
				$date_fin_validite = date("d-m-Y H:i:s", mktime($tab_date_fin3[0], $tab_date_fin3[1], $tab_date_fin3[2], $tab_date_fin[1], $tab_date_fin2[0],  $tab_date_fin[0]));
				$date_fin_validite_formatee = date("YmdHis", mktime($tab_date_fin3[0], $tab_date_fin3[1], $tab_date_fin3[2], $tab_date_fin[1], $tab_date_fin2[0],  $tab_date_fin[0]));
				
				$maintenant = $oNOW->format("YmdHis");
				
				if($date_fin_validite_formatee < $maintenant){
					# La date est dépassée, le pack n'est pas activé.
					$_SESSION['pack']['activé'] = false;
					$_SESSION['pack']['DATE_ACHAT'] = date("d-m-Y H:i:s", mktime($tab_date_achat3[0], $tab_date_achat3[1], $tab_date_achat3[2], $tab_date_achat[1], $tab_date_achat2[0],  $tab_date_achat[0]));
					$_SESSION['pack']['ID_PACK'] = $pack_personne[0]['ID_PACK'];
					$_SESSION['pack']['NOM'] = $pack_personne[0]['NOM'];
					$_SESSION['pack']['TYPE_PACK'] = $pack_personne[0]['TYPE_PACK'];
					$_SESSION['pack']['PRIX_BASE'] = $pack_personne[0]['PRIX_BASE'];
					$_SESSION['pack']['DUREE'] = $pack_personne[0]['DUREE'];
					$_SESSION['pack']['CV_VISIBILITE'] = 0;
					$_SESSION['pack']['CV_ACCESSIBLE'] = 0;
					$_SESSION['pack']['NB_FICHES_VISITABLES'] = 0;
					$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = false;
					$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = false;
					$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = 0;
					$_SESSION['pack']['PARRAINAGE_ACTIVE'] = false;
					$_SESSION['pack']['PREVISUALISATION_FICHES'] = false;
					$_SESSION['pack']['CONTRATS_PDF'] = false;
					$_SESSION['pack']['SUIVI'] = false;
					$_SESSION['pack']['PUBS'] = true;
					$_SESSION['pack']['date_fin_validite'] = $date_fin_validite;
					$_SESSION['pack']['date_fin_validite_formatee'] = $date_fin_validite_formatee;
				}else{
					# Le pack est encore valide, on l'active.
					$_SESSION['pack']['activé'] = true;
					$_SESSION['pack']['DATE_ACHAT'] = date("d-m-Y H:i:s", mktime($tab_date_achat3[0], $tab_date_achat3[1], $tab_date_achat3[2], $tab_date_achat[1], $tab_date_achat2[0],  $tab_date_achat[0]));
					$_SESSION['pack']['ID_PACK'] = $pack_personne[0]['ID_PACK'];
					$_SESSION['pack']['NOM'] = $pack_personne[0]['NOM'];
					$_SESSION['pack']['TYPE_PACK'] = $pack_personne[0]['TYPE_PACK'];
					$_SESSION['pack']['PRIX_BASE'] = $pack_personne[0]['PRIX_BASE'];
					$_SESSION['pack']['DUREE'] = $pack_personne[0]['DUREE'];
					$_SESSION['pack']['CV_VISIBILITE'] = $pack_personne[0]['CV_VISIBILITE'];
					$_SESSION['pack']['CV_ACCESSIBLE'] = $pack_personne[0]['CV_ACCESSIBLE'];
					$_SESSION['pack']['NB_FICHES_VISITABLES'] = $pack_personne[0]['NB_FICHES_VISITABLES'];# On ne charge pas ici le NB_FICHES_VISITABLES du pack mais celui 
																								 # de la table pack_personne, voir couche_metier/VIEW_pack.php.
					$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = $pack_personne[0]['CV_VIDEO_ACCESSIBLE'];
					$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = $pack_personne[0]['ALERTE_NON_DISPONIBILITE'];
					$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = $pack_personne[0]['NB_DEPARTEMENTS_ALERTE'];
					$_SESSION['pack']['PARRAINAGE_ACTIVE'] = $pack_personne[0]['PARRAINAGE_ACTIVE'];
					$_SESSION['pack']['PREVISUALISATION_FICHES'] = $pack_personne[0]['PREVISUALISATION_FICHES'];
					$_SESSION['pack']['CONTRATS_PDF'] = $pack_personne[0]['CONTRATS_PDF'];
					$_SESSION['pack']['SUIVI'] = $pack_personne[0]['SUIVI'];
					$_SESSION['pack']['PUBS'] = $pack_personne[0]['PUBS'];
					$_SESSION['pack']['date_fin_validite'] = $date_fin_validite;
					$_SESSION['pack']['date_fin_validite_formatee'] = $date_fin_validite_formatee;
				}
			}else{
				# Il n'y a pas de pack actif.
				$_SESSION['pack']['activé'] = false;
				$_SESSION['pack']['DATE_ACHAT'] = "";
				$_SESSION['pack']['ID_PACK'] = "";
				$_SESSION['pack']['NOM'] = "";
				$_SESSION['pack']['TYPE_PACK'] = "";
				$_SESSION['pack']['PRIX_BASE'] ="";
				$_SESSION['pack']['DUREE'] = "";
				$_SESSION['pack']['CV_VISIBILITE'] = 0;
				$_SESSION['pack']['CV_ACCESSIBLE'] = 0;
				$_SESSION['pack']['NB_FICHES_VISITABLES'] = 0;
				$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = false;
				$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = false;
				$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = 0;
				$_SESSION['pack']['PARRAINAGE_ACTIVE'] = false;
				$_SESSION['pack']['PREVISUALISATION_FICHES'] = false;
				$_SESSION['pack']['CONTRATS_PDF'] = false;
				$_SESSION['pack']['SUIVI'] = false;
				$_SESSION['pack']['PUBS'] = true;
				$_SESSION['pack']['date_fin_validite'] = "00-00-0000 00:00:00";
				$_SESSION['pack']['date_fin_validite_formatee'] = "00000000000000";
			}
		}else if($Personne[0]['TYPE_PERSONNE'] == "Organisateur"){
			$_SESSION['compte'] = array();
			$_SESSION['compte']['connecté'] = true;
			$_SESSION['compte']['première_visite'] = false;
			$_SESSION['compte']['date_connexion'] = $oNOW->format("YmdHis");
			$_SESSION['compte']['ID_PERSONNE'] = $Personne[0]['ID_PERSONNE'];
			$_SESSION['compte']['PSEUDO'] = $Personne[0]['PSEUDO'];
			$_SESSION['compte']['NOM'] = $Personne[0]['NOM'];
			$_SESSION['compte']['PRENOM'] = $Personne[0]['PRENOM'];
			$_SESSION['compte']['CIVILITE'] = $Personne[0]['CIVILITE'];
			$_SESSION['compte']['EMAIL'] = $Personne[0]['EMAIL'];
			$_SESSION['compte']['TYPE_PERSONNE'] = $Personne[0]['TYPE_PERSONNE'];
			$_SESSION['compte']['PARRAIN'] = $Personne[0]['PARRAIN'];
			
			# On permet à un Organisateur de parrainer.
			$_SESSION['pack']['PARRAINAGE_ACTIVE'] = true;
			$_SESSION['pack']['CONTRATS_PDF'] = true;
			$_SESSION['pack']['PUBS'] = true;
			
		
		}else if($Personne[0]['TYPE_PERSONNE'] == "Admin"){
			$_SESSION['compte'] = array();
			$_SESSION['compte']['connecté'] = true;
			$_SESSION['compte']['première_visite'] = false;
			$_SESSION['compte']['date_connexion'] = $oNOW->format("YmdHis");
			$_SESSION['compte']['ID_PERSONNE'] = $Personne[0]['ID_PERSONNE'];
			$_SESSION['compte']['PSEUDO'] = $Personne[0]['PSEUDO'];
			$_SESSION['compte']['NOM'] = $Personne[0]['NOM'];
			$_SESSION['compte']['PRENOM'] = $Personne[0]['PRENOM'];
			$_SESSION['compte']['CIVILITE'] = $Personne[0]['CIVILITE'];
			$_SESSION['compte']['EMAIL'] = $Personne[0]['EMAIL'];
			$_SESSION['compte']['TYPE_PERSONNE'] = $Personne[0]['TYPE_PERSONNE'];
			$_SESSION['compte']['PARRAIN'] = $Personne[0]['PARRAIN'];
			$_SESSION['compte']['REDUCTION'] = $Personne[0]['REDUCTION'];
			$_SESSION['compte']['annonces_visitées'] = $Personne[0]['ANNONCES_VISITEES'];
			
			# On permet à un Admin de tout faire.
			$_SESSION['pack']['activé'] = false;
			$_SESSION['pack']['DATE_ACHAT'] = date('d-m-Y H:i:s');# On dit que la date de l'achat correspond à maintenant.
			$_SESSION['pack']['ID_PACK'] = 5; # Pack Live MAX
			$_SESSION['pack']['NOM'] = "Pack Admin"; # On explique que c'est pas vraiment le live max. ^^
			$_SESSION['pack']['TYPE_PACK'] = "Admin";
			$_SESSION['pack']['PRIX_BASE'] = 0;
			$_SESSION['pack']['DUREE'] = 12;
			$_SESSION['pack']['CV_VISIBILITE'] = 10;
			$_SESSION['pack']['CV_ACCESSIBLE'] = 10;
			$_SESSION['pack']['NB_FICHES_VISITABLES'] = 1000000;
			$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = true;
			$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = true;
			$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = 5;
			$_SESSION['pack']['PARRAINAGE_ACTIVE'] = true;
			$_SESSION['pack']['PREVISUALISATION_FICHES'] = true;
			$_SESSION['pack']['CONTRATS_PDF'] = true;
			$_SESSION['pack']['SUIVI'] = true;
			$_SESSION['pack']['PUBS'] = false;
			$_SESSION['pack']['date_fin_validite'] = "25-12-2100 00:00:00";
			$_SESSION['pack']['date_fin_validite_formatee'] = "25122100000000";
			
		}else{
			$_SESSION = array();# On écrase la session.
			$_SESSION['compte']['connecté'] = false;
			
			$_SESSION['connexion']['message'].= "<span class='alert'>Erreur. Veuillez contacter un administrateur via notre formulaire de contact.<br />Error: Type de personne non définit. Accès interdit.</span><br />";
		
		}# Fin du gros if sur TYPE_PERSONNE.
		
		# On crée l'IP.
		$oPCS_personne->fx_creer_IP($oMSG);# Si elle existe déjà ça marchera pas mais on s'en fout.
		
		# On lie l'IP.
		$now = date('Y-m-d H:i:s');
		$oMSG->setData('ID_PERSONNE', $Personne[0]['ID_PERSONNE']);
		$oMSG->setData('ID_IP', $IP);
		$oMSG->setData('IP_COOKIE', $_COOKIE['lang']);# lang => IP, on l'appelle langue pour tromper les tricheurs idiots.
		$oMSG->setData('COOKIE_DETRUIT', $_COOKIE['admin']);# admin => sert à vérifier le premier cookie, on sait si lang a été détruit ou pas.
		$oMSG->setData('DATE_CONNEXION', $now);
				
		$oPCS_personne->fx_lier_IP_et_PERSONNE($oMSG);# On sauvegarde le tout.
		
		setcookie('lang', $IP, (time() + 60*60*24*365));# On met à jour l'IP du cookie.
		setcookie('admin', 0, (time() + 60*60*24*365));# Ce cookie signifie qu'on a crée le cookie lang et donc que lang n'existait pas.
		
		unset($Personne);# On détruit les infos pour pas qu'elles soient accessibles (ça sert à qqch ?^^)
		
		# On redirige.
		if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
			header('Location: '.$oCL_page->getPage('administration'));
		}else{
			header('Location: '.$oCL_page->getPage('gestion_compte'));
		}
	}

}else{
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_personne.php');

# On charge la librairie facebook
require_once('ressources/facebook/facebook.php');

# On déclare nos constantes.
define('CLE_PUBLIQUE', '219360858133211');
define('CLE_SECRETE', 'f0e00266bfcfc71a3c648da4900d614a');

# On instancie nos objets.
$oMSG = new MSG();
$oPCS_personne = new PCS_personne();
$oFacebook = new Facebook(array(
		  'appId'  => CLE_PUBLIQUE,
		  'secret' => CLE_SECRETE,
		  'cookie' => true,
));

try{
	# On récupère les identifiants du visiteur
	$user_id = $oFacebook->getUser();
	
	# On récupère l'utilisateur
	$user_facebook = $oFacebook->api('/me');

}catch(Exception $e){
	# Sinon alors c'est que le membre n'est pas connecté à Facebook.
	echo "Une erreur s'est produite avec Facebook. Veuillez vous connecter normalement, merci.<br />";
	$json_user_id = json_encode($user_id);
	$json_user_facebook = json_encode($user_facebook);
	?>
	<script type="text/javascript">
		console.log(<?php echo "'user_id: '+".$json_user_id; ?>);
		console.log(<?php echo "'user_facebook: '+".$json_user_facebook; ?>);
		console.log(<?php echo "'Error: '+'".$e; ?>');
	</script>
	<?php
	//die();
}	
var_dump($user_id);

# On vérifie qu'on ai bien récupéré qqn.
if(isset($user_id) && !empty($user_id)){

	# On récupère le compte utilisateur pour l'uid facebook en cours.
	$oMSG->setData('ID_FACEBOOK', $uid);
	
	$Personne = $oPCS_personne->fx_recuperer_compte_by_ID_FACEBOOK($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# Si un compte possède cet ID alors on charge la session et on connecte le membre.
	if(isset($Personne) && !empty($Personne)){
		
	}else{
		# Sinon on dit au membre qu'il n'a pas lié son compte LiveAnim à un compte Facebook.
		$_SESSION['connexion']['message'] = "<span class='orange'>Vous n'avez pas lié votre compte Facebook à votre compte LiveAnim.<br />".
		"Pour lier votre compte Facebook il vous suffit de vous connecter normalement puis d'aller dans 'Mon profil'-> 'Facebook' et de lier le compte !<br />".
		"Vous pourrez ainsi vous connecter d'un simple clic à l'avenir. <span class='petit'>(À condition d'être connecté à Facebook !)</span></span><br />";
		$_SESSION['connexion']['message_affiche'] = false;
		
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Sinon alors c'est que le membre n'est pas connecté à Facebook.
	$_SESSION['connexion']['message'] = "<span class='orange'>Vous n'êtes pas connecté à Facebook.</span><br />";
	$_SESSION['connexion']['message_affiche'] = false;
	
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}

?>


<?php
/** ### Récupérer des informations de la BDD de FB ###

	$fql = "SELECT uid, name, first_name, middle_name, last_name, sex, locale, pic_small_with_logo, username ".
	"FROM user WHERE uid=".$uid;
	
	$params = Array(
			'method' => 'fql_query',
			'query' => $fql,
			'callback' => '',
				);
				
	$fb = $oFacebook->api($params);
	
	var_dump($fb);
*/
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(isset($_POST['form_contact_raison'])){

	$nb_erreur = 0;
	$_SESSION['contact']['message_affiche'] = false;
	$_SESSION['contact']['message'] = "";
	$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
	
	# On récupère les informations.
	if(!$_SESSION['compte']['connecté']){
		$pseudo = preg_replace($chaines_interdites, "", trim($_POST['form_contact_pseudo']));
		$email = preg_replace($chaines_interdites, "", trim($_POST['form_contact_email']));
	}else{
		$pseudo = $_SESSION['compte']['PSEUDO'];
		$email = $_SESSION['compte']['EMAIL'];
	}
	$raison = (int)$_POST['form_contact_raison'];
	$description = nl2br(preg_replace($chaines_interdites, "", trim($_POST['form_contact_descriptif'])));

	# On met en session les variables.
	$_SESSION['contact']['pseudo'] = $pseudo;
	$_SESSION['contact']['email'] = $email;
	$_SESSION['contact']['raison'] = $raison;
	$_SESSION['contact']['description'] = $description;
	
	
	# On vérifie que les variables ne soient pas vides.
	if(empty($raison) || empty($description) || empty($pseudo) || empty($email)){
		$nb_erreur++;
		$_SESSION['contact']['message'].= "<span class='orange'>Un des champs obligatoire est vide.</span><br />";
	}
	
	# SI le membre n'est pas connecté alors on  vérifie qu'il a rentré un email correct.
	if(!$_SESSION['compte']['connecté']){
		if(!filter_var($email, FILTER_VALIDATE_EMAIL)){
			$nb_erreur++;
			$_SESSION['contact']['message'].= "<span class='alert'>Votre email est invalide.</span><br />";
		}
	}

	# On vérifie que la raison soit valide
	if($raison == 0){
		$nb_erreur++;
		$_SESSION['contact']['message'].= "<span class='orange'>La raison sélectionnée est invalide.</span><br />";	
	}
	
	# On vérifie que le membre ne nous envoie pas plein de mails.
	if($_SESSION['contact']['dernier_contact_envoye']){
		if(date('YmdHis') - $_SESSION['contact']['dernier_contact_envoye'] < 120){
			$nb_erreur++;
			$_SESSION['contact']['message'].= "<span class='orange'>Vous ne pouvez pas renvoyer d'email immédiatement, veuillez patienter quelques minutes.</span><br />";	
		}
	}
	
	if($nb_erreur == 0){
		switch($raison){
			case 1: $raison = "Problème connexion";
				break;
			case 2: $raison = "Compte banni";
				break;
			case 3: $raison = "Compte suspendu temporairement";
				break;
			case 4: $raison = "Bug";
				break;
			case 5: $raison = "Problème affichage";
				break;
			case 6: $raison = "Faille de sécurité";
				break;
			case 7: $raison = "Non précisé";
				break;
		}
		
		# On envoi l'email:		
		$additional_headers = "From: contact@liveanim.fr \r\n";
		$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
		$destinataires = "contact@liveanim.com";
		$sujet = utf8_decode("[".$pseudo."] ".$raison);
		
		$message = "------------------------------\n";
		$message.= utf8_decode("Mail envoyé depuis le formulaire de contact (".$oCL_page->getpage('contact', 'absolu').") \n");
		$message.= utf8_decode("Expéditeur: ".$pseudo." \n");
		$message.= utf8_decode("Email: ".$email." \n");
		$message.= utf8_decode("Sujet: ".$raison." \n");
		$message.= utf8_decode("Corps du message: \n ".$description." \n\n");
		$message.= utf8_decode("------------------------------\n\n\n");
		$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
		
		if(mail($destinataires, $sujet, $message, $additional_headers)){
			# Si le mail a été correctement envoyé:			
			$_SESSION['contact']['message'].= 
				"<span class='valide'>L'email a bien été envoyé. Nous vous remercions.</span><br /><br />";
		}else{
			$_SESSION['contact']['message'].= 
				"<span class='valide'>Pour une raison indépendante de notre volonté l'email n'a pas pu être envoyé.<br />
				Notre serveur mail semble être hors service pour le moment, veuillez réessayer.<br />
				<span class='petit'>Si l'opération échoue plus d'une fois c'est que notre hébergeur rencontre un problème, dans ce cas inutile de réessayer
				immédiatement, cela peut aller de quelques minutes à quelques heures avant que ce service ne redevienne opérationnel.<br /></span>
				Nous nous excusons pour la gêne occasionnée.</span><br /><br />";
		}
		
		# On supprime les infos sauvegardées du formulaire.
		unset($_SESSION['contact']['pseudo']);
		unset($_SESSION['contact']['email']);
		unset($_SESSION['contact']['raison']);
		unset($_SESSION['contact']['description']);
		
		$_SESSION['contact']['dernier_contact_envoye'] = date('YmdHis');
		header('Location:'.$oCL_page->getpage('contact'));
	}else{
		$_SESSION['contact']['message'].= "<span class='alert'>Une erreur est survenue, l'opération a été annulée.</span><br />";
		header('Location:'.$oCL_page->getpage('contact'));
	}
}else{
	# Pas de POST.
	header('Location:'.$oCL_page->getpage('accueil'));
}
?><?php
session_start();

$page_actuelle = $_SESSION['page_actuelle'];
require_once('couche_metier/CL_page.php');
$oCL_page = new CL_page();

$_SESSION = array();
session_destroy();
session_unset();

header('Location: '.$oCL_page->getPage($page_actuelle));
?>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['form_envoyer_invitations_emails'])){
		# On initialise nos variables.
		$_SESSION['envoyer_invitations']['message'] = "";
		$_SESSION['envoyer_invitations']['message_affiche'] = false;
	
		$EMAILS = explode(';', $_POST['form_envoyer_invitations_emails']);
		
		# Si le membre n'a pas encore envoyé d'invitation de masse.
		if(!isset($_SESSION['envoyer_invitations']['invitations_envoyees'])){
			$_SESSION['envoyer_invitations']['invitations_envoyees'] = Array();
		}
		
		# On définit le message envoyé, format HTML.
		$MESSAGE = "<br />";
		$MESSAGE.= "Bonjour ! <br />";
		$MESSAGE.= "Je t'invite à t'inscrire gratuitement sur ce site: <a href='".$oCL_page->getPage('inscription')."?parrain=".$_SESSION['compte']['ID_PERSONNE']."#inscriptionh2'>LiveAnim</a> ! <br />";
		$MESSAGE.= "<br />";
		$MESSAGE.= "Ce site permet d'organiser des soirées ou spectacles avec toutes sortes d'artistes de façon très simple en mettant en contact artistes et organisateurs. <br />";
		$MESSAGE.= "<br />";
		$MESSAGE.= "De plus en t'inscrivant via le lien ci-dessus, je bénéficierais de réductions ! <br />";
		$MESSAGE.= "<br />";
		$MESSAGE.= "À bientôt sur LiveAnim.com !<br />";
		$MESSAGE.= "<br />";
		$MESSAGE.= $_SESSION['compte']['PSEUDO'].".";
		$MESSAGE.= "<br />";
		$MESSAGE.= "<center><a href='".$oCL_page->getPage('inscription')."?parrain=".$_SESSION['compte']['ID_PERSONNE']."#inscriptionh2'><img src='".$oCL_page->getPage('accueil', 'absolu').$oCL_page->getImage('logo_liveanim')."' alt='Logo LiveAnim' title='Inscris-toi !' /></a></center>";
		
		# On paramètre l'email.
		$additional_headers = "From: ".$_SESSION['compte']['EMAIL']." \r\n";
		$additional_headers.= "MIME-Version: 1.0 \n";
		$additional_headers.= "Content-Type: text/html; charset=\"ISO-8859-1\" \n";
		$additional_headers.= "<html><head><title>Message reçu de ".$_SESSION['compte']['PSEUDO']."</title><meta http-equiv='Content-Type' Content='text/html; charset=iso-8859-1'></head> \n";
		$sujet = utf8_decode("LiveAnim [Invitation de ".$_SESSION['compte']['PSEUDO']." !]");
		$message = "<body>";
		$message.= utf8_decode($MESSAGE);
		$message.= "</body></html>";
				
		foreach($EMAILS as $key => $email){
			# On nettoie l'email.
			$email = trim($email);
			
			if(!empty($email)){
				# On vérifie que l'email soit de format valide.
				if(filter_var($email, FILTER_VALIDATE_EMAIL)){
					# On vérifie que la personne n'ait pas déjà envoyé un email d'invitation à cet email.
					if(!in_array($email, $_SESSION['envoyer_invitations']['invitations_envoyees'])){
						# On note l'adresse e-mail comme étant invitée.
						$_SESSION['envoyer_invitations']['invitations_envoyees'][] = $email;
						
						if(mail($email, $sujet, $message, $additional_headers)){
							$mail_envoye = true;
						}else{
							$mail_envoye = false;
							break;
						}
					}else{
						$mail_envoye = true;
					}
				}else{
					$_SESSION['envoyer_invitations']['message'].= "<span class='orange'>Un des emails saisi n'est pas valide.</span><br />";
					$mail_envoye = true;
				}
			}else{
				$mail_envoye = true;
			}
		}
		
		if($mail_envoye){
			$_SESSION['envoyer_invitations']['message'].= "<span class='rose'>Les invitations ont été envoyées.</span><br />";
		}else{
			$_SESSION['envoyer_invitations']['message'].= "<span class='alert'>Un souci technique nous empêche d'envoyer des e-mails pour le moment, nous nous excusons sincèrement de ce contretemps qui n'est pas de notre dû.<br />Merci.</span><br />";
		}
		
		header('Location: '.$oCL_page->getPage('envoyer_invitations', 'absolu'));
	}else{
		header('Location: '.$oCL_page->getPage('envoyer_invitations', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}
error_reporting(-1);
# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_envoyer_message_admin_destinataires'])){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_personne.php');
		require_once('couche_metier/PCS_message.php');
		
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		$oPCS_message = new PCS_message();
		
		# On définit nos variables.
		$nb_erreur = 0;
		
		$_SESSION['envoyer_message_admin']['message_affiche'] = false;
		$_SESSION['envoyer_message_admin']['message'] = "";
		
		# On récupère les champs.
		$destinataires = $_POST['form_envoyer_message_admin_destinataires'];
		$DESTINATAIRE[0]['ID_PERSONNE'] = $_POST['form_envoyer_message_admin_destinataire'];# On le met dans un tableau pour faire un futur foreach.
		$TITRE = trim($_POST['form_envoyer_message_admin_titre']);
		$MESSAGE = nl2br(trim($_POST['form_envoyer_message_admin_message']));
		
		# On les stocke en session.
		$_SESSION['envoyer_message_admin']['destinataires'] = $destinataires;
		$_SESSION['envoyer_message_admin']['DESTINATAIRE'] = $DESTINATAIRE[0]['ID_PERSONNE'];
		$_SESSION['envoyer_message_admin']['TITRE'] = $TITRE;
		$_SESSION['envoyer_message_admin']['MESSAGE'] = $MESSAGE;
		
		# On vérifie l'intégrité des données.
		if(empty($destinataires) || empty($TITRE) || empty($MESSAGE)){
			$nb_erreur++;
			$_SESSION['envoyer_message_admin']['message'].= "<span class='alert'>Un des champs obligatoire est vide.</span><br />";
		}
		
		switch($destinataires){
			case 1:
				# Un membre en particulier
				# On vérifie que l'ID transmis est correct.
				if((int)$DESTINATAIRE[0]['ID_PERSONNE'] == 0){
					$nb_erreur++;
					$_SESSION['envoyer_message_admin']['message'].= "<span class='alert'>Vous n'avez pas sélectionné de destinataire valide.</span><br />";
				}else{
					# On récupère l'email de la personne.
					$oMSG->setData('ID_PERSONNE', $DESTINATAIRE[0]['ID_PERSONNE']);
					
					$DESTINATAIRE = $oPCS_personne->fx_recuperer_compte_min_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				}
				break;
				
			case 2:
				# Tous les organisateurs

				$oMSG->setData('TYPE_PERSONNE', 'Organisateur');
				$oMSG->setData('VISIBLE', 1);
				
				$DESTINATAIRE = $oPCS_personne->fx_recuperer_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				break;
				
			case 3:
				# Tous les prestataires

				$oMSG->setData('TYPE_PERSONNE', 'Prestataire');
				$oMSG->setData('VISIBLE', 1);
				
				$DESTINATAIRE = $oPCS_personne->fx_recuperer_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				break;
				
			case 4:
				# Tous les admins
				# On récupère tous les organisateurs de la BDD.
				$oMSG->setData('TYPE_PERSONNE', 'Admin');
				$oMSG->setData('VISIBLE', 1);
				
				$DESTINATAIRE = $oPCS_personne->fx_recuperer_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				break;
		}# Fin Switch.
		
		# S'il n'y a pas d'erreur.
		if($nb_erreur == 0){
			
			if($_POST['form_envoyer_message_admin_type_message'] == "mail"){
				# Si le message doit être envoyé par email:
				$additional_headers = "From: contact@liveanim.fr \r\n";
				$additional_headers.= "MIME-Version: 1.0 \n";
				$additional_headers.= "Content-Type: text/html; charset=\"ISO-8859-1\" \n";
				$additional_headers.= "<html><head><title>".$TITRE."</title><meta http-equiv='Content-Type' Content='text/html; charset=iso-8859-1'></head> \n";
				$sujet = utf8_decode($TITRE);
				$message = "<body>";
				$message.= utf8_decode($MESSAGE);
				$message.= "</body></html>";
				
			
				# Pour chaque destinataire on envoit le message.
				foreach($DESTINATAIRE as $key => $destinataire){
					$destinataires = $destinataire['EMAIL'];

					if(mail($destinataires, $sujet, $message, $additional_headers)){
						$mail_envoye = true;
					}else{
						$mail_envoye = false;
						break;
					}
				}
				
				if($mail_envoye){
					$_SESSION['envoyer_message_admin']['message'].= "<span class='rose'>Le mail a bien été envoyé.</span><br />";
				}else{
					$_SESSION['envoyer_message_admin']['message'].= "<span class='alert'>Le mail n'a pas pu être envoyé.</span><br />";
				}
			}else if($_POST['form_envoyer_message_admin_type_message'] == "mp"){
				# Sinon si il doit être envoyé par MP via le site:
				# On crée le message.
				$oMSG->setData('TITRE', $TITRE);
				$oMSG->setData('CONTENU', $MESSAGE);
				$oMSG->setData('DATE_ENVOI', date('Y-m-d H:i:s'));
				$oMSG->setData('EXPEDITEUR', 0);
				$oMSG->setData('DESTINATAIRE', 0);
				$oMSG->setData('TYPE_MESSAGE', 'Message général');
				$oMSG->setData('VISIBLE', 1);
				
				$ID_MESSAGE = $oPCS_message->fx_creer_message($oMSG)->getData(1);
				
				$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
				$oMSG->setData('STATUT_MESSAGE', 'Non lu');
				
				# Pour chaque destinataire on envoit le message.
				foreach($DESTINATAIRE as $key => $destinataire){
					$oMSG->setData('ID_PERSONNE', $destinataire['ID_PERSONNE']);
				
					$oPCS_message->fx_lier_message($oMSG)->getData(1);
				}
				
				
			
				# On valide et on redirige.
				$_SESSION['envoyer_message_admin']['message'].= "<span class='rose'>Le message a bien été envoyé.</span><br />";
			}
			
			header('Location: '.$oCL_page->getPage('envoyer_message_admin', 'absolu'));
			
		}else{
			header('Location: '.$oCL_page->getPage('envoyer_message_admin', 'absolu'));
		}
	}else{
		header('Location: '.$oCL_page->getPage('envoyer_message_admin', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

/*
* Script utilisé par la création d'une annonce.
*/

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	if(isset($_POST['form_ajout_modification_annonce_titre'])){	
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');		
		require_once('couche_metier/PCS_types.php');
		require_once('couche_metier/CL_date.php');
		
		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		$oPCS_types = new PCS_types();
		$oCL_date = new CL_date();
		
		# On récupère les types nécessaires:
		$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');
		$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On récupère les départements:
		$departements = $oPCS_annonce->fx_recuperer_tous_departements($oMSG)->getData(1)->fetchAll();
	
		$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
		
		# On récupère les données du formulaire.
		$TITRE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_titre'])));
		$TYPE_ANNONCE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_type_annonce'])));
		$DATE_DEBUT = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_annonce_date_debut']));
		$DATE_FIN = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_annonce_date_fin']));
		$ARTISTES_RECHERCHES = preg_replace($chaines_interdites, "", nl2br(ucfirst(trim($_POST['form_ajout_modification_annonce_artistes_recherches']))));
		$BUDGET = preg_replace($chaines_interdites, "", floatval(str_replace(',', '.', trim($_POST['form_ajout_modification_annonce_budget']))));
		$NB_CONVIVES = preg_replace($chaines_interdites, "", (int)trim($_POST['form_ajout_modification_annonce_nb_convives']));
		$DESCRIPTION = preg_replace($chaines_interdites, "", nl2br(ucfirst(trim($_POST['form_ajout_modification_annonce_description']))));
		$ID_DEPARTEMENT = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_annonce_id_departement']));# Ne pas transformer en int car la corse est 2a/2b
		$ADRESSE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_adresse'])));
		$CP = preg_replace($chaines_interdites, "", (int)trim($_POST['form_ajout_modification_annonce_cp']));
		$VILLE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_ville'])));
			
		$ID_PERSONNE = $_SESSION['compte']['ID_PERSONNE'];
		$DATE_ANNONCE = date("Y-m-d H:i:s");
		$VISIBLE = 0; # Une annonce est non visible de base.
		$GOLDLIVE = 0;# Une annonce ne bénéficie pas du statut GOLDLIVE de base.
		$STATUT = "En cours";
		
		# On prépare nos variables nécessaires pour les messages d'erreurs.
		$_SESSION['ajouter_annonce']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
		$_SESSION['ajouter_annonce']['message'] = "";# On initialise et on rajoutera par dessus.
		
		$nb_erreur = 0;
		
		# On sauvegarde en session les champs.
		$_SESSION['ajouter_annonce']['TITRE'] = $TITRE;
		$_SESSION['ajouter_annonce']['TYPE_ANNONCE'] = $TYPE_ANNONCE;
		$_SESSION['ajouter_annonce']['DATE_DEBUT'] = $DATE_DEBUT;
		$_SESSION['ajouter_annonce']['DATE_FIN'] = $DATE_FIN;
		$_SESSION['ajouter_annonce']['ARTISTES_RECHERCHES'] = $ARTISTES_RECHERCHES;
		$_SESSION['ajouter_annonce']['BUDGET'] = $BUDGET;
		$_SESSION['ajouter_annonce']['NB_CONVIVES'] = $NB_CONVIVES;
		$_SESSION['ajouter_annonce']['DESCRIPTION'] = $DESCRIPTION;
		$_SESSION['ajouter_annonce']['ID_DEPARTEMENT'] = $ID_DEPARTEMENT;
		$_SESSION['ajouter_annonce']['ADRESSE'] = $ADRESSE;
		$_SESSION['ajouter_annonce']['CP'] = $CP;
		$_SESSION['ajouter_annonce']['VILLE'] = $VILLE;
		
		# On vérifie l'intégrité des données:
		
		# On commence par vérifier qu'un des champs obligatoire ne soit pas vide.
		if(empty($TITRE) || empty($DATE_DEBUT) || empty($DATE_FIN) || empty($ARTISTES_RECHERCHES) || empty($DESCRIPTION) || empty($ADRESSE) || empty($CP) || empty($VILLE)){
			# Un des champs obligatoire est vide.
			$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>Un des champs obligatoire est vide.</span><br />";
			$nb_erreur++;
		}
		
		# On vérifie la taille des champs.
		if(strlen($TITRE) > 50){
			# Le titre est trop long.
			$_SESSION['ajouter_annonce']['TITRE'] = "";
			$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>Le titre est trop long, 50 caractères maximum.</span><br />";
			$nb_erreur++;
		}
		
		if(strlen($TITRE) < 5){
			# Le titre est trop court.
			$_SESSION['ajouter_annonce']['TITRE'] = "";
			$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>Le titre est trop court, 5 caractères minimum.</span><br />";
			$nb_erreur++;
		}
		
		# On vérifie les valeurs des listes déroulantes.
			# Vérification des types d'annonces.
			$liste_types_annonce = array();
			foreach($types_annonce as $key=>$type_annonce){
				$liste_types_annonce[$key] = $type_annonce['ID_TYPES'];
			}
			if(!in_array($TYPE_ANNONCE, $liste_types_annonce)){
				# L'utilisateur a modifié le code source, on l'envoi chier.
				$_SESSION['ajouter_annonce']['TYPE_ANNONCE'] = "";
				$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>Le type d'annonce est incorrect.</span><br />";
				$nb_erreur++;
			}
			
			# Vérification des départements.
			$liste_departements = array();
			foreach($departements as $key=>$departement){
				$liste_departements[$key] = $departement['ID_DEPARTEMENT'];
			}
			if(!in_array($ID_DEPARTEMENT, $liste_departements)){
				# L'utilisateur a modifié le code source, on l'envoi chier.
				$_SESSION['ajouter_annonce']['ID_DEPARTEMENT'] = "";
				$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>Le département selectionné n'existe pas.</span><br />";
				$nb_erreur++;
			}
		
		# On vérifie les dates.
			# On vérifie la date de début.
			$DATE_DEBUT = str_replace('h', ':', $DATE_DEBUT).':00';# On rajoute les secondes.
			if(!$oCL_date->fx_verif_date($DATE_DEBUT, 'fr', true)){
				# La date de début est incorrecte.
				$_SESSION['ajouter_annonce']['DATE_DEBUT'] = "";
				$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>La date de début est incorrecte. <span class='petit'>(06/05/2011 20h56)</span></span><br />";
				$nb_erreur++;
			}
			
			# On vérifie la date de fin.
			$DATE_FIN = str_replace('h', ':', $DATE_FIN).':00';# On rajoute les secondes.
			if(!$oCL_date->fx_verif_date($DATE_FIN, 'fr', true)){
				# La date de début est incorrecte.
				$_SESSION['ajouter_annonce']['DATE_FIN'] = "";
				$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>La date de fin est incorrecte. <span class='petit'>(06/05/2011 20h56)</span></span><br />";
				$nb_erreur++;
			}
			
		# On vérifie le budget.
		if($BUDGET != 0){
			if(!is_numeric($BUDGET)){
				# La date de début est incorrecte.
				$_SESSION['ajouter_annonce']['BUDGET'] = "0.00";
				$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>Le budget est de format incorrect. <span class='petit'>(53.5 ou 53,5 ou 53)</span></span><br />";
				$nb_erreur++;
			}
		}
		
		# On vérifie que la date de début soit supérieure à la date de fin.
		if($oCL_date->fx_ajouter_date($DATE_DEBUT, true, true, 'fr') >= $oCL_date->fx_ajouter_date($DATE_FIN, true, true, 'fr')){
				# Date de début supérieure à la date de fin.
				$_SESSION['ajouter_annonce']['message'].= "<span class='orange'>La date de début est supérieure à la date de fin.</span><br />";
				$nb_erreur++;
		}
		
		
		if($nb_erreur == 0){
			# L'intégrité des données est vérifiée.
			
			# On convertit les dates en en.
			$DATE_DEBUT = $oCL_date->fx_ajouter_date($DATE_DEBUT, true, false, 'fr');
			$DATE_FIN = $oCL_date->fx_ajouter_date($DATE_FIN, true, false, 'fr');
			
			# On crée l'annonce, en mode invisible.
			$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
			$oMSG->setData('ID_DEPARTEMENT', $ID_DEPARTEMENT);
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('TYPE_ANNONCE', $TYPE_ANNONCE);
			$oMSG->setData('DATE_ANNONCE', $DATE_ANNONCE);
			$oMSG->setData('DATE_DEBUT', $DATE_DEBUT);
			$oMSG->setData('DATE_FIN', $DATE_FIN);
			$oMSG->setData('ARTISTES_RECHERCHES', $ARTISTES_RECHERCHES);
			$oMSG->setData('BUDGET', $BUDGET);
			$oMSG->setData('NB_CONVIVES', $NB_CONVIVES);
			$oMSG->setData('DESCRIPTION', $DESCRIPTION);
			$oMSG->setData('ADRESSE', $ADRESSE);
			$oMSG->setData('CP', $CP);
			$oMSG->setData('VILLE', $VILLE);
			$oMSG->setData('GOLDLIVE', $GOLDLIVE);
			$oMSG->setData('VISIBLE', $VISIBLE);
			$oMSG->setData('STATUT', $STATUT);
			
			$ID_ANNONCE = $oPCS_annonce->fx_creer_annonce($oMSG)->getData(1);# On récupère l'ID au passage.
			
			#On envoi l'email.
			$additional_headers = "From: noreply@liveanim.fr \r\n";
			$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
			$destinataires = $_SESSION['compte']['EMAIL'];
			$sujet = utf8_decode("LiveAnim [Création de votre annonce]");
			
			$message = "------------------------------\n";
			$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
			$message.= "------------------------------\n\n";
			$message.= utf8_decode("Bonjour ".$_SESSION['compte']['PSEUDO'].", \n");
			$message.= utf8_decode("La création de votre annonce a été effectuée. \n\n");
			$message.= utf8_decode("Vous serez prévenu automatiquement par email lorsqu'elle aura été validée par nos services. \n");
			$message.= utf8_decode("Nous essayons de traiter votre annonce le plus rapidement possible. \n");
			$message.= utf8_decode("------------------------------\n\n\n");
			$message.= utf8_decode("LiveAnim vous remercie de votre confiance et vous souhaite un très bon surf sur notre site !\n\n");
			$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
			
			mail($destinataires, $sujet, $message, $additional_headers);
			
			# On supprime les variables de session.
			unset($_SESSION['ajouter_annonce']);
			
			$_SESSION['modifier_fiche_annonce']['message_affiche'] = false;
			$_SESSION['modifier_fiche_annonce']['message'].= "<span class='valide'>L'annonce que vous avez publié a été créée avec succès. Un email vous a été envoyé.<br /> Vous serez prévenu par email lorsqu'elle sera validée par l'administration.</span><br />";
			$_SESSION['modifier_fiche_annonce']['message'].= "<span class='rose'><br />Vous pouvez à présent mettre votre annonce au statut GoldLive, ce qui la mettra en tête des résultats de recherche !</span><br /><br />";
			header('Location: '.$oCL_page->getPage('modifier_fiche_annonce')."?id_annonce=".$ID_ANNONCE);
			
		}else{
			# Au moins une erreur a été detectée.
			$_SESSION['ajouter_annonce']['message'].= "<span class='alert'>L'annonce n'a pas été crée.</span><br />";
			header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu'));
		}
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['form_ajout_modification_contrat_id_annonce'])){
	
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');		
		require_once('couche_metier/PCS_contrat.php');
		require_once('couche_metier/PCS_personne.php');
		require_once('couche_metier/PCS_message.php');
		require_once('couche_metier/CL_date.php');
		
		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		$oPCS_contrat = new PCS_contrat();
		$oPCS_personne = new PCS_personne();
		$oPCS_message = new PCS_message();
		$oCL_date = new CL_date();
		
		$nb_erreur = 0;
		$_SESSION['creer_contrat']['message_affiche'] = false;
		$_SESSION['creer_contrat']['message'] = "<br /><br />";
		
		$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
		
		# On récupère les données du formulaire.
		$ID_ANNONCE = (int)$_POST['form_ajout_modification_contrat_id_annonce'];
		$DATE_DEBUT = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_contrat_date_debut']));
		$DATE_FIN = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_contrat_date_fin']));
		$PRIX = preg_replace($chaines_interdites, "", (float)ucfirst(trim($_POST['form_ajout_modification_contrat_prix'])));
		$DESCRIPTION = preg_replace($chaines_interdites, "", nl2br(ucfirst(trim($_POST['form_ajout_modification_contrat_description']))));
		$DATE_CONTRAT = date('Y-m-d H:i:s');
		$STATUT_CONTRAT = "En attente";
		
		# On sauvegarde les données en session:
		$_SESSION['creer_contrat']['DATE_DEBUT'] = $DATE_DEBUT;
		$_SESSION['creer_contrat']['DATE_FIN'] = $DATE_FIN;
		$_SESSION['creer_contrat']['PRIX'] = $PRIX;
		$_SESSION['creer_contrat']['DESCRIPTION'] = $DESCRIPTION;
		
		# On vérifie que l'ID_ANNONCE envoyé est correct:
		$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
		$oMSG->setData('VISIBLE', 1);
		$oMSG->setData('STATUT', 'Validée');
		
		$annonce = $oPCS_annonce->fx_recuperer_annonce_valide_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll();
		
		if(empty($annonce[0]['ID_ANNONCE'])){
			$nb_erreur++;
			$_SESSION['creer_contrat']['message'].= "<span class='alert'>Cette annonce est invalide.</span><br />";
			unset($_SESSION['creer_contrat']);
		}
		
		# La personne qui a créée l'annonce est l'organisateur.
		$id_organisateur = $annonce[0]['ID_PERSONNE'];
		# La personne qui créée le contrat est le prestataire.
		$id_prestataire = $_SESSION['compte']['ID_PERSONNE'];
		
		# On vérifie les dates.
		$DATE_DEBUT = str_replace('h', ':', $DATE_DEBUT).':00';# On rajoute les secondes.
		if(!$oCL_date->fx_verif_date($DATE_DEBUT, 'fr', true)){
			$nb_erreur++;
			$_SESSION['creer_contrat']['message'].= "<span class='alert'>La date de début est invalide.</span><br />";
			unset($_SESSION['creer_contrat']['DATE_DEBUT']);
		}
		$DATE_FIN = str_replace('h', ':', $DATE_FIN).':00';# On rajoute les secondes.
		if(!$oCL_date->fx_verif_date($DATE_FIN, 'fr', true)){
			$nb_erreur++;
			$_SESSION['creer_contrat']['message'].= "<span class='alert'>La date de fin est invalide.</span><br />";
			unset($_SESSION['creer_contrat']['DATE_FIN']);
		}
		
		# On vire l'éventuelle virgule du prix.
		$PRIX = str_replace(',', '.', $PRIX);
		
		# On vérifie que la date de début soit supérieure à la date de fin.
		if($oCL_date->fx_ajouter_date($DATE_DEBUT, true, true, 'fr') >= $oCL_date->fx_ajouter_date($DATE_FIN, true, true, 'fr')){
				# Date de début supérieure à la date de fin.
				$_SESSION['creer_contrat']['message'].= "<span class='orange'>La date de début est supérieure à la date de fin.</span><br />";
				$nb_erreur++;
		}
		
		# On vérifie qu'il n'y ait pas déjà un contrat de créée.
		$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
		$oMSG->setData('ID_PERSONNE', $id_prestataire);
		$oMSG->setData('conditions', "AND STATUT_CONTRAT <> 'Annulé';");
		
		$nb_contrat = $oPCS_contrat->fx_compter_contrat_by_ID_ANNONCE_et_ID_PERSONNE_et_condition($oMSG)->getData(1)->fetchAll();
		
		if($nb_contrat[0]['nb_contrat'] > 0){
			# Date de début supérieure à la date de fin.
			$_SESSION['creer_contrat']['message'].= "<span class='orange'>Vous avez déjà un contrat en cours avec cette personne.</span><br />";
			$nb_erreur++;
		}
		
		if($nb_erreur == 0){
			# On met en forme les données.
			$DATE_DEBUT = $oCL_date->fx_ajouter_date($DATE_DEBUT, true, false, 'fr', 'en');
			$DATE_FIN = $oCL_date->fx_ajouter_date($DATE_FIN, true, false, 'fr', 'en');
			
			# On crée le contrat.
			$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
			$oMSG->setData('DATE_DEBUT', $DATE_DEBUT);
			$oMSG->setData('DATE_FIN', $DATE_FIN);
			$oMSG->setData('PRIX', $PRIX);
			$oMSG->setData('DESCRIPTION', $DESCRIPTION);
			$oMSG->setData('DATE_CONTRAT', $DATE_CONTRAT);
			$oMSG->setData('STATUT_CONTRAT', $STATUT_CONTRAT);
			$oMSG->setData('DESTINATAIRE', $id_organisateur);
			
			$ID_CONTRAT = $oPCS_contrat->fx_creer_contrat($oMSG)->getData(1);
			
			# On lie le contrat aux deux personnes.
			$oMSG->setData('ID_PERSONNE', $id_organisateur);
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);

			$oPCS_contrat->fx_lier_contrat($oMSG);# On lie le contrat avec l'organisateur.
			
			$oMSG->setData('ID_PERSONNE', $id_prestataire);
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			
			$oPCS_contrat->fx_lier_contrat($oMSG);# On lie le contrat avec le prestataire.
			
			# On récupère l'organisateur.
			$oMSG->setData('ID_PERSONNE', $id_organisateur);
			
			$organisateur = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			
			# On récupère le prestataire.
			$oMSG->setData('ID_PERSONNE', $id_prestataire);
			
			$prestataire = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			
			# On lui envoi un email comme quoi son annonce a reçue une demande de contrat.
			$additional_headers = "From: noreply@liveanim.fr \r\n";
			$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
			$destinataires = $organisateur[0]['EMAIL'];
			$sujet = utf8_decode("LiveAnim [Demande de contrat]");
			
			$message = "------------------------------\n";
			$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
			$message.= "------------------------------\n\n";
			$message.= utf8_decode("Bonjour ".$organisateur[0]['PSEUDO'].", \n");
			$message.= utf8_decode("Un membre vous propose un contrat concernant une annonce que vous avez faite. \n\n");
			$message.= utf8_decode("Veuillez vous connecter afin d'en prendre connaissance: \n");
			$message.= utf8_decode($oCL_page->getPage('accueil', 'absolu')." \n\n");
			$message.= utf8_decode("------------------------------\n\n\n");
			$message.= utf8_decode("LiveAnim vous remercie de votre confiance et vous rappelle qu'en cas de désaccord avec un artiste nous pouvons vous fournir le contrat que vous aurez validé avec l'artiste !\n\n");
			$message.= utf8_decode("Si vous souhaitez nous contacter vous pouvez nous envoyer un mail à support@liveanim.com \n\n");
			$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
			
			mail($destinataires, $sujet, $message, $additional_headers);
			
			# On crée un message 
			$CONTENU = "<b>Bonjour</b>, <br /><br />";
			$CONTENU.= "Une demande de contrat a été effectuée par l'artiste ".$prestataire[0]['PSEUDO'].".<br />";
			$CONTENU.= "Vous pouvez la visualiser ici: <a href='".$oCL_page->getPage('contrat', 'absolu').$ID_CONTRAT."'>Aller au contrat</a>.<br /><br />";
			$CONTENU.= "Nous vous rappellons que ce contrat est entre vous et l'artiste, LiveAnim n'est pas responsable des services offerts.<br />";
			$CONTENU.= "Toutefois nous mettons à votre disposition ce contrat afin d'avoir une pièce 'justificative' de votre accord.<br /> ";
			$CONTENU.= "En cas de problème vous pouvez nous contacter à: support@liveanim.com<br /> ";
			$CONTENU.= "Nous vous remercions d'utiliser nos services et espérons qu'ils vous apportent entière satisfaction.<br /><br />";
			$CONTENU.= "<span class='rose'>L'équipe LiveAnim.</span><br /> ";
			
			$oMSG->setData('TITRE', "Demande de contrat de ".$prestataire[0]['PSEUDO']);
			$oMSG->setData('CONTENU', $CONTENU);
			$oMSG->setData('DATE_ENVOI', $DATE_CONTRAT);
			$oMSG->setData('EXPEDITEUR', $prestataire[0]['ID_PERSONNE']);
			$oMSG->setData('DESTINATAIRE', $organisateur[0]['ID_PERSONNE']);
			$oMSG->setData('TYPE_MESSAGE', "Contrat");
			$oMSG->setData('VISIBLE', true);
			
			$ID_MESSAGE = $oPCS_message->fx_creer_message($oMSG)->getData(1);
			
			# On envoi le message à l'organisateur.
			$oMSG->setData('ID_PERSONNE', $organisateur[0]['ID_PERSONNE']);
			$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
			$oMSG->setData('STATUT_MESSAGE', 'Non lu');

			$oPCS_message->fx_lier_message($oMSG);
			
			$_SESSION['creer_contrat']['message'].= "<span class='valide'>Le contrat a bien été crée.<br />Vous serez prévenu par email lorsque l'organisateur y aura répondu.<br />Il a été prévenu de votre demande de contrat.</span><br />";
			header('Location:'.$oCL_page->getPage('creer_contrat', 'absolu')."?id_annonce=".$ID_ANNONCE);
		}else{
			# Une erreur a eue lieu.
			$_SESSION['creer_contrat']['message'].= "<span class='orange'>Le contrat n'a pas été crée.</span><br />";
			header('Location: '.$oCL_page->getPage('creer_contrat', 'absolu')."?id_annonce=".$ID_ANNONCE);
		}
	
	}else{
		# On ne reçoit pas les informations du POST.
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_ajouter_news.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_ajouter_modifier_news_auteur'])){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_nouveaute.php');
		require_once('couche_metier/CL_date.php');
		require_once('couche_metier/CL_upload.php');
		
		$oMSG = new MSG();
		$oPCS_nouveaute = new PCS_nouveaute();
		$oCL_date = new CL_date();
		
		# On gère les variables.
		$_SESSION['ajouter_news']['message'] = "";
		$_SESSION['ajouter_news']['message_affiche'] = false;
		$nb_erreur = 0;
		
		# On récupère les données.
		$AUTEUR = ucfirst(trim($_POST['form_ajouter_modifier_news_auteur']));
		$TITRE = ucfirst(trim($_POST['form_ajouter_modifier_news_titre']));
		$ENTETE = nl2br(ucfirst(trim($_POST['form_ajouter_modifier_news_entete'])));
		$CONTENU = nl2br(ucfirst(trim($_POST['form_ajouter_modifier_news_contenu'])));
		$URL_PHOTO = trim($_POST['form_ajouter_modifier_news_url_photo']);
		$VISIBLE = $_POST['form_ajouter_modifier_news_visible'];
				
		# On vérifie le booléen de visibilité.
		if($VISIBLE == "on"){
			$VISIBLE = 1;
		}else{
			$VISIBLE = 0;
		}
		
		$_SESSION['ajouter_news']['AUTEUR'] = $AUTEUR;
		$_SESSION['ajouter_news']['TITRE'] = $TITRE;
		$_SESSION['ajouter_news']['ENTETE'] = $ENTETE;
		$_SESSION['ajouter_news']['CONTENU'] = $CONTENU;
		$_SESSION['ajouter_news']['URL_PHOTO'] = $URL_PHOTO;
		$_SESSION['ajouter_news']['VISIBLE'] = $VISIBLE;
		
		# On vérifie les informations.
		# On vérifie qu'aucun champ obligatoire ne soit vide.
		if(empty($AUTEUR) || empty($TITRE) || empty($CONTENU)){
			$nb_erreur++;
			$_SESSION['ajouter_news']['message'].= "<span class='orange'>Un des champs obligatoire est vide.</span><br /><br />";
		}
		
		# On vérifie l'auteur.
		if(strlen($AUTEUR) > 100){
			$nb_erreur++;
			$_SESSION['ajouter_news']['message'].= "<span class='orange'>L'auteur ne peux pas avoir plus de 100 caractères.</span><br /><br />";
		}
		
		# On s'occupe de la photo de la news
		if(!empty($_FILES) && $_FILES['form_ajouter_modifier_news_nouvelle_photo']['error'] == 0){
					$oCL_upload = new CL_upload($_FILES['form_ajouter_modifier_news_nouvelle_photo'], "images/uploads/news", array("png", "gif", "jpg", "jpeg"), 0777, array("image/jpeg", "image/jpeg", "image/png", "image/gif", "image/pjpg", "image/pjpeg"), 200, 200, 100000);
					
					
					$interdit = Array(' ', 'é', 'è', 'É', 'È', 'à', 'À', 'ù', '/', '\\', '-', '(', ')', '[', ']', '!');
					$remplace = Array('_', 'e', 'e', 'E', 'E', 'a', 'A', 'u', '', '', '', '', '', '', '', '');
					$new_filename = str_replace($interdit, $remplace, $TITRE);
					
					$tab_message = $oCL_upload->fx_upload($_FILES['form_ajouter_modifier_news_nouvelle_photo']['name'], $new_filename);
					
					if($tab_message['reussite'] == true){
						$URL_PHOTO =  $oCL_page->getPage('accueil', 'absolu').$tab_message['resultat'];
					}else{
						$_SESSION['ajouter_news']['message'].= $tab_message['resultat'];
						$URL_PHOTO = "";
						$echec_upload = true;
						# On empèche pas la création de la news.
					}
			}
			
		
		
		if($nb_erreur == 0){
			# On prépare le message.
			$oMSG->setData('AUTEUR', $AUTEUR);
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('ENTETE', $ENTETE);
			$oMSG->setData('CONTENU', $CONTENU);
			$oMSG->setData('URL_PHOTO', $URL_PHOTO);
			$oMSG->setData('DATE_CREATION', date('Y-m-d H:i:s'));
			$oMSG->setData('VISIBLE', $VISIBLE);
			
			$ID_NOUVEAUTE = $oPCS_nouveaute->fx_creer_nouveautee($oMSG)->getData(1);
			
			# On vérifie que la création ait marchée.
			if((int)$ID_NOUVEAUTE == 0){
				$_SESSION['ajouter_news']['message'].= "<span class='alert'>La création de la news a échouée. </span>(Pas d'ID inséré)<br /><br />";			
			}else{
				$_SESSION['ajouter_news']['message'].= "<span class='valide'>La news a bien été ajoutée.</span><br /><br />";
			}
			
			header('Location: '.$oCL_page->getPage('ajouter_news', 'absolu'));
			
		}else{
			header('Location: '.$oCL_page->getPage('ajouter_news', 'absolu'));
		}
	}else{
		# Si pas de POST.
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_pack_nom'])){
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_pack.php');		
		require_once('couche_metier/PCS_types.php');
		
		$oMSG = new MSG();
		$oPCS_pack = new PCS_pack();
		$oPCS_types = new PCS_types();
		
		# On récupère les types nécessaires:
		$oMSG->setData('ID_FAMILLE_TYPES', 'Type de pack');
		$types_pack = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
	
		$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/");
	
		$NOM = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_pack_nom'])));
		$DESCRIPTION = nl2br(preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_pack_description']))));
		$TYPE_PACK = preg_replace($chaines_interdites, "", $_POST['form_pack_type_pack']);
		$PRIX_BASE = preg_replace($chaines_interdites, "", trim($_POST['form_pack_prix_base']));
		$DUREE = preg_replace($chaines_interdites, "", trim($_POST['form_pack_duree']));
		$SOUMIS_REDUCTIONS_PARRAINAGE = preg_replace($chaines_interdites, "", $_POST['form_pack_soumis_reduction_parrainage']);
		$GAIN_PARRAINAGE_MAX = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_gain_parrainage_max']);
		$REDUCTION = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_reduction']);
		$VISIBLE = preg_replace($chaines_interdites, "", $_POST['form_pack_visible']);

		$CV_VISIBILITE = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_cv_visibilite']);
		$CV_ACCESSIBLE = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_cv_accessible']);
		$NB_FICHES_VISITABLES = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_nb_fiches_visitables']);
		$CV_VIDEO_ACCESSIBLE = preg_replace($chaines_interdites, "", $_POST['form_pack_cv_video_accessible']);
		$ALERTE_NON_DISPONIBILITE = preg_replace($chaines_interdites, "", $_POST['form_pack_alerte_non_disponibilite']);
		$NB_DEPARTEMENTS_ALERTE = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_nb_departements_alerte']);
		$PARRAINAGE_ACTIVE = preg_replace($chaines_interdites, "", $_POST['form_pack_parrainage_active']);
		$PREVISUALISATION_FICHES = preg_replace($chaines_interdites, "", $_POST['form_pack_previsualisation_fiches']);
		$CONTRATS_PDF = preg_replace($chaines_interdites, "", $_POST['form_pack_contrats_pdf']);
		$SUIVI = preg_replace($chaines_interdites, "", $_POST['form_pack_suivi']);
		$PUBS = preg_replace($chaines_interdites, "", $_POST['form_pack_pubs']);
		
		# On prépare nos variables nécessaires pour les messages d'erreurs.
		$_SESSION['ajouter_pack']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
		$_SESSION['ajouter_pack']['message'] = "";# On initialise et on rajoutera par dessus.
		
		$nb_erreur = 0;
		
		# On vérifie l'intégrité des données:
		
		# On commence par vérifier que les champs obligatoire ne soient pas vides.
		if(empty($NOM) || empty($DESCRIPTION) || empty($NB_FICHES_VISITABLES)){
			$_SESSION['ajouter_pack']['message'].= "<span class='alert'>Un de champs obligatoire est vide.</span><br />";
			$nb_erreur++;
		}

		# On vérifie que le type de pack soit correct.
		$type_pack_ok = 0;
		foreach($types_pack as $key=>$type_pack){
			if($type_pack['ID_TYPES'] == $TYPE_PACK){
				$type_pack_ok++;
			}
		}
		
		# Si ça vaut 0 alors c'est que le type n'existe pas en BDD donc modification formulaire. Si plus de 1 alors c'est qu'on a deux types identiques en BDD. (impossible)
		if($type_pack_ok != 1){
			$_SESSION['ajouter_pack']['message'].= "<span class='alert'>Le type de pack sélectionné n'existe pas.</span><br />";
			$nb_erreur++;
		}
		
		# On vire les virgules probables.
		$PRIX_BASE = str_replace(",", ".", $PRIX_BASE);
		
		# Si malgré ça le prix ne correspond pas.
		if(!is_numeric($PRIX_BASE)){
			$_SESSION['ajouter_pack']['message'].= "<span class='alert'>Le prix de base est incorrect. <span class='petit'>(Ex: 250/999.0/99,5)</span></span><br />";
			$nb_erreur++;
		}
		
		# S'il n'y a pas d'erreurs.
		if($nb_erreur == 0){
			$oMSG->setData('NOM', $NOM);
			$oMSG->setData('DESCRIPTION', $DESCRIPTION);
			$oMSG->setData('TYPE_PACK', $TYPE_PACK);
			$oMSG->setData('PRIX_BASE', $PRIX_BASE);
			$oMSG->setData('DUREE', $DUREE);
			$oMSG->setData('SOUMIS_REDUCTIONS_PARRAINAGE', $SOUMIS_REDUCTIONS_PARRAINAGE);
			$oMSG->setData('GAIN_PARRAINAGE_MAX', $GAIN_PARRAINAGE_MAX);
			$oMSG->setData('REDUCTION', $REDUCTION);
			$oMSG->setData('VISIBLE', $VISIBLE);
			
			$oMSG->setData('CV_VISIBILITE', $CV_VISIBILITE);
			$oMSG->setData('CV_ACCESSIBLE', $CV_ACCESSIBLE);
			$oMSG->setData('NB_FICHES_VISITABLES', $NB_FICHES_VISITABLES);
			$oMSG->setData('CV_VIDEO_ACCESSIBLE', $CV_VIDEO_ACCESSIBLE);
			$oMSG->setData('ALERTE_NON_DISPONIBILITE', $ALERTE_NON_DISPONIBILITE);
			$oMSG->setData('NB_DEPARTEMENTS_ALERTE', $NB_DEPARTEMENTS_ALERTE);
			$oMSG->setData('PARRAINAGE_ACTIVE', $PARRAINAGE_ACTIVE);
			$oMSG->setData('PREVISUALISATION_FICHES', $PREVISUALISATION_FICHES);
			$oMSG->setData('CONTRATS_PDF', $CONTRATS_PDF);
			$oMSG->setData('SUIVI', $SUIVI);
			$oMSG->setData('PUBS', $PUBS);
			
			$oPCS_pack->fx_creer_pack($oMSG);
			
			$_SESSION['ajouter_pack']['message'].= "<span class='valide'>Le pack a été ajouté.</span><br />";
			header('Location: '.$oCL_page->getPage('ajouter_pack'));
			
		}else{
			$_SESSION['ajouter_pack']['message'].= "<span class='alert'>Le pack n'a pas été crée.</span><br />";
			header('Location: '.$oCL_page->getPage('ajouter_pack'));
		}
		
		
	}else{
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
	

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_ajouter_modifier_pub_titre'])){
				
		# On initialise nos variables. 
		$nb_erreur = 0;
		$_SESSION['ajouter_pub']['message_affiche'] = false;
		$_SESSION['ajouter_pub']['message'] = "";
		
		$TITRE = trim($_POST['form_ajouter_modifier_pub_titre']);
		$CONTENU = trim($_POST['form_ajouter_modifier_pub_contenu']);
		$POSITION = (int)trim($_POST['form_ajouter_modifier_pub_position']);
		
		# On sauvegarde les variables en session.
		$_SESSION['ajouter_pub']['TITRE'] = $TITRE;
		$_SESSION['ajouter_pub']['CONTENU'] = $CONTENU;
		$_SESSION['ajouter_pub']['POSITION'] = $POSITION;
		
		if(empty($TITRE) || empty($CONTENU)){
			$nb_erreur++;
			$_SESSION['ajouter_pub']['message'].= "<span class='orange'>Un des champs est vide.</span><br />";
		}
		
		if($POSITION < 0){
			$nb_erreur++;
			$_SESSION['ajouter_pub']['message'].= "<span class='orange'>La position sélectionnée est invalide.</span><br />";
		}
		
		if($nb_erreur == 0){
			# On crée la pub.
			
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_pub.php');
			
			$oMSG = new MSG();
			$oPCS_pub = new PCS_pub();
		
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('CONTENU', $CONTENU);
			$oMSG->setData('POSITION', $POSITION);
			
			$oPCS_pub->fx_ajouter_pub($oMSG);
		
			
			# On détruit les variables de sessions inutiles.
			unset($_SESSION['ajouter_pub']['TITRE']);
			unset($_SESSION['ajouter_pub']['CONTENU']);
			unset($_SESSION['ajouter_pub']['POSITION']);			
			
			$_SESSION['ajouter_pub']['message'].= "<span class='valide'>La publicité a été ajoutée.</span><br />";
			header('Location:'.$oCL_page->getPage('ajouter_pub'));
		
		}else{
			$_SESSION['ajouter_pub']['message'].= "<span class='alert'>Une erreur est survenue, la publicité n'a pas été ajoutée.</span><br />";
			header('Location:'.$oCL_page->getPage('ajouter_pub'));
		}		
	}else{
		header('Location:'.$oCL_page->getPage('ajouter_pub'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_ajouter_modifier_slide_titre'])){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_slide.php');
		require_once('couche_metier/CL_upload.php');
		
		$oMSG = new MSG();
		$oPCS_slide = new PCS_slide();
		
		# On initialise nos variables.
		$nb_erreur = 0;
		$_SESSION['gestion_slides']['message_affiche'] = false;
		$_SESSION['gestion_slides']['message'] = "";
		
		# On récupère les variables du formulaire.
		$TITRE = $_POST['form_ajouter_modifier_slide_titre'];
		$LIEN = $_POST['form_ajouter_modifier_slide_lien'];
		$CLASSE = $_POST['form_ajouter_modifier_slide_classe'];
		$ORDRE = $_POST['form_ajouter_modifier_slide_ordre'];
		$ACCES = implode(',', $_POST['form_ajouter_modifier_slide_access']);
		
		# On sauvegarde en session nos variables.
		$_SESSION['gestion_slides']['TITRE'] = $TITRE;
		$_SESSION['gestion_slides']['CLASSE'] = $CLASSE;
		$_SESSION['gestion_slides']['ORDRE'] = $ORDRE;
		$_SESSION['gestion_slides']['ACCES'] = explode(',', $ACCES);

		if(!empty($_FILES) && $_FILES['form_ajouter_modifier_slide_url']['error'] == 0){
			require_once('couche_metier/CL_upload.php');			
			
			$oCL_upload = new CL_upload($_FILES['form_ajouter_modifier_slide_url'], "images/slides", array("png", "gif", "jpg", "jpeg"), 0777, array("image/jpeg", "image/jpeg", "image/png", "image/gif", "image/pjpg", "image/pjpeg"), 200, 200, 500000);
			$ext = explode('.', $_FILES['form_ajouter_modifier_slide_url']['name']);
			$extension = $ext[count($ext)-1];
			
			$new_filename = str_replace(Array('é', 'è', 'ê', 'à', 'â', 'ù', 'À', 'É', 'È', 'Ê' ,' ', '/', '\\'), Array('e', 'e', 'e', 'a', 'a', 'u', 'A', 'E', 'E', 'E' ,'_', '_', '_'), $TITRE);

			$tab_message = $oCL_upload->fx_upload($_FILES['form_ajouter_modifier_slide_url']['name'], $new_filename, true, false);
			
			if($tab_message['reussite'] == true){
				$_SESSION['gestion_slides']['message'].= "<center class='rose'>Téléchargement réussi.</center>";
				$_SESSION['gestion_slides']['message_affiche'] = false;
				$URL = "images/slides/".$new_filename.".".$extension;
			}else{
				$_SESSION['gestion_slides']['message'].= "<span class='alert'>".$tab_message['resultat']."</span>";
				$_SESSION['gestion_slides']['message_affiche'] = false;
				$nb_erreur++;
			}
			header('Location:'.$oCL_page->getPage('gestion_slides', 'absolu'));
		}else{
			$nb_erreur++;
		}
		
		if($nb_erreur == 0){
			# On crée le slide.
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('URL', $URL);
			$oMSG->setData('LIEN', $LIEN);
			$oMSG->setData('CLASSE', $CLASSE);
			$oMSG->setData('ORDRE', $ORDRE);
			$oMSG->setData('ACCES', $ACCES);
			$oMSG->setData('VISIBLE', 1);
			
			$oPCS_slide->fx_ajouter_slide($oMSG);
			
			# On vire les infos de la session.
			unset($_SESSION['gestion_slides']['TITRE']);
			unset($_SESSION['gestion_slides']['CLASSE']);
			unset($_SESSION['gestion_slides']['ORDRE']);
			unset($_SESSION['gestion_slides']['ACCES']);
			
			$_SESSION['gestion_slides']['message'].= "<center class='valide'>Le slide a été crée.</center><br />";
		}else{
			$_SESSION['gestion_slides']['message'].= "<span class='alert'>Une erreur est survenue, le slide n'a pas été crée.</span><br />";
		}
		
		header('Location:'.$oCL_page->getPage('gestion_slides', 'absolu'));
	}else{
		header('Location:'.$oCL_page->getPage('gestion_slides', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

/*
* Script utilisé par la modification d'une annonce par un organisateur.
*/

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	if(isset($_POST['form_ajout_modification_annonce_titre'])){	
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');		
		require_once('couche_metier/PCS_types.php');
		require_once('couche_metier/CL_date.php');
		
		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		$oPCS_types = new PCS_types();
		$oCL_date = new CL_date();
		
		# On récupère les types nécessaires:
		$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');
		$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On récupère les départements:
		$departements = $oPCS_annonce->fx_recuperer_tous_departements($oMSG)->getData(1)->fetchAll();
	
		$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
		
		# On récupère les données du formulaire.
		$ID_ANNONCE = (int)$_POST['form_ajout_modification_annonce_id_annonce'];
		$ID_PERSONNE = $_SESSION['compte']['ID_PERSONNE'];
		$TITRE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_titre'])));
		$TYPE_ANNONCE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_type_annonce'])));
		$DATE_DEBUT = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_annonce_date_debut']));
		$DATE_FIN = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_annonce_date_fin']));
		$ARTISTES_RECHERCHES = preg_replace($chaines_interdites, "", nl2br(ucfirst(trim($_POST['form_ajout_modification_annonce_artistes_recherches']))));
		$BUDGET = preg_replace($chaines_interdites, "", floatval(str_replace(',', '.', trim($_POST['form_ajout_modification_annonce_budget']))));
		$NB_CONVIVES = preg_replace($chaines_interdites, "", (int)trim($_POST['form_ajout_modification_annonce_nb_convives']));
		$DESCRIPTION = preg_replace($chaines_interdites, "", nl2br(ucfirst(trim($_POST['form_ajout_modification_annonce_description']))));
		$ID_DEPARTEMENT = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_annonce_id_departement']));# Ne pas transformer en int car la corse est 2a/2b
		$ADRESSE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_adresse'])));
		$CP = preg_replace($chaines_interdites, "", (int)trim($_POST['form_ajout_modification_annonce_cp']));
		$VILLE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_ajout_modification_annonce_ville'])));
	
			
		$GOLDLIVE = 0;# On ne gère pas la fonction GOLDLIVE pour le moment.
		
		# On prépare nos variables nécessaires pour les messages d'erreurs.
		$_SESSION['modifier_annonce']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
		$_SESSION['modifier_annonce']['message'] = "";# On initialise et on rajoutera par dessus.
		
		$nb_erreur = 0;
		
		# On vérifie l'intégrité des données:
		
		# On commence par vérifier qu'un des champs obligatoire ne soit pas vide.
		if(empty($TITRE) || empty($DATE_DEBUT) || empty($DATE_FIN) || empty($ARTISTES_RECHERCHES) || empty($DESCRIPTION) || empty($ADRESSE) || empty($CP) || empty($VILLE)){
			# Un des champs obligatoire est vide.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Un des champs obligatoire est vide.</span><br />";
			$nb_erreur++;
		}
		
		# On vérifie la taille des champs.
		if(strlen($TITRE) > 50){
			# Le titre est trop long.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le titre est trop long, 50 caractères maximum.</span><br />";
			$nb_erreur++;
		}
		
		if(strlen($TITRE) < 5){
			# Le titre est trop court.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le titre est trop court, 5 caractères minimum.</span><br />";
			$nb_erreur++;
		}
		
		# On vérifie les valeurs des listes déroulantes.
			# Vérification des types d'annonces.
			$liste_types_annonce = array();
			foreach($types_annonce as $key=>$type_annonce){
				$liste_types_annonce[$key] = $type_annonce['ID_TYPES'];
			}
			if(!in_array($TYPE_ANNONCE, $liste_types_annonce)){
				# L'utilisateur a modifié le code source, on l'envoi chier.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le type d'annonce est incorrect.</span><br />";
				$nb_erreur++;
			}
			
			# Vérification des départements.
			$liste_departements = array();
			foreach($departements as $key=>$departement){
				$liste_departements[$key] = $departement['ID_DEPARTEMENT'];
			}
			if(!in_array($ID_DEPARTEMENT, $liste_departements)){
				# L'utilisateur a modifié le code source, on l'envoi chier.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le département selectionné n'existe pas.</span><br />";
				$nb_erreur++;
			}
		
		# On vérifie les dates.
			# On vérifie la date de début.
			$DATE_DEBUT = str_replace('h', ':', $DATE_DEBUT).':00';# On rajoute les secondes.
			if(!$oCL_date->fx_verif_date($DATE_DEBUT, 'fr', true)){
				# La date de début est incorrecte.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>La date de début est incorrecte. <span class='petit'>(06/05/2011 20h56)</span></span><br />";
				$nb_erreur++;
			}
			
			# On vérifie la date de fin.
			$DATE_FIN = str_replace('h', ':', $DATE_FIN).':00';# On rajoute les secondes.
			if(!$oCL_date->fx_verif_date($DATE_FIN, 'fr', true)){
				# La date de début est incorrecte.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>La date de fin est incorrecte. <span class='petit'>(06/05/2011 20h56)</span></span><br />";
				$nb_erreur++;
			}
			
		# On vérifie le budget.
		if($BUDGET != 0){
			if(!is_numeric($BUDGET)){
				# La date de début est incorrecte.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le budget est de format incorrect. <span class='petit'>(53.5 ou 53,5 ou 53)</span></span><br />";
				$nb_erreur++;
			}
		}
		
		# On vérifie que la date de début soit supérieure à la date de fin.
		if($oCL_date->fx_ajouter_date($DATE_DEBUT, true, true, 'fr') >= $oCL_date->fx_ajouter_date($DATE_FIN, true, true, 'fr')){
				# Date de début supérieure à la date de fin.
				$_SESSION['modifier_annonce']['message'].= "<span class='orange'>La date de début est supérieure à la date de fin.</span><br />";
				$nb_erreur++;
		}
		
		# On charge l'annonce en cours afin de vérifier les droits de modification.
		$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
		
		$annonce = $oPCS_annonce->fx_recuperer_annonce_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll();
		
		if($annonce[0]['ID_PERSONNE'] != $ID_PERSONNE){
			# La personne qui modifie n'est pas la même que celle qui possède l'annonce.
			$_SESSION['connexion']['message_affiche'] = false;# On redirige vers la page de l'annonce mais elle va elle même rediriger vers l'accueil.
			$_SESSION['connexion']['message'] = "<span class='alert'>Vous n'avez pas les droits nécessaires pour modifier cette annonce.</span><br />";
			$nb_erreur++;
		}
		
		if($annonce[0]['STATUT'] == "Validée"){
			# L'annonce a déjà été validée, on refuse les modifications
			$_SESSION['modifier_annonce']['message'] = "<span class='alert'>Vous ne pouvez pas modifier une annonce validée.</span><br />";
			$nb_erreur++;
		}
		
		if($nb_erreur == 0){
			# L'intégrité des données est vérifiée.
			
			# On convertit les dates en en.
			$DATE_DEBUT = $oCL_date->fx_ajouter_date($DATE_DEBUT, true, false, 'fr');
			$DATE_FIN = $oCL_date->fx_ajouter_date($DATE_FIN, true, false, 'fr');
			
			# On modifie l'annonce.
			$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
			$oMSG->setData('ID_DEPARTEMENT', $ID_DEPARTEMENT);
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('TYPE_ANNONCE', $TYPE_ANNONCE);
			$oMSG->setData('DATE_DEBUT', $DATE_DEBUT);
			$oMSG->setData('DATE_FIN', $DATE_FIN);
			$oMSG->setData('ARTISTES_RECHERCHES', $ARTISTES_RECHERCHES);
			$oMSG->setData('BUDGET', $BUDGET);
			$oMSG->setData('NB_CONVIVES', $NB_CONVIVES);
			$oMSG->setData('DESCRIPTION', $DESCRIPTION);
			$oMSG->setData('ADRESSE', $ADRESSE);
			$oMSG->setData('CP', $CP);
			$oMSG->setData('VILLE', $VILLE);
			$oMSG->setData('GOLDLIVE', $GOLDLIVE);
			$oMSG->setData('VISIBLE', $annonce[0]['VISIBLE']);
			$oMSG->setData('STATUT', $annonce[0]['STATUT']);
			
			$oPCS_annonce->fx_modifier_annonce_by_ID_ANNONCE($oMSG)->getData(1);
			
			
			
			$_SESSION['modifier_annonce']['message'].= "<span class='valide'>L'annonce a été modifiée avec succès. Vous serez prévenu par email lorsqu'elle sera validée par l'administration.</span><br />";
			header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu')."?id_annonce=".$ID_ANNONCE);
			
		}else{
			# Au moins une erreur a été detectée.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>L'annonce n'a pas été modifiée.</span><br />";
			//header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu')."?id_annonce=".$ID_ANNONCE);
			echo $ID_ANNONCE;
		}
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

/*
* Script utilisé par la modification d'une annonce par un admin.
*/

# On vérifie que la personne soit connectée et admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	if(isset($_POST['form_ajout_modification_annonce_titre'])){	
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');		
		require_once('couche_metier/PCS_types.php');
		require_once('couche_metier/CL_date.php');
		
		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		$oPCS_types = new PCS_types();
		$oCL_date = new CL_date();
		
		# On récupère les types nécessaires:
		$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');
		$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On récupère les départements:
		$departements = $oPCS_annonce->fx_recuperer_tous_departements($oMSG)->getData(1)->fetchAll();
		
		# On récupère les données du formulaire.
		$ID_ANNONCE = (int)$_POST['form_ajout_modification_annonce_id_annonce'];
		$TITRE = ucfirst(trim($_POST['form_ajout_modification_annonce_titre']));
		$TYPE_ANNONCE = ucfirst(trim($_POST['form_ajout_modification_annonce_type_annonce']));
		$DATE_DEBUT = trim($_POST['form_ajout_modification_annonce_date_debut']);
		$DATE_FIN = trim($_POST['form_ajout_modification_annonce_date_fin']);
		$ARTISTES_RECHERCHES = nl2br(ucfirst(trim($_POST['form_ajout_modification_annonce_artistes_recherches'])));
		$BUDGET = floatval(str_replace(',', '.', trim($_POST['form_ajout_modification_annonce_budget'])));
		$NB_CONVIVES = (int)trim($_POST['form_ajout_modification_annonce_nb_convives']);
		$DESCRIPTION = nl2br(ucfirst(trim($_POST['form_ajout_modification_annonce_description'])));
		$ID_DEPARTEMENT = trim($_POST['form_ajout_modification_annonce_id_departement']);# Ne pas transformer en int car la corse est 2a/2b
		$ADRESSE = ucfirst(trim($_POST['form_ajout_modification_annonce_adresse']));
		$CP = (int)trim($_POST['form_ajout_modification_annonce_cp']);
		$VILLE = ucfirst(trim($_POST['form_ajout_modification_annonce_ville']));
		$STATUT = ucfirst(trim($_POST['form_ajout_modification_annonce_statut']));
		$REFUS = nl2br(ucfirst(trim($_POST['form_ajout_modification_annonce_refus'])));
	
			
		$GOLDLIVE = 0;# On ne gère pas la fonction GOLDLIVE pour le moment.
		
		# On prépare nos variables nécessaires pour les messages d'erreurs.
		$_SESSION['modifier_annonce']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
		$_SESSION['modifier_annonce']['message'] = "";# On initialise et on rajoutera par dessus.
		
		$nb_erreur = 0;
		
		# On vérifie l'intégrité des données:
		
		# On commence par vérifier qu'un des champs obligatoire ne soit pas vide.
		if(empty($TITRE) || empty($DATE_DEBUT) || empty($DATE_FIN) || empty($ARTISTES_RECHERCHES) || empty($DESCRIPTION) || empty($ADRESSE) || empty($CP) || empty($VILLE)){
			# Un des champs obligatoire est vide.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Un des champs obligatoire est vide.</span><br />";
			$nb_erreur++;
		}
		
		# On vérifie la taille des champs.
		if(strlen($TITRE) > 50){
			# Le titre est trop long.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le titre est trop long, 50 caractères maximum.</span><br />";
			$nb_erreur++;
		}
		
		if(strlen($TITRE) < 5){
			# Le titre est trop court.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le titre est trop court, 5 caractères minimum.</span><br />";
			$nb_erreur++;
		}
		
		# On vérifie les valeurs des listes déroulantes.
			# Vérification des types d'annonces.
			$liste_types_annonce = array();
			foreach($types_annonce as $key=>$type_annonce){
				$liste_types_annonce[$key] = $type_annonce['ID_TYPES'];
			}
			if(!in_array($TYPE_ANNONCE, $liste_types_annonce)){
				# L'utilisateur a modifié le code source, on l'envoi chier.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le type d'annonce est incorrect.</span><br />";
				$nb_erreur++;
			}
			
			# Vérification des départements.
			$liste_departements = array();
			foreach($departements as $key=>$departement){
				$liste_departements[$key] = $departement['ID_DEPARTEMENT'];
			}
			if(!in_array($ID_DEPARTEMENT, $liste_departements)){
				# L'utilisateur a modifié le code source, on l'envoi chier.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le département selectionné n'existe pas.</span><br />";
				$nb_erreur++;
			}
		
		# On vérifie les dates.
			# On vérifie la date de début.
			$DATE_DEBUT = str_replace('h', ':', $DATE_DEBUT).':00';# On rajoute les secondes.
			if(!$oCL_date->fx_verif_date($DATE_DEBUT, 'fr', true)){
				# La date de début est incorrecte.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>La date de début est incorrecte. <span class='petit'>(06/05/2011 20h56)</span></span><br />";
				$nb_erreur++;
			}
			
			# On vérifie la date de fin.
			$DATE_FIN = str_replace('h', ':', $DATE_FIN).':00';# On rajoute les secondes.
			if(!$oCL_date->fx_verif_date($DATE_FIN, 'fr', true)){
				# La date de début est incorrecte.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>La date de fin est incorrecte. <span class='petit'>(06/05/2011 20h56)</span></span><br />";
				$nb_erreur++;
			}
			
		# On vérifie le budget.
		if($BUDGET != 0){
			if(!is_numeric($BUDGET)){
				# La date de début est incorrecte.
				$_SESSION['modifier_annonce']['message'].= "<span class='alert'>Le budget est de format incorrect. <span class='petit'>(53.5 ou 53,5 ou 53)</span></span><br />";
				$nb_erreur++;
			}
		}
		
		# On vérifie que la date de début soit supérieure à la date de fin.
		if($oCL_date->fx_ajouter_date($DATE_DEBUT, true, true, 'fr') >= $oCL_date->fx_ajouter_date($DATE_FIN, true, true, 'fr')){
				# Date de début supérieure à la date de fin.
				$_SESSION['modifier_annonce']['message'].= "<span class='orange'>La date de début est supérieure à la date de fin.</span><br />";
				$nb_erreur++;
		}
		
		# On vérifie le statut de l'annonce et on en détermine sa visibilité.
		if($STATUT == "En attente"){
			$VISIBLE = 0;
		}else if($STATUT == "Validée"){
			$VISIBLE = 1;
		}else if($STATUT == "Refusée"){
			$VISIBLE = 0;
		}else{
			$nb_erreur++;
			$_SESSION['modifier_annonce']['message'].= "<span class='orange'>Le statut sélectionné est incorrect.</span><br />";
		}		
		
		if($nb_erreur == 0){
			# L'intégrité des données est vérifiée.
			
			# On convertit les dates en en.
			$DATE_DEBUT = $oCL_date->fx_ajouter_date($DATE_DEBUT, true, false, 'fr');
			$DATE_FIN = $oCL_date->fx_ajouter_date($DATE_FIN, true, false, 'fr');
			
			# On modifie l'annonce.
			$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
			$oMSG->setData('ID_DEPARTEMENT', $ID_DEPARTEMENT);
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('TYPE_ANNONCE', $TYPE_ANNONCE);
			$oMSG->setData('DATE_DEBUT', $DATE_DEBUT);
			$oMSG->setData('DATE_FIN', $DATE_FIN);
			$oMSG->setData('ARTISTES_RECHERCHES', $ARTISTES_RECHERCHES);
			$oMSG->setData('BUDGET', $BUDGET);
			$oMSG->setData('NB_CONVIVES', $NB_CONVIVES);
			$oMSG->setData('DESCRIPTION', $DESCRIPTION);
			$oMSG->setData('ADRESSE', $ADRESSE);
			$oMSG->setData('CP', $CP);
			$oMSG->setData('VILLE', $VILLE);
			$oMSG->setData('GOLDLIVE', $GOLDLIVE);
			$oMSG->setData('VISIBLE', $VISIBLE);
			$oMSG->setData('STATUT', $STATUT);
			
			$oPCS_annonce->fx_modifier_annonce_by_ID_ANNONCE($oMSG)->getData(1);
			
			#On envoi l'email.
			$additional_headers = "From: noreply@liveanim.fr \r\n";
			$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
			$destinataires = $_SESSION['compte']['EMAIL'];
			if($STATUT == "Validée"){
				$sujet = utf8_decode("LiveAnim [Annonce N°".$ID_ANNONCE." validée !]");
				$message = "------------------------------\n";
				$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
				$message.= "------------------------------\n\n";
				$message.= utf8_decode("Votre annonce N°".$ID_ANNONCE." a été validée par un administrateur de LiveAnim. \n\n");
				$message.= utf8_decode("Elle est désormais visible de tous les prestataires. \n");
				$message.= utf8_decode("N'oubliez pas que vous pouvez activer la fonctionnalité GoldLive pour toutes les annonces que vous créez, ce qui améliore leur visibilité et donc les chances de trouver des artistes ! \n");
			}else if($STATUT == "Refusée"){
				$sujet = utf8_decode("LiveAnim [Annonce N°".$ID_ANNONCE." refusée.]");
				$message = "------------------------------\n";
				$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
				$message.= "------------------------------\n\n";
				$message.= utf8_decode("Votre annonce N°".$ID_ANNONCE." a été refusée par notre service de modération pour la raison suivante: \n");
				$message.= utf8_decode($REFUS." \n\n");
				$message.= utf8_decode("Veuillez prendre vos dispositions afin que votre annonce soit acceptée en respectant nos règles, merci. \n");
				$message.= utf8_decode("Vous pouvez modifier votre annonce et la soumettre à nouveau. \n");
			}else if($STATUT == "En attente"){
				$sujet = utf8_decode("LiveAnim [Modification de l'annonce N°".$ID_ANNONCE.".]");
				$message = "------------------------------\n";
				$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
				$message.= "------------------------------\n\n";
				$message.= utf8_decode("Votre annonce N°".$ID_ANNONCE." a été modifiée par un administrateur. \n");
				$message.= utf8_decode("Vous pouvez voir les modifications dans votre page de gestion des annonces. \n");
				$message.= utf8_decode("Votre annonce est toujours en attente, elle devrait être validée sous peu, prenez tout de même connaissance des modifications apportées.	\n");
			}else{}# Pas d'autre possibilité, vérifié avant.
			
			$message.= utf8_decode("------------------------------\n\n\n");
			$message.= utf8_decode("LiveAnim vous remercie de votre confiance.\n\n");
			$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
			
			mail($destinataires, $sujet, $message, $additional_headers);
			
			
			$_SESSION['modifier_annonce']['message'].= "<span class='valide'>L'annonce a été modifiée avec succès. Un email a été envoyé à son possésseur pour le prévenir des modifications.</span><br />";
			header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu')."?id_annonce=".$ID_ANNONCE);
			
		}else{
			# Au moins une erreur a été detectée.
			$_SESSION['modifier_annonce']['message'].= "<span class='alert'>L'annonce n'a pas été modifiée.</span><br />";
			header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu')."?id_annonce=".$ID_ANNONCE);
		}
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['form_ajout_modification_contrat_id_annonce'])){	
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_contrat.php');
		require_once('couche_metier/PCS_personne.php');
		require_once('couche_metier/PCS_message.php');
		require_once('couche_metier/CL_date.php');
		
		$oMSG = new MSG();
		$oPCS_contrat = new PCS_contrat();
		$oPCS_personne = new PCS_personne();
		$oPCS_message = new PCS_message();
		$oCL_date = new CL_date();
		
		$nb_erreur = 0;
		$_SESSION['modifier_contrat']['message_affiche'] = false;
		$_SESSION['modifier_contrat']['message'] = "<br /><br />";
		
		$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
		
		# On récupère les données du formulaire.
		$ID_CONTRAT = (int)$_POST['form_ajout_modification_contrat_id_contrat'];
		$DATE_DEBUT = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_contrat_date_debut']));
		$DATE_FIN = preg_replace($chaines_interdites, "", trim($_POST['form_ajout_modification_contrat_date_fin']));
		$PRIX = preg_replace($chaines_interdites, "", (float)ucfirst(trim($_POST['form_ajout_modification_contrat_prix'])));
		$DESCRIPTION = preg_replace($chaines_interdites, "", nl2br(ucfirst(trim($_POST['form_ajout_modification_contrat_description']))));
		$STATUT_CONTRAT = "En attente";
		
		# On sauvegarde les données en session:
		$_SESSION['modifier_contrat']['DATE_DEBUT'] = $DATE_DEBUT;
		$_SESSION['modifier_contrat']['DATE_FIN'] = $DATE_FIN;
		$_SESSION['modifier_contrat']['PRIX'] = $PRIX;
		$_SESSION['modifier_contrat']['DESCRIPTION'] = $DESCRIPTION;
		
		# on vérifie que la personne ait le droit de modifier ce contrat. (Sélection sur le contrat avec vérification comme quoi il est bien destinataire)
		$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		
		$nb_contrat = $oPCS_contrat->fx_compter_contrat_by_ID_CONTRAT_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

		if($nb_contrat[0]['nb_contrat'] != 1){
			# La personne n'a pas le droit de modifier ce contrat.
			$_SESSION['modifier_contrat'] = Array();
			unset($_SESSION['modifier_contrat']);
			
			$_SESSION['historique_contrat']['message_affiche'] = false;
			$_SESSION['historique_contrat']['message'] = "<center class='alert'>Vous n'avez pas les droits pour modifier ce contrat.</center><br />";
			header('Location: '.$oCL_page->getPage('historique_contrat')."?rq=courants");
			die();# On kill le processus en cours.
		}
		
		# On vérifie les dates.
		$DATE_DEBUT = str_replace('h', ':', $DATE_DEBUT).':00';# On rajoute les secondes.
		if(!$oCL_date->fx_verif_date($DATE_DEBUT, 'fr', true)){
			$nb_erreur++;
			$_SESSION['modifier_contrat']['message'].= "<span class='alert'>La date de début est invalide.</span><br />";
			unset($_SESSION['modifier_contrat']['DATE_DEBUT']);
		}
		$DATE_FIN = str_replace('h', ':', $DATE_FIN).':00';# On rajoute les secondes.
		if(!$oCL_date->fx_verif_date($DATE_FIN, 'fr', true)){
			$nb_erreur++;
			$_SESSION['modifier_contrat']['message'].= "<span class='alert'>La date de fin est invalide.</span><br />";
			unset($_SESSION['modifier_contrat']['DATE_FIN']);
		}
		
		# On vire l'éventuelle virgule du prix.
		$PRIX = str_replace(',', '.', $PRIX);
		
		# On vérifie que la date de début soit supérieure à la date de fin.
		if($oCL_date->fx_ajouter_date($DATE_DEBUT, true, true, 'fr') >= $oCL_date->fx_ajouter_date($DATE_FIN, true, true, 'fr')){
			# Date de début supérieure à la date de fin.
			$_SESSION['modifier_contrat']['message'].= "<span class='orange'>La date de début est supérieure à la date de fin.</span><br />";
			$nb_erreur++;
		}
		
		if($nb_erreur == 0){
			# On met en forme les dates (EN).
			$DATE_DEBUT = $oCL_date->fx_ajouter_date($DATE_DEBUT, true, false, 'fr', 'en');
			$DATE_FIN = $oCL_date->fx_ajouter_date($DATE_FIN, true, false, 'fr', 'en');
		
			# On récupère le destinataire. (On récupère la personne pour le contrat en cours qui n'est pas la personne en cours)
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$destinataire = $oPCS_contrat->fx_recuperer_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			$oMSG->setData('ID_PERSONNE', $destinataire[0]['ID_PERSONNE']);
			
			$destinataire = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

			# On récupère l'expéditeur.
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$expediteur = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			# On met à jour le contrat.
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			$oMSG->setData('STATUT_CONTRAT', $STATUT_CONTRAT);
			$oMSG->setData('DESCRIPTION', $DESCRIPTION);
			$oMSG->setData('DATE_DEBUT', $DATE_DEBUT);
			$oMSG->setData('DATE_FIN', $DATE_FIN);
			$oMSG->setData('PRIX', $PRIX);
			$oMSG->setData('DESTINATAIRE', $destinataire[0]['ID_PERSONNE']);

			$oPCS_contrat->fx_maj_contrat($oMSG);
			
			# On envoi un mail au destinataire.
			$additional_headers = "From: noreply@liveanim.fr \r\n";
			$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
			$destinataires = $destinataire[0]['EMAIL'];
			$sujet = utf8_decode("LiveAnim [Modification du contrat N°".$ID_CONTRAT."]");
			
			$message = "------------------------------\n";
			$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
			$message.= "------------------------------\n\n";
			$message.= utf8_decode("Bonjour ".$destinataire[0]['PSEUDO'].", \n");
			$message.= utf8_decode("Le contrat N°".$ID_CONTRAT." a été modifié. \n\n");
			$message.= utf8_decode("Votre dernière proposition a été rejetée, vous pouvez prendre connaissance des modifications à ".$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT."\n");
			$message.= utf8_decode("Voici le commentaire qu'à mis votre interlocuteur: \n\n");
			$message.= utf8_decode($DESCRIPTION." \n\n\n");

			$message.= utf8_decode("------------------------------\n\n\n");
			$message.= utf8_decode("LiveAnim vous remercie de votre confiance et vous rappelle que vous pouvez nous contacter à support@liveanim.com !\n\n");
			$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
			
			mail($destinataires, $sujet, $message, $additional_headers);
			
			# On envoi un message au destinataire.
			$TITRE = "<span class='orange'>Refus de votre proposition</span> [Contrat N°".$ID_CONTRAT."]";
			$CONTENU = "La demande de contrat que vous avez fait à <span class='rose'>".$expediteur[0]['PSEUDO']."</span> vient d'être refusée.<br /><br />".
						$expediteur[0]['PSEUDO']." a modifié certains paramètres du contrat et vous l'a retourné.<br />".
						"Vous pouvez consulter les modifications dans votre historique des contrats ou en cliquant sur ce lien: ".
						"<a href='".$oCL_page->getPage('contrat')."?id_contrat=".$ID_CONTRAT."'>Voir le contrat</a><br /><br />".
						"<b>L'équipe LiveAnim.</b>";
						
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('CONTENU', $CONTENU);
			$oMSG->setData('DATE_ENVOI', date('Y-m-d H:i:s'));
			$oMSG->setData('EXPEDITEUR', $expediteur[0]['ID_PERSONNE']);
			$oMSG->setData('DESTINATAIRE', $destinataire[0]['ID_PERSONNE']);
			$oMSG->setData('TYPE_MESSAGE', 'Contrat');
			$oMSG->setData('VISIBLE', 1);
			
			$ID_MESSAGE = $oPCS_message->fx_creer_message($oMSG)->getData(1);
			
			$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
			$oMSG->setData('ID_PERSONNE', $destinataire[0]['ID_PERSONNE']);
			$oMSG->setData('STATUT_MESSAGE', 'Non lu');
			
			$oPCS_message->fx_lier_message($oMSG);			
			
			$_SESSION['modifier_contrat'] = Array();
			$_SESSION['contrat']['message_affiche'] = false;
			$_SESSION['contrat']['message'].= "<span class='valide'>Le contrat a été modifié, ".$destinataire[0]['PSEUDO']." a été prévenu des modifications.</span><br />";
			header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
		}else{
			# Une erreur a eue lieu, au moins.
			$_SESSION['modifier_contrat']['message'].= "<span class='valide'>Le contrat n'a pas été modifié.</span><br />";
			header('Location: '.$oCL_page->getPage('modifier_contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
		}
		
	}else{
		# Pas de POST.
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

	/*
	* Attention: 
	* Lorsque l'on parle de $_SESSION['compte']['TYPE_PERSONNE'] on parle à la fois de la personne connectée et de la 
	* personne modifiée. En effet, si le type est "Admin" alors il a tous les droits de modifications.
	* Si le type est Prestataire alors il peut modifier ses infos de prestations.
	* Si le type est Organisateur alors il ne peut modifier que ses infos perso.
	*
	* Amélioration possible pour une plus grande facilité d'évolution:
	* 	- Modifier le script appelé selon le TYPE_PERSONNE en SESSION.
	* 	- Vérifier que le script a le droit d'être appelé par ce TYPE_PERSONNE.
	*	- Faire les modifications selon les infos BDD ou SESSION selon le script appelé.
	*/

# On vérifie que la personne est connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['form_fiche_membre_nom'])){
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_personne.php');		
		require_once('couche_metier/PCS_types.php');
		require_once('couche_metier/CL_date.php');
		require_once('couche_metier/CL_upload.php');
		require_once('couche_metier/CL_cryptage.php');
		
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		$oPCS_types = new PCS_types();
		$oCL_date = new CL_date();
		$oCL_cryptage = new CL_cryptage();
		
		# Si ce n'est pas un admin on vérifie que le mot de passe fournit correspond bien à l'ID_PERSONNE fournie (/!\ Modification de l'id possible /!\)
		if($_SESSION['compte']['TYPE_PERSONNE'] != "Admin"){
			
			$oMSG->setData('ID_PERSONNE', (int)$_POST['form_fiche_membre_id_personne']);
			$oMSG->setData('MDP', utf8_encode($oCL_cryptage->Cryptage($_POST['form_fiche_membre_mdp'], $_POST['form_fiche_membre_pseudo'])));
			
			$nb_personne = $oPCS_personne->fx_compter_personne_by_ID_PERSONNE_et_MDP($oMSG)->getData(1)->fetchAll();

			if($nb_personne[0]['nb_personne'] == 1){
				$id_personne_ok = true;
			}else{
				$id_personne_ok = false;
				$_SESSION['modification_fiche_membre']['message'] = "<span class='alert'>Le mot de passe saisi est incorrect. Aucune modification n'a été effectuée.</span><br />";
				$_SESSION['modification_fiche_membre']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
			}

		}else{
			$id_personne_ok = true;
		}
		
		if($id_personne_ok){
			
			# On récupère les types nécessaires:
				$oMSG->setData('ID_FAMILLE_TYPES', 'Civilité');
				$civilites = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
				
				$oMSG->setData('ID_FAMILLE_TYPES', 'Statut professionnel');
				$statuts_personne = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
				
			# On récupère la réduction du personnage.
			$oMSG->setData('ID_PERSONNE', (int)$_POST['form_fiche_membre_id_personne']);
			
			$reduction = $oPCS_personne->fx_recuperer_REDUCTION_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			
			# On prépare nos variables nécessaires pour les messages d'erreurs.
			$_SESSION['modification_fiche_membre']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
			$_SESSION['modification_fiche_membre']['message'] = "";# On initialise et on rajoutera par dessus.
			
			$nb_erreur = 0;
			
			# On supprime les chaines interdites.
			$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
		
			$ID_PERSONNE = preg_replace ($chaines_interdites, "", (int)$_POST['form_fiche_membre_id_personne']);
			$NOM = preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_fiche_membre_nom'])));
			$PRENOM = preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_fiche_membre_prenom'])));
			$CIVILITE = preg_replace ($chaines_interdites, "", $_POST['form_fiche_membre_civilite']);
			$DATE_NAISSANCE = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_date_naissance']));
			$URL_PHOTO_PRINCIPALE = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_url_photo_principale']));
			$EMAIL = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_email']));
			$TEL_FIXE = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_tel_fixe']));
			$TEL_PORTABLE = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_tel_portable']));
			if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				# Si c'est un admin qui modifie la fiche alors on autorise la modification de la réduction.
				$REDUCTION = preg_replace ($chaines_interdites, "", (int)trim($_POST['form_fiche_membre_reduction']));
			}else{
				$REDUCTION = $reduction[0]['REDUCTION'];
			}
			$ADRESSE = preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_fiche_membre_adresse'])));
			$CP = preg_replace ($chaines_interdites, "", trim((int)$_POST['form_fiche_membre_cp']));
			$VILLE = preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_fiche_membre_ville'])));
			$NEWSLETTER = preg_replace ($chaines_interdites, "", $_POST['form_fiche_membre_newsletter']);
			$OFFRES_ANNONCEURS = preg_replace ($chaines_interdites, "", $_POST['form_fiche_membre_offres_annonceurs']);
			
			# Si c'est un prestataire ou un admin qui modifie la fiche alors on prend en compte les informations suivantes.
			if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				$DESCRIPTION = nl2br(preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_fiche_membre_description']))));
				$STATUT_PERSONNE = preg_replace ($chaines_interdites, "", $_POST['form_fiche_membre_statut']);
				$DEPARTEMENTS = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_departements']));
				$SIRET = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_siret']));
				$TARIFS = nl2br(preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_tarifs'])));
				$DISTANCE_PRESTATION_MAX = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_distance_prestation_max']));
				$CV_VIDEO = preg_replace ($chaines_interdites, "", trim($_POST['form_fiche_membre_cv_video']));
				$MATERIEL = nl2br(preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_fiche_membre_materiel']))));
				
				# On récupère et on traite les rôles choisis.
				$ROLES = "";
				if(!empty($_POST['form_fiche_membre_roles'])){
					foreach($_POST['form_fiche_membre_roles'] as $key=>$role){
						$ROLES.= $role.",";
					}
					$ROLES = preg_replace ($chaines_interdites, "", $ROLES);
				}
				# Peu importe le cas précédent on vérifie les Rôles.
				if(empty($_POST['form_fiche_membre_roles']) || empty($ROLES)){
					$_SESSION['modification_fiche_membre']['message'].= "<span class='orange petit'>Attention: Vous n'avez pas donné vos qualifications, vous ne pouvez donc pas être trouvé lors des recherches d'artistes.</span><br />";
				}
				
			}
			
			# On vérifie l'intégrité des données:
			
			# On commence par vérifier que les champs obligatoire ne soient pas vides.
			if(empty($NOM) || empty($PRENOM) || empty($CIVILITE) || empty($EMAIL)){
				$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>Un des champs obligatoire est vide.<span class='petit'>(Nom, prénom, civilité et email)<span></span><br />";
				$nb_erreur++;
			}
			
			# On vérifie que la civilité soit correcte.
			$civilite_ok = 0;
			foreach($civilites as $key=>$civilite){
				if($civilite['ID_TYPES'] == $CIVILITE){
					$civilite_ok++;
				}
			}
			
			# Si ça vaut 0 alors c'est que le type n'existe pas en BDD donc modification formulaire. Si plus de 1 alors c'est qu'on a deux types identiques en BDD. (impossible)
			if($civilite_ok != 1){
				$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>La civilité sélectionnée n'existe pas.</span><br />";
				$nb_erreur++;
			}
			
			# On vérifie le format de date, on attend un format FR et on veut le transformer en EN.
			if($oCL_date->fx_verif_date($DATE_NAISSANCE, "fr")){
				$DATE_NAISSANCE = $oCL_date->fx_convertir_date($DATE_NAISSANCE);
			}else{
				if($oCL_date->fx_verif_date($DATE_NAISSANCE, "en")){
					# La date est déjà au format en, on ne fait rien.
					
				}else{
					# La date n'est ni au format en, ni fr.
					$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>Date incorrecte. <span class='petit'>Format: 00/00/0000 ou 0000/00/00.</span></span><br />";
					$nb_erreur++;
				}
			}
			
			# On s'occupe de l'image. (photo)
			if(!empty($_FILES) && $_FILES['form_fiche_membre_nouvelle_photo_principale']['error'] == 0){
					$oCL_upload = new CL_upload($_FILES['form_fiche_membre_nouvelle_photo_principale'], "images/uploads/membres", array("png", "gif", "jpg", "jpeg"), 0777, array("image/jpeg", "image/jpeg", "image/png", "image/gif", "image/pjpg", "image/pjpeg"), 200, 200, 2000000);
					
					$new_filename = $ID_PERSONNE."_".date("Y-m-d_H-i-s");
					$ext = explode('.', $_FILES['form_fiche_membre_nouvelle_photo_principale']['name']);
					$extension = $ext[count($ext)-1];
					
					$tab_message = $oCL_upload->fx_upload($_FILES['form_fiche_membre_nouvelle_photo_principale']['name'], $new_filename);
					
					if($tab_message['reussite'] == true){
						$URL_PHOTO_PRINCIPALE =  $oCL_page->getPage('accueil', 'absolu').$tab_message['resultat'];
					}else{
						$_SESSION['modification_fiche_membre']['message'].= $tab_message['resultat'];
						$URL_PHOTO_PRINCIPALE = "";
						$echec_upload = true;
						# On empèche pas la modification de la fiche.
					}
			}# On ne fait rien de plus concernant le téléchargement. 
			# Si il y a un téléchargement il change l'url de la photo, il reste prioritaire.
			
			# On teste si l'adresse e-mail est à un format valide.
			if(!filter_var($EMAIL, FILTER_VALIDATE_EMAIL)){
				
				$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>L'email que vous avez rentré est invalide.</span><br />";
				$nb_erreur++;
			}
			
			# Si c'est un prestataire ou un admin qui modifie la fiche alors on prend en compte les informations suivantes.
			if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				
				# Au cas où il y ai eu un autre séparateur que la virgule.
				$DEPARTEMENTS = str_replace(array(";", ".", "/", "_", "-"), ",", $DEPARTEMENTS);
				
				# On limite le nombre de départements à celui indiqué par le pack, sauf si admin.
				if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" && strlen($DEPARTEMENTS) > 0){
					$tab_departements = Array();
					$tab_departements = explode(',', $DEPARTEMENTS);
					$DEPARTEMENTS = "";# On met à vide.
					
					for($i = 0;$i < $_SESSION['pack']['NB_DEPARTEMENTS_ALERTE']; $i++){
						# S'il n'y a qu'un seul caractère on met un 0 devant.
						if(strlen((string)$tab_departements[$i]) == 1){
							$DEPARTEMENTS.= "0";
						}else if(strlen((string)$tab_departements[$i]) == 0){
							# Si il n'a pas rentré de département (et n'a donc pas atteint max qu'il peut utiliser) alors on sort.
							break;
						}else if(strlen((string)$tab_departements[$i]) > 2){
							# Si le numéro du département est supérieur à 3 chiffre alors c'est qu'il y a un souci ^^
							$tab_departements[$i] = substr($tab_departements[$i],0,3);
						}
						$DEPARTEMENTS.= trim($tab_departements[$i]).", ";						
					}
					# On vire les deux derniers caractères.
					$DEPARTEMENTS[strlen(trim($DEPARTEMENTS))-1] = "";
					$DEPARTEMENTS = trim($DEPARTEMENTS);
					
					# Vérification finale au cas où.
					if($DEPARTEMENTS == "Array"){
						$DEPARTEMENTS = "";
					}
				}
				
				# On vérifie le siret uniquement s'il n'est pas vide.
				if($SIRET != ""){
					$regex_siret = "/^[0-9]{3}[ \.\-]?[0-9]{3}[ \.\-]?[0-9]{3}[ \.\-]?[0-9]{5}$/";
					if(!preg_match($regex_siret, $SIRET)){
						$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>Le numéro de SIRET est invalide. <span class='petit noir'>(14 chiffres: 123 456 789 12345)</span></span><br />";
						$nb_erreur++;
					}
				}				
				
				# On vire les virgules probables.
				$DISTANCE_PRESTATION_MAX = str_replace(",", ".", $DISTANCE_PRESTATION_MAX);
				
				# Si malgré ça la distance ne correspond pas.
				if(!is_numeric($DISTANCE_PRESTATION_MAX)){
					$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>La distance de prestation maximale est incorrecte. <span class='petit'>(Ex: 250/999.0/99,5)</span></span><br />";
					$nb_erreur++;
				}
				
				
				# On vérifie que le statut soit correct.
				$statut_personne_ok = 0;
				foreach($statuts_personne as $key=>$statut_personne){
					if($statut_personne['ID_TYPES'] == $STATUT_PERSONNE){
						$statut_personne_ok++;
					}
				}
				
				# Si ça vaut 0 alors c'est que le type n'existe pas en BDD donc modification formulaire. Si plus de 1 alors c'est qu'on a deux types identiques en BDD. (impossible)
				if($statut_personne_ok != 1){
					$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>Le statut sélectionné n'existe pas.</span><br />";
					$nb_erreur++;
				}
				
			}
			
			# on récupère les infos de la personne.
			$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
					
			$personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			
			# On vérifie l'email fournit par rapport à l'email de en BDD.
			if($EMAIL != $personne[0]['EMAIL']){
				# L'email a été modifié, on doit vérifier s'il n'a pas déjà été pris.
				$oMSG->setData('EMAIL', $EMAIL);
				
				$nb_email = $oPCS_personne->fx_compter_email_by_EMAIL($oMSG)->getData(1)->fetchAll();
				
				if($nb_email[0]['nb_email'] != 0){
					# L'email existe déjà.
					$_SESSION['modification_fiche_membre']['message'].= "<span class='orange'>L'email saisi est déjà utilisé.</span><br />";
					$nb_erreur++;
				}
			}
			
			
			# On regarde les erreurs.
			if($nb_erreur == 0){
				# On écrit le message.
				$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
				$oMSG->setData('NOM', $NOM);
				$oMSG->setData('PRENOM', $PRENOM);
				$oMSG->setData('CIVILITE', $CIVILITE);
				$oMSG->setData('DATE_NAISSANCE', $DATE_NAISSANCE);
				$oMSG->setData('URL_PHOTO_PRINCIPALE', $URL_PHOTO_PRINCIPALE);
				$oMSG->setData('EMAIL', $EMAIL);
				$oMSG->setData('TEL_FIXE', $TEL_FIXE);
				$oMSG->setData('TEL_PORTABLE', $TEL_PORTABLE);
				$oMSG->setData('REDUCTION', $REDUCTION);
				$oMSG->setData('ADRESSE', $ADRESSE);
				$oMSG->setData('CP', $CP);
				$oMSG->setData('VILLE', $VILLE);
				$oMSG->setData('NEWSLETTER', $NEWSLETTER);
				$oMSG->setData('OFFRES_ANNONCEURS', $OFFRES_ANNONCEURS);
				
				# Si c'est un prestataire ou un admin qui modifie la fiche alors on prend en compte les informations suivantes.
				if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
					$oMSG->setData('DESCRIPTION', $DESCRIPTION);
					$oMSG->setData('STATUT_PERSONNE', $STATUT_PERSONNE);
					$oMSG->setData('DEPARTEMENTS', $DEPARTEMENTS);
					$oMSG->setData('SIRET', $SIRET);
					$oMSG->setData('TARIFS', $TARIFS);
					$oMSG->setData('DISTANCE_PRESTATION_MAX', $DISTANCE_PRESTATION_MAX);
					$oMSG->setData('CV_VIDEO', $CV_VIDEO);
					$oMSG->setData('MATERIEL', $MATERIEL);		
					$oMSG->setData('ROLES', $ROLES);					
				}
				
				# On spécifie qui est-ce qui modifie la fiche:
				$oMSG->setData('TYPE_PERSONNE', $_SESSION['compte']['TYPE_PERSONNE']);		

				$oPCS_personne->fx_maj_fiche_personnelle_selon_TYPE_PERSONNE($oMSG);

				if($echec_upload){
					$_SESSION['modification_fiche_membre']['message'].= "<span class='orange'>Le téléchargement de l'image a échoué.<br />Les autres informations ont été correctement enregistrées.</span><br />";
				}else{
					$_SESSION['modification_fiche_membre']['message'].= "<span class='valide'>Les modifications ont bien été effectuées.</span><br />";
				}
				
				# On modifie les informations de session si ce n'est pas un admin.
				if($_SESSION['compte']['TYPE_PERSONNE'] != "Admin"){
					
					$_SESSION['compte']['PSEUDO'] = $personne[0]['PSEUDO'];
					$_SESSION['compte']['NOM'] = $personne[0]['NOM'];
					$_SESSION['compte']['PRENOM'] = $personne[0]['PRENOM'];
					$_SESSION['compte']['CIVILITE'] = $personne[0]['CIVILITE'];
					$_SESSION['compte']['EMAIL'] = $personne[0]['EMAIL'];
				}
				# On redirige.
				if($_SESSION['page_actuelle'] == "modifier_fiche_membre"){
					header('Location: '.$oCL_page->getPage('modifier_fiche_membre', 'absolu')."?id_personne=".$ID_PERSONNE);
				}else{
					header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu'));
				}
				
			}else{
				$_SESSION['modification_fiche_membre']['message'].= "<span class='alert'>Aucune modification n'a été effectuée.</span><br />";

				if($_SESSION['page_actuelle'] == "modifier_fiche_membre"){
					header('Location: '.$oCL_page->getPage('modifier_fiche_membre', 'absolu')."?id_personne=".$ID_PERSONNE);
				}else{
					header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu'));
				}
				
			}
		# Fin de la vérification de la validité de l'ID_PERSONNE par rapport au mdp.
		}else{
			header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu'));
		}
	}else{
		# Si pas de POST.
		header('Location: '.$oCL_page->getPage($_SESSION['page_actuelle'], 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_pack_nom'])){
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_pack.php');		
		require_once('couche_metier/PCS_types.php');
		
		$oMSG = new MSG();
		$oPCS_pack = new PCS_pack();
		$oPCS_types = new PCS_types();
		
		# On récupère les types nécessaires:
		$oMSG->setData('ID_FAMILLE_TYPES', 'Type de pack');
		$types_pack = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
		
		$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/");
	
		$ID_PACK = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_id_pack']);
		$NOM = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_pack_nom'])));
		$DESCRIPTION = nl2br(ucfirst(trim($_POST['form_pack_description'])));
		$TYPE_PACK = preg_replace($chaines_interdites, "", $_POST['form_pack_type_pack']);
		$PRIX_BASE = preg_replace($chaines_interdites, "", trim($_POST['form_pack_prix_base']));
		$DUREE = preg_replace($chaines_interdites, "", trim($_POST['form_pack_duree']));
		$SOUMIS_REDUCTIONS_PARRAINAGE = preg_replace($chaines_interdites, "", $_POST['form_pack_soumis_reduction_parrainage']);
		$GAIN_PARRAINAGE_MAX = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_gain_parrainage_max']);
		$REDUCTION = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_reduction']);
		$VISIBLE = preg_replace($chaines_interdites, "", $_POST['form_pack_visible']);

		$CV_VISIBILITE = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_cv_visibilite']);
		$CV_ACCESSIBLE = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_cv_accessible']);
		$NB_FICHES_VISITABLES = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_nb_fiches_visitables']);
		$CV_VIDEO_ACCESSIBLE = preg_replace($chaines_interdites, "", $_POST['form_pack_cv_video_accessible']);
		$ALERTE_NON_DISPONIBILITE = preg_replace($chaines_interdites, "", $_POST['form_pack_alerte_non_disponibilite']);
		$NB_DEPARTEMENTS_ALERTE = preg_replace($chaines_interdites, "", (int)$_POST['form_pack_nb_departements_alerte']);
		$PARRAINAGE_ACTIVE = preg_replace($chaines_interdites, "", $_POST['form_pack_parrainage_active']);
		$PREVISUALISATION_FICHES = preg_replace($chaines_interdites, "", $_POST['form_pack_previsualisation_fiches']);
		$CONTRATS_PDF = preg_replace($chaines_interdites, "", $_POST['form_pack_contrats_pdf']);
		$SUIVI = preg_replace($chaines_interdites, "", $_POST['form_pack_suivi']);
		$PUBS = preg_replace($chaines_interdites, "", $_POST['form_pack_pubs']);
		
		# On prépare nos variables nécessaires pour les messages d'erreurs.
		$_SESSION['modifier_fiche_pack']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
		$_SESSION['modifier_fiche_pack']['message'] = "";# On initialise et on rajoutera par dessus.
		
		$nb_erreur = 0;
		
		# On vérifie l'intégrité des données:
		
		# On commence par vérifier que les champs obligatoire ne soient pas vides.
		if(empty($NOM) || empty($DESCRIPTION) || empty($NB_FICHES_VISITABLES)){
			$_SESSION['modifier_fiche_pack']['message'].= "<span class='alert'>Un de champs obligatoire est vide.</span><br />";
			$nb_erreur++;
		}

		# On vérifie que le type de pack soit correct.
		$type_pack_ok = 0;
		foreach($types_pack as $key=>$type_pack){
			if($type_pack['ID_TYPES'] == $TYPE_PACK){
				$type_pack_ok++;
			}
		}
		
		# Si ça vaut 0 alors c'est que le type n'existe pas en BDD donc modification formulaire. Si plus de 1 alors c'est qu'on a deux types identiques en BDD. (impossible)
		if($type_pack_ok != 1){
			$_SESSION['modifier_fiche_pack']['message'].= "<span class='alert'>Le type de pack sélectionné n'existe pas.</span><br />";
			$nb_erreur++;
		}
		
		# On vire les virgules probables.
		$PRIX_BASE = str_replace(",", ".", $PRIX_BASE);
		
		# Si malgré ça le prix ne correspond pas.
		if(!is_numeric($PRIX_BASE)){
			$_SESSION['modifier_fiche_pack']['message'].= "<span class='alert'>Le prix de base est incorrect. <span class='petit'>(Ex: 250/999.0/99,5)</span></span><br />";
			$nb_erreur++;
		}
		
		
		# S'il n'y a pas d'erreurs.
		if($nb_erreur == 0){
			$oMSG->setData('ID_PACK', $ID_PACK);
			$oMSG->setData('NOM', $NOM);
			$oMSG->setData('DESCRIPTION', $DESCRIPTION);
			$oMSG->setData('TYPE_PACK', $TYPE_PACK);
			$oMSG->setData('PRIX_BASE', $PRIX_BASE);
			$oMSG->setData('DUREE', $DUREE);
			$oMSG->setData('SOUMIS_REDUCTIONS_PARRAINAGE', $SOUMIS_REDUCTIONS_PARRAINAGE);
			$oMSG->setData('GAIN_PARRAINAGE_MAX', $GAIN_PARRAINAGE_MAX);
			$oMSG->setData('REDUCTION', $REDUCTION);
			$oMSG->setData('VISIBLE', $VISIBLE);
			
			$oMSG->setData('CV_VISIBILITE', $CV_VISIBILITE);
			$oMSG->setData('CV_ACCESSIBLE', $CV_ACCESSIBLE);
			$oMSG->setData('NB_FICHES_VISITABLES', $NB_FICHES_VISITABLES);
			$oMSG->setData('CV_VIDEO_ACCESSIBLE', $CV_VIDEO_ACCESSIBLE);
			$oMSG->setData('ALERTE_NON_DISPONIBILITE', $ALERTE_NON_DISPONIBILITE);
			$oMSG->setData('NB_DEPARTEMENTS_ALERTE', $NB_DEPARTEMENTS_ALERTE);
			$oMSG->setData('PARRAINAGE_ACTIVE', $PARRAINAGE_ACTIVE);
			$oMSG->setData('PREVISUALISATION_FICHES', $PREVISUALISATION_FICHES);
			$oMSG->setData('CONTRATS_PDF', $CONTRATS_PDF);
			$oMSG->setData('SUIVI', $SUIVI);
			$oMSG->setData('PUBS', $PUBS);
			
			$oPCS_pack->fx_modifier_pack($oMSG);
			
			$_SESSION['modifier_fiche_pack']['message'].= "<span class='valide'>Le pack a été modifié.</span><br />";
			header('Location: '.$oCL_page->getPage('modifier_fiche_pack')."?id_pack=".$ID_PACK);
			
		}else{
			$_SESSION['modifier_fiche_pack']['message'].= "<span class='alert'>Le pack n'a pas été modifié.</span><br />";
			header('Location: '.$oCL_page->getPage('modifier_fiche_pack')."?id_pack=".$ID_PACK);
		}
		
		
	}else{
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_modifier_news.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_ajouter_modifier_news_auteur'])){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_nouveaute.php');
		require_once('couche_metier/CL_date.php');
		require_once('couche_metier/CL_upload.php');
		
		$oMSG = new MSG();
		$oPCS_nouveaute = new PCS_nouveaute();
		$oCL_date = new CL_date();
		
		# On gère les variables.
		$_SESSION['modifier_news']['message'] = "";
		$_SESSION['modifier_news']['message_affiche'] = false;
		$nb_erreur = 0;
		
		# On récupère les données.
		$ID_NOUVEAUTE = (int)trim($_POST['form_ajouter_modifier_news_id_nouveaute']);
		$AUTEUR = ucfirst(trim($_POST['form_ajouter_modifier_news_auteur']));
		$TITRE = ucfirst(trim($_POST['form_ajouter_modifier_news_titre']));
		$ENTETE = nl2br(ucfirst(trim($_POST['form_ajouter_modifier_news_entete'])));
		$CONTENU = nl2br(ucfirst(trim($_POST['form_ajouter_modifier_news_contenu'])));
		$URL_PHOTO = trim($_POST['form_ajouter_modifier_news_url_photo']);
		$DATE_CREATION = trim($_POST['form_ajouter_modifier_news_date_creation']);
		$VISIBLE = $_POST['form_ajouter_modifier_news_visible'];
				
		# On vérifie le booléen de visibilité.
		if($VISIBLE == "on"){
			$VISIBLE = 1;
		}else{
			$VISIBLE = 0;
		}
		
		$_SESSION['modifier_news']['AUTEUR'] = $AUTEUR;
		$_SESSION['modifier_news']['TITRE'] = $TITRE;
		$_SESSION['modifier_news']['ENTETE'] = $ENTETE;
		$_SESSION['modifier_news']['CONTENU'] = $CONTENU;
		$_SESSION['modifier_news']['URL_PHOTO'] = $URL_PHOTO;
		$_SESSION['modifier_news']['VISIBLE'] = $VISIBLE;
		
		# On vérifie les informations.
		# On vérifie qu'aucun champ obligatoire ne soit vide.
		if(empty($AUTEUR) || empty($TITRE) || empty($CONTENU)){
			$nb_erreur++;
			$_SESSION['modifier_news']['message'].= "<span class='orange'>Un des champs obligatoire est vide.</span><br /><br />";
		}
		
		# On vérifie l'auteur.
		if(strlen($AUTEUR) > 100){
			$nb_erreur++;
			$_SESSION['modifier_news']['message'].= "<span class='orange'>L'auteur ne peux pas avoir plus de 100 caractères.</span><br /><br />";
		}
		
		# On s'occupe de la photo de la news
		if(!empty($_FILES) && $_FILES['form_ajouter_modifier_news_nouvelle_photo']['error'] == 0){
			$oCL_upload = new CL_upload($_FILES['form_ajouter_modifier_news_nouvelle_photo'], "images/uploads/news", array("png", "gif", "jpg", "jpeg"), 0777, array("image/jpeg", "image/jpeg", "image/png", "image/gif", "image/pjpg", "image/pjpeg"), 200, 200, 100000);
			
			
			$interdit = Array(' ', 'é', 'è', 'É', 'È', 'à', 'À', 'ù', '/', '\\', '-', '(', ')', '[', ']', '!');
			$remplace = Array('_', 'e', 'e', 'E', 'E', 'a', 'A', 'u', '', '', '', '', '', '', '', '');
			$new_filename = str_replace($interdit, $remplace, $TITRE);
			
			$tab_message = $oCL_upload->fx_upload($_FILES['form_ajouter_modifier_news_nouvelle_photo']['name'], $new_filename);
			
			if($tab_message['reussite'] == true){
				$URL_PHOTO =  $oCL_page->getPage('accueil', 'absolu').$tab_message['resultat'];
			}else{
				$_SESSION['modifier_news']['message'].= $tab_message['resultat'];
				$URL_PHOTO = "";
				$echec_upload = true;
				# On empèche pas la modification de la news.
			}
		}
		
		# On vérifie la date.
		if(!$oCL_date->fx_verif_date($DATE_CREATION, 'en', true)){
			$nb_erreur++;
			$_SESSION['modifier_news']['message'].= "<span class='orange'>Le format de la date est incorrect, format anglais attendu.</span><br /><br />";
		}	
		
		
		if($nb_erreur == 0){
			# On prépare le message.
			$oMSG->setData('ID_NOUVEAUTE', $ID_NOUVEAUTE);
			$oMSG->setData('AUTEUR', $AUTEUR);
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('ENTETE', $ENTETE);
			$oMSG->setData('CONTENU', $CONTENU);
			$oMSG->setData('URL_PHOTO', $URL_PHOTO);
			$oMSG->setData('DATE_CREATION', $DATE_CREATION);
			$oMSG->setData('VISIBLE', $VISIBLE);
			
			$oPCS_nouveaute->fx_modifier_nouveautee($oMSG)->getData(1);
			

			$_SESSION['modifier_news']['message'].= "<span class='valide'>La news a bien été modifiée.</span><br /><br />";
			header('Location: '.$oCL_page->getPage('modifier_news', 'absolu')."?id_news=".$ID_NOUVEAUTE);
			
		}else{
			header('Location: '.$oCL_page->getPage('modifier_news', 'absolu')."?id_news=".$ID_NOUVEAUTE);
		}
	}else{
		# Si pas de POST.
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_ajouter_modifier_pub_titre'])){
				
		# On initialise nos variables. 
		$nb_erreur = 0;
		$_SESSION['modifier_pub']['message_affiche'] = false;
		$_SESSION['modifier_pub']['message'] = "";
		
		$ID_PUB = (int)trim($_POST['form_ajouter_modifier_pub_id_pub']);
		$TITRE = trim($_POST['form_ajouter_modifier_pub_titre']);
		$CONTENU = trim($_POST['form_ajouter_modifier_pub_contenu']);
		$POSITION = (int)trim($_POST['form_ajouter_modifier_pub_position']);
		
		
		if(empty($TITRE) || empty($CONTENU)){
			$nb_erreur++;
			$_SESSION['modifier_pub']['message'].= "<span class='orange'>Un des champs est vide.</span><br />";
		}
		
		if($POSITION < 0){
			$nb_erreur++;
			$_SESSION['modifier_pub']['message'].= "<span class='orange'>La position sélectionnée est invalide.</span><br />";
		}
		
		if($ID_PUB <= 0){
			$nb_erreur++;
			$_SESSION['modifier_pub']['message'].= "<span class='orange'>L'ID de la pub modifiée est incorrect.</span><br />";
		}
		
		if($nb_erreur == 0){
			# On crée la pub.
			
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_pub.php');
			
			$oMSG = new MSG();
			$oPCS_pub = new PCS_pub();
		
			$oMSG->setData('ID_PUB', $ID_PUB);
			$oMSG->setData('TITRE', $TITRE);
			$oMSG->setData('CONTENU', $CONTENU);
			$oMSG->setData('POSITION', $POSITION);
			
			$oPCS_pub->fx_modifier_pub($oMSG);		
			
			$_SESSION['modifier_pub']['message'].= "<span class='valide'>La publicité a été modifiée.</span><br />";
			header('Location:'.$oCL_page->getPage('modifier_pub')."?id_pub=".$ID_PUB);
		
		}else{
			$_SESSION['modifier_pub']['message'].= "<span class='alert'>Une erreur est survenue, la publicité n'a pas été modifiée.</span><br />";
			header('Location:'.$oCL_page->getPage('modifier_pub')."?id_pub=".$ID_PUB);
		}		
	}else{
		header('Location:'.$oCL_page->getPage('liste_pubs_admin'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_ajouter_modifier_slide_titre'])){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_slide.php');
		require_once('couche_metier/CL_upload.php');
		
		$oMSG = new MSG();
		$oPCS_slide = new PCS_slide();
		
		# On initialise nos variables.
		$nb_erreur = 0;
		$_SESSION['modifier_slide']['message_affiche'] = false;
		$_SESSION['modifier_slide']['message'] = "";
		
		# On récupère les variables du formulaire.
		$ID_SLIDE = $_POST['form_ajouter_modifier_slide_id_slide'];
		$TITRE = $_POST['form_ajouter_modifier_slide_titre'];
		$LIEN = $_POST['form_ajouter_modifier_slide_lien'];
		$CLASSE = $_POST['form_ajouter_modifier_slide_classe'];
		$ORDRE = $_POST['form_ajouter_modifier_slide_ordre'];
		$ACCES = implode(',', $_POST['form_ajouter_modifier_slide_access']);
		$VISIBLE = $_POST['form_ajouter_modifier_slide_visible'];

		if(!empty($_FILES) && $_FILES['form_ajouter_modifier_slide_url']['error'] == 0){
			require_once('couche_metier/CL_upload.php');			
			
			$oCL_upload = new CL_upload($_FILES['form_ajouter_modifier_slide_url'], "images/slides", array("png", "gif", "jpg", "jpeg"), 0777, array("image/jpeg", "image/jpeg", "image/png", "image/gif", "image/pjpg", "image/pjpeg"), 200, 200, 500000);
			$ext = explode('.', $_FILES['form_ajouter_modifier_slide_url']['name']);
			$extension = $ext[count($ext)-1];
			
			$new_filename = str_replace(Array('é', 'è', 'ê', 'à', 'â', 'ù', 'À', 'É', 'È', 'Ê' ,' ', '/', '\\'), Array('e', 'e', 'e', 'a', 'a', 'u', 'A', 'E', 'E', 'E' ,'_', '_', '_'), $TITRE);

			$tab_message = $oCL_upload->fx_upload($_FILES['form_ajouter_modifier_slide_url']['name'], $new_filename, true, false);
			
			if($tab_message['reussite'] == true){
				$_SESSION['modifier_slide']['message'].= "<center class='rose'>Téléchargement réussi.</center>";
				$_SESSION['modifier_slide']['message_affiche'] = false;
				$URL = "images/slides/".$new_filename.".".$extension;
				$modification_file = true;
			}else{
				$_SESSION['modifier_slide']['message'].= "<span class='alert'>".$tab_message['resultat']."</span>";
				$_SESSION['modifier_slide']['message_affiche'] = false;
				$nb_erreur++;
			}
			header('Location:'.$oCL_page->getPage('modifier_slide', 'absolu'));
		}else{
			$modification_file = false;
		}
		
		if($VISIBLE == "on"){
			$VISIBLE = 1;
		}else{
			$VISIBLE = 0;
		}
		
		if($nb_erreur == 0){
			# On crée le slide.
			$oMSG->setData('ID_SLIDE', $ID_SLIDE);
			$oMSG->setData('TITRE', $TITRE);
			if($modification_file){
				$oMSG->setData('URL', $URL);
			}
			$oMSG->setData('LIEN', $LIEN);
			$oMSG->setData('CLASSE', $CLASSE);
			$oMSG->setData('ORDRE', $ORDRE);
			$oMSG->setData('ACCES', $ACCES);
			$oMSG->setData('VISIBLE', $VISIBLE);
			
			if($modification_file){
				$oPCS_slide->fx_modifier_slide($oMSG);
			}else{
				$oPCS_slide->fx_modifier_slide_sauf_URL($oMSG);
			}
			
			$_SESSION['modifier_slide']['message'].= "<center class='valide'>Le slide a été modifié.</center><br />";
		}else{
			$_SESSION['modifier_slide']['message'].= "<span class='alert'>Une erreur est survenue, le slide n'a pas été modifié.</span><br />";
		}
		
		header('Location:'.$oCL_page->getPage('modifier_slide', 'absolu')."?id_slide=".$ID_SLIDE);
	}else{
		header('Location:'.$oCL_page->getPage('gestion_slides', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_pack.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_pack = new PCS_pack();
	$oCL_date = new CL_date();
	
	# On initialise nos variables.
	$_SESSION['historique_achat_pack']['message'] = "";
	$_SESSION['historique_achat_pack']['message_affiche'] = false;
	$nb_erreur = 0;
	
	if(isset($_POST['form_activer_pack_date_achat'])){
		# On vérifie l'intégrité des données.
		if(!($oCL_date->fx_verif_date($_POST['form_activer_pack_date_achat'], "en", true))){
			# Si la date fournie est incorrecte.
			$nb_erreur++;
			$_SESSION['historique_achat_pack']['message'].= "<span class='alert'>Le format de la date fournie est incorrect. <span class='petit gris'>(C'est pas bien de modifier le code source !)</span></span><br />";
		}
		
		# On vérifie qu'il y a bien un résulat pour la date d'achat fournie pour la personne en cours.
		$oMSG->setData('DATE_ACHAT', $_POST['form_activer_pack_date_achat']);
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		
		
		$pack_personne = $oPCS_pack->fx_recuperer_pack_by_ID_PERSONNE_et_DATE_ACHAT($oMSG)->getData(1)->fetchAll();
		//$pack_personne[0]['nb_pack'] => COUNT(ID_PACK)
		
		if($pack_personne[0]['nb_pack'] != 1){
			# Le nombre de packs comptés est différent de 1, soit il n'y en a pas soit il y en a plusieurs, ce qui est théoriquement impossible.
			$nb_erreur++;
			$_SESSION['historique_achat_pack']['message'].= "<span class='alert'>Aucun pack n'a été trouvé pour la sélection faite.<br />Veuillez contacter le support si l'erreur ne vient pas de vous.</span><br />";
		}
		
		if($nb_erreur == 0){
			# Les informations fournies sont exactes.
			
			$now_en = date("Y-m-d H:i:s");
			# On récupère le pack activé en ce moment.
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$pack_personne_actuel = $oPCS_pack->fx_recuperer_pack_actif_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			
			# On modifie le pack activé en ce moment.
			$oMSG->setData('ID_PACK', $pack_personne_actuel[0]['ID_PACK']);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('DATE_ACHAT', $pack_personne_actuel[0]['DATE_ACHAT']);
			$oMSG->setData('DATE_FIN', $now_en);
			
			$oPCS_pack->fx_modifier_DATE_FIN_by_IDs($oMSG);
			
			# On modifie le pack activé sélectionné afin de l'activer.
			$oMSG->setData('ID_PACK', $pack_personne[0]['ID_PACK']);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('DATE_ACHAT', $_POST['form_activer_pack_date_achat']);
			$oMSG->setData('DATE_DEBUT', $now_en);
			$oMSG->setData('DATE_FIN', $oCL_date->fx_ajouter_date($now_en, true, false, 'en', 'en', 0, $pack_personne[0]['DUREE']));
			// On ajoute la DUREE à la date du jour pour obtenir la date de fin.

			$oPCS_pack->fx_modifier_DATE_DEBUT_et_DATE_FIN_by_IDs($oMSG);
			
			
			# On recharge la session.
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$nouveau_pack_personne_actuel = $oPCS_pack->fx_recuperer_pack_actif_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			
			$_SESSION['pack']['activé'] = true;
			$_SESSION['pack']['DATE_ACHAT'] = $oCL_date->fx_ajouter_date($nouveau_pack_personne_actuel[0]['DATE_ACHAT'], true, false, 'en', 'fr');
			$_SESSION['pack']['ID_PACK'] = $nouveau_pack_personne_actuel[0]['ID_PACK'];
			$_SESSION['pack']['NOM'] = $nouveau_pack_personne_actuel[0]['NOM'];
			$_SESSION['pack']['TYPE_PACK'] = $nouveau_pack_personne_actuel[0]['TYPE_PACK'];
			$_SESSION['pack']['PRIX_BASE'] = $nouveau_pack_personne_actuel[0]['PRIX_BASE'];
			$_SESSION['pack']['DUREE'] = $nouveau_pack_personne_actuel[0]['DUREE'];
			$_SESSION['pack']['CV_VISIBILITE'] = $nouveau_pack_personne_actuel[0]['CV_VISIBILITE'];
			$_SESSION['pack']['CV_ACCESSIBLE'] = $nouveau_pack_personne_actuel[0]['CV_ACCESSIBLE'];
			$_SESSION['pack']['NB_FICHES_VISITABLES'] = $nouveau_pack_personne_actuel[0]['NB_FICHES_VISITABLES'];# On ne charge pas ici le NB_FICHES_VISITABLES du pack mais celui 
																						 # de la table pack_personne, voir couche_metier/VIEW_pack.php.
			$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = $nouveau_pack_personne_actuel[0]['CV_VIDEO_ACCESSIBLE'];
			$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = $nouveau_pack_personne_actuel[0]['ALERTE_NON_DISPONIBILITE'];
			$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = $nouveau_pack_personne_actuel[0]['NB_DEPARTEMENTS_ALERTE'];
			$_SESSION['pack']['PARRAINAGE_ACTIVE'] = $nouveau_pack_personne_actuel[0]['PARRAINAGE_ACTIVE'];
			$_SESSION['pack']['PREVISUALISATION_FICHES'] = $nouveau_pack_personne_actuel[0]['PREVISUALISATION_FICHES'];
			$_SESSION['pack']['CONTRATS_PDF'] = $nouveau_pack_personne_actuel[0]['CONTRATS_PDF'];
			$_SESSION['pack']['SUIVI'] = $nouveau_pack_personne_actuel[0]['SUIVI'];
			$_SESSION['pack']['PUBS'] = $nouveau_pack_personne_actuel[0]['PUBS'];
			$_SESSION['pack']['date_fin_validite'] = $oCL_date->fx_ajouter_date($nouveau_pack_personne_actuel[0]['DATE_FIN'], true, false, 'en', 'fr');
			$_SESSION['pack']['date_fin_validite_formatee'] = $oCL_date->fx_ajouter_date($nouveau_pack_personne_actuel[0]['DATE_FIN'], true, true, 'en', 'fr');
			
			
			# On envoi l'email.
			$additional_headers = "From: noreply@liveanim.fr \r\n";
			$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
			$destinataires = $_SESSION['compte']['EMAIL'];
			$sujet = utf8_decode("LiveAnim [Activation d'un pack]");
			
			$message = "------------------------------\n";
			$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
			$message.= "------------------------------\n\n";
			$message.= utf8_decode("Bonjour ".$_SESSION['compte']['PSEUDO'].", \n");
			$message.= utf8_decode("Vous venez d'activer manuellement le pack ".$nouveau_pack_personne_actuel[0]['NOM']." acheté le ".$_SESSION['pack']['DATE_ACHAT'].". \n\n");
			$message.= utf8_decode("Ce pack est donc à présent utilisé, sa date de fin de validité est le ".$_SESSION['pack']['date_fin_validite'].". \n");
			$message.= utf8_decode("Le pack utilisé précédemment a donc été stoppé.\n\n");
			$message.= utf8_decode("Si ce n'est pas vous qui avez activé ce pack, vous pouvez contacter notre service client à l'adresse suivante:\n");
			$message.= utf8_decode("contact@liveanim.com \n\n");
			$message.= utf8_decode("L'adresse IP utilisée lors de l'activation de votre pack est: ".$_SERVER["REMOTE_ADDR"]."\n\n");
			$message.= utf8_decode("------------------------------\n\n\n");
			$message.= utf8_decode("LiveAnim vous remercie de votre confiance et vous souhaite de bien profiter de votre nouveau pack !\n\n");
			$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
			
			mail($destinataires, $sujet, $message, $additional_headers);
			
			# On redirige et on affiche.
			$_SESSION['historique_achat_pack']['message'].= "<span class='valide'>Votre pack a été correctement activé.<br />Vous pouvez profiter de ses fonctionnalités dès à présent.<br />Un email vous a été envoyé.</span><br />";
			header('Location: '.$oCL_page->getPage('historique_achat_pack', 'absolu')."#achat_pack");
			
		}else{
			
			header('Location: '.$oCL_page->getPage('historique_achat_pack', 'absolu')."#achat_pack");
		}
	}else{
		# L'appel à la page n'a pas été fait depuis le formulaire, redirection.
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
session_start();

require_once('couche_metier/CL_page.php');
$oCL_page = new CL_page();

if(isset($_POST['form_inscription_login'])){
	# On vérifie que le formulaire arrive bien du btn inscription.

	# On formate correctement les données:
	$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
	$parrain = preg_replace ($chaines_interdites, "", $_POST['form_inscription_parrain']);
	$login = preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_inscription_login'])));
	$nom = preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_inscription_nom'])));
	$prenom = preg_replace ($chaines_interdites, "", ucfirst(trim($_POST['form_inscription_prenom'])));
	$civilite = preg_replace ($chaines_interdites, "", $_POST['form_inscription_civilite']);
	$type_personne = preg_replace ($chaines_interdites, "", $_POST['form_inscription_type_personne']);
	$mdp = preg_replace ($chaines_interdites, "", $_POST['form_inscription_mdp']);
	$mdp2 = preg_replace ($chaines_interdites, "", $_POST['form_inscription_mdp2']);
	$email = preg_replace ($chaines_interdites, "", trim($_POST['form_inscription_email']));
	$email2 = preg_replace ($chaines_interdites, "", trim($_POST['form_inscription_email2']));
	$cgu = preg_replace ($chaines_interdites, "", $_POST['form_inscription_cgu']);
	$newsletter = preg_replace ($chaines_interdites, "", $_POST['form_inscription_newsletter']);
	$offres_annonceurs = preg_replace ($chaines_interdites, "", $_POST['form_inscription_offres_annonceurs']);
	$connaissance_site = preg_replace ($chaines_interdites, "", $_POST['form_inscription_connaissance_site']);
	
	
	
	# On prépare le terrain pour sauvegarder les informations transmises. On les videra si elles sont incorrectes !
	$_SESSION['inscription'] = array();
	$_SESSION['inscription']['login'] = $login;
	$_SESSION['inscription']['nom'] = $nom;
	$_SESSION['inscription']['prenom'] = $prenom;
	$_SESSION['inscription']['civilite'] = $civilite;
	$_SESSION['inscription']['type_personne'] = $type_personne;
	$_SESSION['inscription']['mdp'] = $mdp;
	$_SESSION['inscription']['mdp2'] = $mdp2;
	$_SESSION['inscription']['email'] = $email;
	$_SESSION['inscription']['email2'] = $email2;
	$_SESSION['inscription']['cgu'] = $cgu;
	$_SESSION['inscription']['newsletter'] = $newsletter;
	$_SESSION['inscription']['offres_annonceurs'] = $offres_annonceurs;
	$_SESSION['inscription']['connaissance_site'] = $connaissance_site;
	$_SESSION['inscription']['message_affiche'] = false;# On indique que le message n'a pas encore été affiché.
	$_SESSION['inscription']['message'] = "";# On initialise et on rajoutera par dessus.
	
	$nb_erreur = 0;
	
	# On vérifie que ce qui est nécessaire n'est pas vide.
	if(empty($login) || empty($mdp) || empty($email) || empty($nom) || empty($prenom)){

		$_SESSION['inscription']['message'].= "<span class='alert'>Un des champs requis est vide.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On vérifie que l'ID_PARRAIN fournit est correct.
	if($parrain == "0" || $parrain == ""){
		# L'ID_PARRAIN fournit est incorrect/nul mais n'annulera pas pour autant l'inscription.
		$parrain = "Aucun";
		unset($_SESSION['parrain']);# On supprime le parrain s'il y en avait un.
	}
	
	# On vérifie que la civilité sélectionnée est correcte.
	$civilites = array("Mr", "Mme", "Mlle");
	if(!in_array($civilite, $civilites)){
		# L'utilisateur a modifié le code source, on l'envoi chier.
		$_SESSION['inscription']['civilite'] = "";
		
		$_SESSION['inscription']['message'].= "<span class='alert'>La modification du code source dans le but de passer les protections du système est interdite.<br />Votre IP a été enregistrée, nous vous rappellons que ce que vous faites est punissable aux yeux de la loi.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On vérifie que le type de personne fournit est correct: ----------------------------------------------------------- /!\ Si rajout de type_personne dans la BDD, rajouter ici aussi !
	$types_personne = array("Prestataire", "Organisateur");
	if(!in_array($type_personne, $types_personne)){
		# L'utilisateur a modifié le code source, on l'envoi chier.
		$_SESSION['inscription']['type_personne'] = "";
		
		$_SESSION['inscription']['message'].= "<span class='alert'>La modification du code source dans le but de passer les protections du système est interdite.<br />Votre IP a été enregistrée, nous vous rappellons que ce que vous faites est punissable aux yeux de la loi.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On vérifie les tailles des champs saisis.
	if(strlen($login) < 4){
		$_SESSION['inscription']['login'] = "";
		$_SESSION['inscription']['login'] = "";
		$_SESSION['inscription']['message'].= "<span class='alert'>Votre pseudo est trop court. 4 caractères minimum.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	if(strlen($login) > 20){
		$_SESSION['inscription']['login'] = "";
		$_SESSION['inscription']['login'] = "";
		$_SESSION['inscription']['message'].= "<span class='alert'>Votre pseudo est trop long. 20 caractères maximum.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	if(strlen($mdp) < 4){
		$_SESSION['inscription']['mdp'] = "";
		$_SESSION['inscription']['mdp2'] = "";
		$_SESSION['inscription']['message'].= "<span class='alert'>Votre mot de passe est trop court. 4 caractères minimum.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	if(strlen($mdp) > 20){
		$_SESSION['inscription']['mdp'] = "";
		$_SESSION['inscription']['mdp2'] = "";
		$_SESSION['inscription']['message'].= "<span class='alert'>Votre mot de passe est trop long. 20 caractères maximum.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On vérifie que la case des CGU a bien été cochée:
	if($cgu == 0){
		$_SESSION['inscription']['message'].= "<span class='alert'>Vous n'avez pas validé les Conditions Générales d'Utilisation.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On vérifie que les mdp soient bien égaux:
	if(!($mdp == $mdp2)){
		$_SESSION['inscription']['mdp'] = "";
		$_SESSION['inscription']['mdp2'] = "";
		$_SESSION['inscription']['message'].= "<span class='alert'>Les deux mots de passe ne correspondent pas. Veuillez les retaper.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	
	
	if(!($email == $email2)){
		$_SESSION['inscription']['message'].= "<span class='alert'>Les deux emails ne correspondent pas. Veuillez les corriger.</span><br />";
		
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On vérifie que le login et l'email n'existent pas déjà:
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/MSG.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	
	$oMSG->setData('PSEUDO', $login);
	$oMSG->setData(1, "");
	
	$nb_pseudo = $oPCS_personne->fx_compter_pseudo_by_PSEUDO($oMSG)->getData(1)->fetchAll();
	if($nb_pseudo[0]['nb_pseudo'] > 0){
	
		$_SESSION['inscription']['login'] = "";
		
		$_SESSION['inscription']['message'].= "<span class='alert'>L'identifiant que vous avez rentré est déjà utilisé.</span><br />";
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	$oMSG->setData('EMAIL', $email);
	$oMSG->setData(1, "");
	
	$nb_email = $oPCS_personne->fx_compter_email_by_EMAIL($oMSG)->getData(1)->fetchAll();
	if($nb_email[0]['nb_email'] > 0){
	
		$_SESSION['inscription']['email'] = "";
		$_SESSION['inscription']['email2'] = "";
		
		$_SESSION['inscription']['message'].= "<span class='alert'>L'email que vous avez rentré est déjà utilisé.</span><br />";
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On teste si l'adresse e-mail est à un format valide.
	if(!filter_var($email, FILTER_VALIDATE_EMAIL)){
		
		$_SESSION['inscription']['email'] = "";
		$_SESSION['inscription']['email2'] = "";
		
		$_SESSION['inscription']['message'].= "<span class='alert'>L'email que vous avez rentré est invalide.</span><br />";
		header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
		$nb_erreur++;
	}
	
	# On teste les valeurs des options.
	
	# On teste la valeur de la newsletter.
	
	if($newsletter == "on"){
		$_SESSION['inscription']['newsletter'] = true;
		$newsletter = 1;
	}else{
		$_SESSION['inscription']['newsletter'] = false;
		$newsletter = 0;
	}
	
	# On teste la valeur des offres_annonceurs.
	if($offres_annonceurs == "on"){
		$_SESSION['inscription']['offres_annonceurs'] = true;
		$offres_annonceurs = 1;
	}else{
		$_SESSION['inscription']['offres_annonceurs'] = false;
		$offres_annonceurs = 0;
	}
	
	

	# On a effectué toutes les vérifications, il ne reste plus qu'à crypter les mots de passes et envoyer les requêtes d'insertion.
	if($nb_erreur == 0){
	
		require_once 'couche_metier/CL_cryptage.php';
		$oCL_cryptage = new CL_cryptage();
		
		# On crypte le mot de passe.
		$mdp_crypte = $oCL_cryptage->Cryptage($mdp, $login);
		
		# On récupère l'IP
		$IP = $_SERVER["REMOTE_ADDR"];
		
		# On génère une clé d'activation aléatoire:
		$cle_activation = sha1(microtime(true)*152000);
		
		# On prépare le message contenant les informations.
		$oMSG->setData('PSEUDO', $login);
		$oMSG->setData('NOM', $nom);
		$oMSG->setData('PRENOM', $prenom);
		$oMSG->setData('CIVILITE', $civilite);
		$oMSG->setData('TYPE_PERSONNE', $type_personne);
		$oMSG->setData('MDP', utf8_encode($mdp_crypte));# On encode le mot de passe sinon il n'est pas compris par la BDD.
		$oMSG->setData('EMAIL', $email);
		$oMSG->setData('NEWSLETTER', $newsletter);
		$oMSG->setData('OFFRES_ANNONCEURS', $offres_annonceurs);
		$oMSG->setData('CONNAISSANCE_SITE', $connaissance_site);
		$oMSG->setData('PARRAIN', $parrain);
		$oMSG->setData('VISIBLE', false);# Le compte n'est pas utilisable en l'état, nécessite une activation par e-mail.
		$oMSG->setData('CLE_ACTIVATION', $cle_activation);
		
		# On crée le compte.
		$ID_PERSONNE = $oPCS_personne->fx_creer_compte($oMSG)->getData(1);
		
		# On regarde si l'IP existe déjà dans la table ip.
		$nb_IP = $oPCS_personne->fx_compter_IPs_by_ID_IP($oMSG)->getData(1)->fetchAll();
		
		# On regarde si l'IP existe déjà dans la table ip_personne (cookie).
		$oMSG->setData('IP_COOKIE', $_COOKIE['lang']);# On récupère l'IP du cookie et on vérifie aussi qu'elle ne se trouve pas déjà dans la table ip_personne.
		$nb_IP_cookie = $oPCS_personne->fx_compter_IPs_by_IP_COOKIE($oMSG)->getData(1)->fetchAll();

		if($nb_IP[0]['nb_IP'] == 0 && $nb_IP_cookie[0]['nb_IP'] == 0){
			# Aucune IP n'existe, on crée le compte normalement, il sera activable par email.
						
			# On crée l'ID_IP via l'IP détectée par le cookie. Si c'est la même ça ne fonctionnera pas mais n'empèchera pas le reste du script.
			$oMSG->setData('ID_IP', $_COOKIE['lang']);
			$oPCS_personne->fx_creer_IP($oMSG);
			
			# On crée l'ID_IP via l'IP détectée par le serveur.
			$oMSG->setData('ID_IP', $IP);
			$oPCS_personne->fx_creer_IP($oMSG);
			
			# On lie l'IP.
			$now = date('Y-m-d H:i:s');
			$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
			$oMSG->setData('IP_COOKIE', $_COOKIE['lang']);# lang => IP, on l'appelle langue pour tromper les tricheurs idiots.
			$oMSG->setData('COOKIE_DETRUIT', $_COOKIE['admin']);# admin => sert à vérifier le premier cookie, on sait si lang a été détruit ou pas.
			$oMSG->setData('DATE_CONNEXION', $now);
			
			$oPCS_personne->fx_lier_IP_et_PERSONNE($oMSG);
			
			# Le pack dure un mois.
			$DATE_FIN = date("Y-m-d H:i:s", mktime(date("H"), date("i"), date("s"), date("m")+1, date("d"),  date("Y")));
					
			# On récupère la personne crée.
			$Personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();# On récupère les informations du membre crée.
			
			# On récupère le seul pack gratuit qui doit exister.
			require_once('couche_metier/PCS_pack.php');
			$oPCS_pack = new PCS_pack();
			
			$oMSG->setData('TYPE_PACK', "Gratuit");
			$oMSG->setData('limit', "LIMIT 0,1");
			
			$pack = $oPCS_pack->fx_recuperer_pack_by_TYPE_PACK_et_LIMIT($oMSG)->getData(1)->fetchAll();
			
			# On attribue le pack à la personne.
			$oMSG->setData('ID_PACK', $pack[0]['ID_PACK']);
			$oMSG->setData('DATE_ACHAT', $now);
			$oMSG->setData('DATE_DEBUT', $now);
			$oMSG->setData('DATE_FIN', $DATE_FIN);
			$oMSG->setData('REDUCTION', 0);
			$oMSG->setData('NB_FICHES_VISITABLES', 5);
			$oMSG->setData('DATAS_PAYPAL', '');
			
			
			$oPCS_pack->fx_lier_pack_personne($oMSG);
					
			# On envoi l'email:		
			$additional_headers = "From: noreply@liveanim.fr \r\n";
			$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
			$destinataires = $email;
			$sujet = utf8_decode("Inscription à LiveAnim [Activation du compte]");
			
			$message = "------------------------------\n";
			$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
			$message.= "------------------------------\n\n";
			$message.= utf8_decode("Bonjour ".$login.", \n");
			$message.= utf8_decode("Votre inscription à ".$oCL_page->getPage('accueil')." a bien été effectuée. \n\n");
			$message.= utf8_decode("Pour pouvoir utiliser votre compte sur ".$oCL_page->getPage('accueil', 'absolu')." vous devez d'abord activer votre compte en cliquant sur le lien ci-dessous.\n");
			$message.= utf8_decode($oCL_page->getPage('inscription', 'absolu')."?email=".$email."&cle_activation=".$cle_activation." \n\n");
			$message.= utf8_decode("Voici un rappel de votre identifiant et de votre mot de passe: \n");
			$message.= utf8_decode("Identifiant de connexion: ".$login."\n");
			$message.= utf8_decode("Mot de passe: ".$mdp."\n\n");
			$message.= utf8_decode("L'adresse IP utilisée pour la création de votre compte est: ".$IP."\n\n");
			$message.= utf8_decode("------------------------------\n\n\n");
			$message.= utf8_decode("LiveAnim vous remercie de votre confiance et vous rappelle que cette inscription est totalement gratuite !\n\n");
			$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
			
			if(mail($destinataires, $sujet, $message, $additional_headers)){
				# Si le mail a été correctement envoyé:			
				$_SESSION['compte']['première_visite_message'] = 
					"<span class='valide'>Bonjour ".$login.", votre inscription s'est déroulée correctement.<br />".
					"Un e-mail vous a été envoyé à l'adresse ".$email.", il contient la clé d'activation de votre compte et vous rappelle vos identifiant et mot de passe.<br /><br />";
			}else{
				$_SESSION['compte']['première_visite_message'] = 
					"<span class='valide'>Bonjour ".$login.", votre inscription s'est déroulée correctement.<br />".
					"<span class='alert'>Malheureusement, notre service d'envoi d'email n'a pas fonctionné correctement <span class='petit'>[Serveur mail HS]</span> et aucun e-mail d'inscription ne vous a été envoyé.<br /><br />Cela ne change rien au compte qui a été correctement crée.<br /><br />Vous devez néanmois activer votre compte en cliquant sur ce lien: <br /><a href='".
					$oCL_page->getPage('inscription', 'absolu')."?email=".$email."&cle_activation=".$cle_activation."'>Activer mon compte</a> <br />Nous nous excusons pour le désagrément occasionné.</span><br /><br />";
			}
		}else{
			# L'IP de création du compte existe déjà donc on va faire une activation du compte par administration.
			
			# On crée l'ID_IP via l'IP détectée par le cookie. Si c'est la même ça ne fonctionnera pas mais n'empèchera pas le reste du script.
			$oMSG->setData('ID_IP', $_COOKIE['lang']);
			$oPCS_personne->fx_creer_IP($oMSG);
			
			# On crée l'ID_IP via l'IP détectée par le serveur.
			$oMSG->setData('ID_IP', $IP);
			$oPCS_personne->fx_creer_IP($oMSG);
			
			# On lie l'IP.
			$now = date('Y-m-d H:i:s');
			$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
			$oMSG->setData('IP_COOKIE', $_COOKIE['lang']);# lang => IP, on l'appelle langue pour tromper les tricheurs idiots.
			$oMSG->setData('COOKIE_DETRUIT', $_COOKIE['admin']);# admin => sert à vérifier le premier cookie, on sait si lang a été détruit ou pas.
			$oMSG->setData('DATE_CONNEXION', $now);
			
			$oPCS_personne->fx_lier_IP_et_PERSONNE($oMSG);
			
			# Le pack dure un mois.
			$DATE_FIN = date("Y-m-d H:i:s", mktime(date("H"), date("i"), date("s"), date("m")+1, date("d"),  date("Y")));
						
			# On récupère la personne crée.
			$Personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();# On récupère les informations du membre crée.
			
			# On récupère le seul pack gratuit qui doit exister.
			require_once('couche_metier/PCS_pack.php');
			$oPCS_pack = new PCS_pack();
			
			$oMSG->setData('TYPE_PACK', "Gratuit");
			$oMSG->setData('limit', "LIMIT 0,1");
			
			$pack = $oPCS_pack->fx_recuperer_pack_by_TYPE_PACK_et_LIMIT($oMSG)->getData(1)->fetchAll();
			
			# On attribue le pack à la personne.
			$oMSG->setData('ID_PACK', $pack[0]['ID_PACK']);
			$oMSG->setData('DATE_ACHAT', $now);
			$oMSG->setData('DATE_DEBUT', $now);
			$oMSG->setData('DATE_FIN', $DATE_FIN);
			$oMSG->setData('REDUCTION', 0);
			$oMSG->setData('NB_FICHES_VISITABLES', 10);
			$oMSG->setData('DATAS_PAYPAL', '');
			
			$oPCS_pack->fx_lier_pack_personne($oMSG);
					
			# On envoi l'email:		
			$additional_headers = "From: noreply@liveanim.fr \r\n";
			$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
			$destinataires = $email;
			$sujet = utf8_decode("Inscription à LiveAnim");
			
			$message = "------------------------------\n";
			$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
			$message.= "------------------------------\n\n";
			$message.= utf8_decode("Bonjour ".$login.", \n");
			$message.= utf8_decode("Votre inscription à ".$oCL_page->getPage('accueil')." a bien été effectuée. \n\n");
			$message.= utf8_decode("Pour pouvoir utiliser votre compte sur ".$oCL_page->getPage('accueil', 'absolu')." vous devez d'abord attendre que l'équipe de modération active votre compte.\n\n");
			$message.= utf8_decode("Voici un rappel de votre identifiant et de votre mot de passe: \n");
			$message.= utf8_decode("Identifiant de connexion: ".$login."\n");
			$message.= utf8_decode("Mot de passe: ".$mdp."\n\n");
			$message.= utf8_decode("L'adresse IP utilisée pour la création de votre compte est: ".$IP."\n\n");
			$message.= utf8_decode("------------------------------\n\n\n");
			$message.= utf8_decode("LiveAnim vous remercie de votre confiance et vous rappelle que cette inscription est totalement gratuite !\n\n");
			$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
			
			if(mail($destinataires, $sujet, $message, $additional_headers)){
				# Si le mail a été correctement envoyé:			
				$_SESSION['compte']['première_visite_message'] = 
					"<span class='valide'>Bonjour ".$login.", votre inscription s'est déroulée correctement. L'activation de votre compte se fera manuellement par l'équipe de modération.<br />".
					"Un e-mail vous a été envoyé à l'adresse ".$email.", il vous rappelle vos identifiant et mot de passe.<br /><br />";
			}else{
				$_SESSION['compte']['première_visite_message'] = 
					"<span class='valide'>Bonjour ".$login.", votre inscription s'est déroulée correctement.<br />".
					"<span class='alert'>Malheureusement, notre service d'envoi d'email n'a pas fonctionné correctement <span class='petit'>[Serveur mail HS]</span> et aucun e-mail d'inscription ne vous a été envoyé.<br /><br />Cela ne change rien au compte qui a été correctement crée.<br /><br />".
					"L'activation de votre compte se fera manuellement par notre équipe de modération.<br /><br />Nous nous excusons pour le désagrément occasionné.</span><br /><br />";
			}
		}
		
		$Personne = null;# On détruit les informations.
		
		$_SESSION['compte']['première_visite'] = true;# On redirigera vers le bon contenu.
		$_SESSION['inscription'] = array();# On vide les valeurs rentrées par l'utilisateur.
		header('Location: '.$oCL_page->getPage('inscription'));
	}

}else{
	$_SESSION['inscription'] = array();
	$_SESSION['inscription']['message_affiche'] = false;
	$_SESSION['inscription']['message'] = "<span class='alert'>Vous devez soumettre le formulaire d'inscription via le bouton de validation qui se trouve en bas de cette page, merci.</span>";
	header('Location: '.$oCL_page->getPage('inscription', 'absolu'));
}

?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(!empty($_FILES) && $_FILES['form_modifier_cgu']['error'] == 0){
			require_once('couche_metier/CL_upload.php');			
			
			$oCL_upload = new CL_upload($_FILES['form_modifier_cgu'], "ressources", array("pdf"), 0777, array("application/pdf"), 200, 200, 2000000);
			
			$new_filename = "cgu";

			$tab_message = $oCL_upload->fx_upload($_FILES['form_modifier_cgu']['name'], $new_filename, true, false);
			
			if($tab_message['reussite'] == true){
				$_SESSION['gestion_cgu']['message'] = "<center class='rose'>Téléchargement réussi.</center>";
				$_SESSION['gestion_cgu']['message_affiche'] = false;
			}else{
				$_SESSION['gestion_cgu']['message'] = "<span class='alert'>".$tab_message['resultat']."</span>";
				$_SESSION['gestion_cgu']['message_affiche'] = false;
			}
			header('Location:'.$oCL_page->getPage('gestion_cgu', 'absolu'));
	}else{
		var_dump($_FILES['form_modifier_cgu']['error']);
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(!empty($_FILES) && $_FILES['form_modifier_include_faq']['error'] == 0){
			require_once('couche_metier/CL_upload.php');			
			
			$oCL_upload = new CL_upload($_FILES['form_modifier_include_faq'], "../www", array("php"), 0777, array("application/x-httpd-php", "application/octet-stream"), 200, 200, 100000);
			
			$new_filename = "include_file_include_faq";

			$tab_message = $oCL_upload->fx_upload($_FILES['form_modifier_include_faq']['name'], $new_filename, true, false);
			
			if($tab_message['reussite'] == true){
				$_SESSION['gestion_faq']['message'] = "<center class='rose'>Téléchargement réussi.</center>";
				$_SESSION['gestion_faq']['message_affiche'] = false;
			}else{
				$_SESSION['gestion_faq']['message'] = "<span class='alert'>".$tab_message['resultat']."</span>";
				$_SESSION['gestion_faq']['message_affiche'] = false;
			}
			header('Location:'.$oCL_page->getPage('gestion_faq', 'absolu'));
	}else{
		var_dump($_FILES['form_modifier_include_faq']['error']);
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){

	if(isset($_POST['form_modifier_mdp_ancien_mdp'])){
		$ancien_MDP = $_POST['form_modifier_mdp_ancien_mdp'];
		$nouveau_MDP = $_POST['form_modifier_mdp_nouveau_mdp'];
		$nouveau_MDP_bis = $_POST['form_modifier_mdp_nouveau_mdp_bis'];
		
		# On prépare les variables.
		$_SESSION['modifier_mdp']['message'] = "";
		$_SESSION['modifier_mdp']['message_affiche'] = false;
		$nb_erreur = 0;
		
		# On vérifie qu'aucun champ ne soit vide.
		if(empty($ancien_MDP) || empty($nouveau_MDP) || empty($nouveau_MDP_bis)){
			$_SESSION['modifier_mdp']['message'].= "<span class='alert'>Un des champs est vide.</span><br />";
			$nb_erreur++;
		}
		
		if($nouveau_MDP != $nouveau_MDP_bis){
			$_SESSION['modifier_mdp']['message'].= "<span class='alert'>Le nouveau mot de passe n'a pas été correctement réécrit.</span><br />";
			$nb_erreur++;
		}
		
		if(strlen($nouveau_MDP) < 4){
			$_SESSION['modifier_mdp']['message'].= "<span class='orange'>La longueur du nouveau mot de passe doit être de 4 caractères au minimum.</span><br />";
			$nb_erreur++;
		}
		
		if(strlen($nouveau_MDP) > 20){
			$_SESSION['modifier_mdp']['message'].= "<span class='orange'>La longueur du nouveau mot de passe doit être de 20 caractères au maximum.</span><br />";
			$nb_erreur++;
		}
		
		if($nb_erreur == 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/CL_cryptage.php');

			$oMSG = new MSG();
			$oPCS_personne = new PCS_personne();
			$oCL_cryptage = new CL_cryptage();
			
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('MDP', utf8_encode($oCL_cryptage->Cryptage($_POST['form_modifier_mdp_ancien_mdp'], $_SESSION['compte']['PSEUDO'])));

			$nb_personne = $oPCS_personne->fx_compter_personne_by_ID_PERSONNE_et_MDP($oMSG)->getData(1)->fetchAll();
			
			if($nb_personne[0]['nb_personne'] == 1){
				# Le mot de passe correspond au compte.
				$oMSG->setData('MDP', utf8_encode($oCL_cryptage->Cryptage($_POST['form_modifier_mdp_nouveau_mdp'], $_SESSION['compte']['PSEUDO'])));
				
				$oPCS_personne->fx_changer_mdp($oMSG);
				
				$IP = $_SERVER["REMOTE_ADDR"];
				
				# On envoi l'email:		
				$additional_headers = "From: noreply@liveanim.fr \r\n";
				$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
				$destinataires = $_SESSION['compte']['EMAIL'];
				$sujet = utf8_decode("LiveAnim [Modification de votre Mot de passe]");
				
				$message = "------------------------------\n";
				$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
				$message.= "------------------------------\n\n";
				$message.= utf8_decode("Bonjour ".$_SESSION['compte']['PSEUDO'].", \n");
				$message.= utf8_decode("Votre mot de passe a été modifié depuis votre espace personnel. \n\n");
				$message.= utf8_decode("Si ce n'est pas vous qui avez effectué ce changement sachez que vous pouvez faire une récupération de mot de passe à cette adresse:\n");
				$message.= utf8_decode($oCL_page->getPage('recuperation_mdp', 'absolu')." \n\n");
				$message.= utf8_decode("La modification de votre mot de passe a été effectuée le ".date("Y-m-d")." à ".date("H:i:s")." à l'adresse IP ".$IP."\n\n");
				$message.= utf8_decode("------------------------------\n\n\n");
				$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
				
				if(mail($destinataires, $sujet, $message, $additional_headers)){
					# Si le mail a été correctement envoyé:			
					$_SESSION['modifier_mdp']['message'].= "<span class='valide'>Le mot de passe a été changé. Un email vous a été envoyé.</span><br />";
				}else{
					$_SESSION['modifier_mdp']['message'].= "<span class='valide'>Le mot de passe a été changé.</span><br />";
				}
			}else{
				$_SESSION['modifier_mdp']['message'].= "<span class='alert'>L'ancien mot de passe n'est pas correct.</span><br />";
			}
			
			header('Location: '.$oCL_page->getPage('modifier_mdp', 'absolu'));
			
		}else{
			header('Location: '.$oCL_page->getPage('modifier_mdp', 'absolu'));
			$_SESSION['modifier_mdp']['message'].= "<span class='alert'>Le mot de passe n'a pas été modifié.</span><br />";
		}
		
	}
	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(!empty($_FILES) && $_FILES['form_modifier_mentions_legales']['error'] == 0){
			require_once('couche_metier/CL_upload.php');			
			
			$oCL_upload = new CL_upload($_FILES['form_modifier_mentions_legales'], "ressources", array("pdf"), 0777, array("application/pdf"), 200, 200, 2000000);
			
			$new_filename = "mentionslegales";

			$tab_message = $oCL_upload->fx_upload($_FILES['form_modifier_mentions_legales']['name'], $new_filename, true, false);
			
			if($tab_message['reussite'] == true){
				$_SESSION['gestion_mentions_legales']['message'] = "<center class='rose'>Téléchargement réussi.</center>";
				$_SESSION['gestion_mentions_legales']['message_affiche'] = false;
			}else{
				$_SESSION['gestion_mentions_legales']['message'] = "<span class='alert'>".$tab_message['resultat']."</span>";
				$_SESSION['gestion_mentions_legales']['message_affiche'] = false;
			}
			header('Location:'.$oCL_page->getPage('gestion_mentions_legales', 'absolu'));
	}else{
		var_dump($_FILES['form_modifier_mentions_legales']['error']);
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(!empty($_FILES) && $_FILES['form_modifier_menuh_faq']['error'] == 0){
			require_once('couche_metier/CL_upload.php');			
			
			$oCL_upload = new CL_upload($_FILES['form_modifier_menuh_faq'], "../www", array("php"), 0777, array("application/x-httpd-php", "application/octet-stream"), 200, 200, 100000);
			
			$new_filename = "include_file_menuh_faq";

			$tab_message = $oCL_upload->fx_upload($_FILES['form_modifier_menuh_faq']['name'], $new_filename, true, false);
			
			if($tab_message['reussite'] == true){
				$_SESSION['gestion_faq']['message'] = "<center class='rose'>Téléchargement réussi.</center>";
				$_SESSION['gestion_faq']['message_affiche'] = false;
			}else{
				$_SESSION['gestion_faq']['message'] = "<span class='alert'>".$tab_message['resultat']."</span>";
				$_SESSION['gestion_faq']['message_affiche'] = false;
			}
			header('Location:'.$oCL_page->getPage('gestion_faq', 'absolu'));
	}else{
		var_dump($_FILES['form_modifier_menuh_faq']['error']);
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['form_noter_prestataire_id_contrat'])){
		$ID_CONTRAT = (int)$_POST['form_noter_prestataire_id_contrat'];
		if($ID_CONTRAT > 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_contrat.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/PCS_evaluation.php');
			require_once('couche_metier/PCS_types.php');
			require_once('couche_metier/PCS_message.php');

			$oMSG = new MSG();
			$oPCS_contrat = new PCS_contrat();
			$oPCS_personne = new PCS_personne();
			$oPCS_evaluation = new PCS_evaluation();
			$oPCS_message = new PCS_message();
			$oPCS_types = new PCS_types();
				
			# On vérifie que la personne ait les droits sur ce contrat.
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$organisateur = $oPCS_contrat->fx_compter_contrat_by_ID_CONTRAT_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin" || ($_SESSION['compte']['TYPE_PERSONNE'] == "Organisateur" && $organisateur[0]['nb_contrat'] > 0)){

				# On récupère les types.
				$oMSG->setData('ID_FAMILLE_TYPES', 'Caractéristiques');
				
				$types = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
				$notes = Array();
				
				# Pour chaque type.
				foreach($types as $key=>$type){
					for($j = 0;$j < count($types); $j++){
						# On teste l'existence de la variable.
						if(isset($_POST[$type['ID_TYPES'].$j])){
							# On la sauvegarde dans le tableau des notes avec $notes['nom_du_type']['note_attribuée'];
							$notes[$type['ID_TYPES']] =  $_POST[$type['ID_TYPES'].$j];
							break;
						}else{
							# Si le type n'est pas présent dans les données fournies.
							$notes[$type['ID_TYPES']] = 0;
						}
					}
				}
				
				# Pour chaque case on effectue une requête de type INSERT ou UPDATE selon si l'information existe déjà.
				foreach($notes as $key=>$note){
					# On vérifie que la note soit correcte.
					if($notes[$key] < 0){
						$notes[$key] = 0;
					}else if($notes[$key] > 5){
						$notes[$key] = 5;
					}
					
					$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
					$oMSG->setData('TYPE_EVALUATION', $key);
					
					# On regarde si la note existe déjà.
					$nb_note_BDD = $oPCS_evaluation->fx_compter_evaluation_by_ID_CONTRAT_et_TYPE_EVALUATION($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
					
					if($nb_note_BDD[0]['nb_evaluation'] > 0){
						# Si la note existe déjà alors on la modifie.
						$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
						$oMSG->setData('EVALUATION', $notes[$key]);
						$oMSG->setData('COMMENTAIRE', "");
						$oMSG->setData('TYPE_EVALUATION', $key);
						
						$oPCS_evaluation->fx_maj_evaluation($oMSG);
						
					}else{
						# Si la note n'existe pas alors on la crée.
						$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
						$oMSG->setData('EVALUATION', $notes[$key]);
						$oMSG->setData('COMMENTAIRE', "");
						$oMSG->setData('TYPE_EVALUATION', $key);
						
						$oPCS_evaluation->fx_creer_evaluation($oMSG);
						
					}
				}// Fin du foreach
				
									
				# On modifie la date de notation.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				$oMSG->setData('DATE_EVALUATION', date('Y-m-d H:i:s'));
				
				$oPCS_contrat->fx_maj_DATE_EVALUATION_by_ID_CONTRAT($oMSG);
				
				# Si on a pas déjà eu une notation de la part de cette personne alors on prévient le prestataire (antispam).
				if(!isset($_SESSION['compte']['notation_prestataire'])){
					# On récupère le prestataire du contrat et on lui envoi un mail et un message pour l'avertir qu'il a été noté.
					$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
					$oMSG->setData('TYPE_PERSONNE', 'Organisateur');# Comme ça si un membre a un contrat avec un admin... peu probable mais bon.
					
					$prestataire = $oPCS_personne->fx_recuperer_personne_by_ID_CONTRAT_et_nonTYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
					
					# On récupère l'organisateur du contrat.
					$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
					$oMSG->setData('TYPE_PERSONNE', 'Organisateur');
					
					$organisateur = $oPCS_personne->fx_recuperer_personne_by_ID_CONTRAT_et_TYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
					
					# On envoi l'email:		
					$additional_headers = "From: noreply@liveanim.fr \r\n";
					$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
					$destinataires = $prestataire[0]['EMAIL'];# On est sensé n'avoir qu'un seul résultat.
					$sujet = utf8_decode("LiveAnim [Notation de votre prestation]");
					
					$message = "------------------------------\n";
					$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
					$message.= "------------------------------\n\n";
					$message.= utf8_decode("Bonjour ".$prestataire[0]['PSEUDO'].", \n");
					$message.= utf8_decode("Votre prestation concernant le contrat N°".$ID_CONTRAT." a été notée. \n\n");
					$message.= utf8_decode("Vous pouvez visualiser vos notes à cette adresse: ".$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT."\n");
					$message.= utf8_decode("Votre notation a été effectuée par ".$_SESSION['compte']['PSEUDO']." le ".date('d/m/Y H:i:s').". \n\n");
					$message.= utf8_decode("------------------------------\n\n\n");
					$message.= utf8_decode("LiveAnim vous remercie de votre confiance et espère que vos prestations se déroulent pour le mieux !\n\n");
					$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
					
					mail($destinataires, $sujet, $message, $additional_headers);
					
					# On envoi le message:
					$TITRE = "Vous avez été noté par ".$_SESSION['compte']['PSEUDO'];
					$CONTENU = "Bonjour ".$_SESSION['compte']['PSEUDO'].",<br /><br />";
					$CONTENU.= "Nous vous informons que vous avez été noté pour votre prestation avec l'organisateur ".$organisateur[0]['PSEUDO'].".<br />";
					$CONTENU.= "Voici vos notes:<br /><br />";
					foreach($notes as $key=>$note){
						$CONTENU.= "<b class='rose'>".$key."</b>: <b>".$note."</b>/5<br />";
					}
					$CONTENU.= "<br /><br />";
					$CONTENU.= "Vous pouvez consulter le contrat correspondant <a href='".$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT."'>ici</a>.";
					$CONTENU.= "En espérant que vous vous soyez bien amusé,<br />";
					$CONTENU.= "<b class='rose'>L'équipe LiveAnim</b>";
					$EXPEDITEUR = $organisateur[0]['ID_PERSONNE'];
					$DESTINATAIRE = $prestataire[0]['ID_PERSONNE'];
					
					$oMSG->setData('TITRE', $TITRE);
					$oMSG->setData('CONTENU', $CONTENU);
					$oMSG->setData('EXPEDITEUR', $EXPEDITEUR);
					$oMSG->setData('DESTINATAIRE', $DESTINATAIRE);
					$oMSG->setData('TYPE_MESSAGE', "Notation");
					$oMSG->setData('DATE_ENVOI', date('Y-m-d H:i:s'));
					$oMSG->setData('VISIBLE', 1);
					
					$ID_MESSAGE = $oPCS_message->fx_creer_message($oMSG)->getData(1);
					
					# On lie le message.
					$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
					$oMSG->setData('ID_PERSONNE', $DESTINATAIRE);
					$oMSG->setData('STATUT_MESSAGE', 'Non lu');
					
					$oPCS_message->fx_lier_message($oMSG);
				}#Fin du if de test date_notation_prestataire
				
				$_SESSION['compte']['notation_prestataire'] = true;# On conserve le fait que cette session a effectuée une notation.
				
				$_SESSION['contrat']['message'] = "<span class='valide'>Votre notation a été prise en compte. Le prestataire a été prévenu.<br />".
												  "Vous pouvez modifier vos notes si vous le désirez.</span><br /><br />";
				$_SESSION['contrat']['message_affiche'] = false;
				header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
				
			}else{
				# Droits insuffisants.
				$_SESSION['contrat']['message'] = "<span class='alert'>Vous n'avez pas les droits nécessaires pour noter ce prestataire.</span>";
				$_SESSION['contrat']['message_affiche'] = false;
				header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
			}
		}else{
			# ID_CONTRAT invalide.
			header('Location: '.$oCL_page->getPage('historique_contrat', 'absolu'));
		}
	}else{
		# Pas de POST.
		header('Location: '.$oCL_page->getPage('historique_contrat', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['form_poster_commentaire_contenu'])){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_commentaire.php');
			
			$oMSG = new MSG();
			$oPCS_commentaire = new PCS_commentaire();
			
			$nb_error = 0;
			$_SESSION['news']['message_affiche'] = false;
			$_SESSION['news']['message'] = "";
			$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
			
			# On récupère les données.
			$CONTENU = nl2br(preg_replace($chaines_interdites, "", trim($_POST['form_poster_commentaire_contenu'])));
			$ID_NOUVEAUTE = (int)$_POST['form_poster_commentaire_id_nouveaute'];
			$ID_PERSONNE = $_SESSION['compte']['ID_PERSONNE'];
			$DATE_CREATION = date('Y-m-d H:i:s');
			$VISIBLE = 1;
			
			# On vérifie les données.
			if($ID_NOUVEAUTE == 0){
				$nb_error++;
				$_SESSION['news']['message'].= "<span class='orange'>Une erreur est survenue, votre commentaire n'a pas été publié.</span><br /><br />";
			}
			
			# On vérifie que le commentaire ne soit pas vide.
			if(empty($CONTENU)){
				$nb_error++;
				$_SESSION['news']['message'].= "<span class='orange'>Vous ne pouvez pas publier un commentaire vide !</span><br /><br />";
			}
			
			if($nb_error == 0){
				# On publie le commentaire.
				$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
				$oMSG->setData('ID_NOUVEAUTE', $ID_NOUVEAUTE);
				$oMSG->setData('CONTENU', $CONTENU);
				$oMSG->setData('DATE_CREATION', $DATE_CREATION);
				$oMSG->setData('VISIBLE', $VISIBLE);
				
				$id_commentaire = $oPCS_commentaire->fx_ajouter_commentaire($oMSG)->getData(1);

				# On vérifie qu'on ai bien inséré qqch.
				if($id_commentaire != 0){
					$_SESSION['news']['message'].= "<span class='valide'>Votre commentaire a été publié, nous vous remercions.</span><br /><br />";
				}else{
					$_SESSION['news']['message'].= "<span class='alert'>Une erreur est survenue, votre commentaire n'a pas été publié.</span><br /><br />";
				}
				header('Location: '.$oCL_page->getPage('news', 'absolu')."?id_news=".$ID_NOUVEAUTE);
				
			}else{
				header('Location: '.$oCL_page->getPage('news', 'absolu')."?id_news=".$ID_NOUVEAUTE);
			}
	}else{
		# Pas de post
		header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
}
?><?php
//https://payment.allopass.com/buy/buy.apu?ids=270455&idd=1096819
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_GET["RECALL"]) && isset($_GET['reussite']) && $_GET['reussite'] == 1){
	
		$RECALL = $_GET["RECALL"];
		
		if( trim($RECALL) == "" )
		{
			# RECALL est vide.
			$achat_annonce_goldlive_ok = false;
			die();
		}
		// $RECALL contient le code d'accès
		$RECALL = urlencode($RECALL);
		 
		// $AUTH doit contenir l'identifiant de VOTRE document
		 
		$AUTH = urlencode('54/75/456');

		/**
		* envoi de la requête vers le serveur AlloPAss
		* dans la variable $r[0] on aura la réponse du serveur
		* dans la variable $r[1] on aura le code du pays d'appel de l'internaute
		* (FR,BE,UK,DE,CH,CA,LU,IT,ES,AT,...)
		* Dans le cas du multicode, on aura également $r[2],$r[3] etc...
		* contenant à chaque fois le résultat et le code pays.
		*/
		 
	    $r = @file( "http://payment.allopass.com/api/checkcode.apu?code=$RECALL&auth=$AUTH" );
		
		/*  # Pas moyen de contacter allopass pour le moment.
			// on teste la réponse du serveur
			if( substr( $r[0],0,2 ) != "OK" ) 
			{
				$achat_annonce_goldlive_ok = false;
				die();
			}
		*/
		# Sinon c'est que c'est bon !
		$achat_annonce_goldlive_ok = true;
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');
		
		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		
		$now_concat = date('Y-m-d-H-i-s');
		
		# On passe l'annonce courante en goldlive.
		$oMSG->setData('ID_ANNONCE', $_SESSION['annonce']['annonce_courante']);
		$oMSG->setData('GOLDLIVE', 1);
		$oMSG->setData('Date achat', $now_concat);
		$oMSG->setData('Code', $RECALL);
		$oMSG->setData('Réponse allopass', $r);
		
		$oPCS_annonce->fx_modifier_goldlive_by_ID_ANNONCE($oMSG);
										
		# On sauvegarde dans un fichier les données de l'achat.
		file_put_contents($oCL_page->getPage('paiement_allopass_annonce_goldlive')."OK_IDP-".$_SESSION['compte']['ID_PERSONNE']."_IDA-".$_SESSION['annonce']['annonce_courante']."_".$now_concat."_oMSG.txt", print_r($oMSG, true));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	# On recharge le compte actuel au cas où le forfait ai changé.
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/CL_date.php');
	require_once('couche_metier/PCS_pack.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	$oCL_date = new CL_date();
	$oPCS_pack = new PCS_pack();

	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	
	$personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	
	# MAJ du compte.
	$_SESSION['compte']['PSEUDO'] = $personne[0]['PSEUDO'];
	$_SESSION['compte']['NOM'] = $personne[0]['NOM'];
	$_SESSION['compte']['PRENOM'] = $personne[0]['PRENOM'];
	$_SESSION['compte']['CIVILITE'] = $personne[0]['CIVILITE'];
	$_SESSION['compte']['EMAIL'] = $personne[0]['EMAIL'];
	$_SESSION['compte']['TYPE_PERSONNE'] = $personne[0]['TYPE_PERSONNE'];
	$_SESSION['compte']['PARRAIN'] = $personne[0]['PARRAIN'];
	$_SESSION['compte']['REDUCTION'] = $personne[0]['REDUCTION'];
	
	$now = date("d-m-Y");
	$oNOW = new DateTime( $now );
	$now = $oNOW->format("Ymd");
	
	# MAJ du pack utilisé.
	$oMSG->setData('limit', 'LIMIT 0,1');
	
	$pack_personne = $oPCS_pack->fx_recuperer_pack_actif_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	
	# On vérifie que le pack est encore actif et on met en forme les dates.
	if(isset($pack_personne[0]['ID_PACK']) && !empty($pack_personne[0]['ID_PACK'])){
		# Il y a bien un pack d'activé, on va revérifier au cas où avec un traitement logiciel.
		
		$DATE_ACHAT = $pack_personne[0]['DATE_ACHAT'];
		$DATE_FIN = $pack_personne[0]['DATE_FIN'];
		
		$tab_date_achat = explode('-', $DATE_ACHAT);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])	
		$tab_date_achat2 = explode(' ', $tab_date_achat[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
		$tab_date_achat3 = explode(':', $tab_date_achat2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
		
		$tab_date_fin = explode('-', $DATE_FIN);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])
		$tab_date_fin2 = explode(' ', $tab_date_fin[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
		$tab_date_fin3 = explode(':', $tab_date_fin2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
		
		# On stocke la date de fin de validité sous son format affichable et calculé.
		$date_fin_validite = date("d-m-Y H:i:s", mktime($tab_date_fin3[0], $tab_date_fin3[1], $tab_date_fin3[2], $tab_date_fin[1], $tab_date_fin2[0],  $tab_date_fin[0]));
		$date_fin_validite_formatee = date("YmdHis", mktime($tab_date_fin3[0], $tab_date_fin3[1], $tab_date_fin3[2], $tab_date_fin[1], $tab_date_fin2[0],  $tab_date_fin[0]));
		
		$maintenant = $oNOW->format("YmdHis");
		
		if($date_fin_validite_formatee < $maintenant){
			# La date est dépassée, le pack n'est pas activé.
			$_SESSION['pack']['activé'] = false;
			$_SESSION['pack']['DATE_ACHAT'] = date("d-m-Y H:i:s", mktime($tab_date_achat3[0], $tab_date_achat3[1], $tab_date_achat3[2], $tab_date_achat[1], $tab_date_achat2[0],  $tab_date_achat[0]));
			$_SESSION['pack']['ID_PACK'] = $pack_personne[0]['ID_PACK'];
			$_SESSION['pack']['NOM'] = $pack_personne[0]['NOM'];
			$_SESSION['pack']['TYPE_PACK'] = $pack_personne[0]['TYPE_PACK'];
			$_SESSION['pack']['PRIX_BASE'] = $pack_personne[0]['PRIX_BASE'];
			$_SESSION['pack']['DUREE'] = $pack_personne[0]['DUREE'];
			$_SESSION['pack']['CV_VISIBILITE'] = 0;
			$_SESSION['pack']['CV_ACCESSIBLE'] = 0;
			$_SESSION['pack']['NB_FICHES_VISITABLES'] = 0;
			$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = false;
			$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = false;
			$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = 0;
			$_SESSION['pack']['PARRAINAGE_ACTIVE'] = false;
			$_SESSION['pack']['PREVISUALISATION_FICHES'] = false;
			$_SESSION['pack']['CONTRATS_PDF'] = false;
			$_SESSION['pack']['SUIVI'] = false;
			$_SESSION['pack']['PUBS'] = true;
			$_SESSION['pack']['date_fin_validite'] = $date_fin_validite;
			$_SESSION['pack']['date_fin_validite_formatee'] = $date_fin_validite_formatee;
		}else{
			# Le pack est encore valide, on l'active.
			$_SESSION['pack']['activé'] = true;
			$_SESSION['pack']['DATE_ACHAT'] = date("d-m-Y H:i:s", mktime($tab_date_achat3[0], $tab_date_achat3[1], $tab_date_achat3[2], $tab_date_achat[1], $tab_date_achat2[0],  $tab_date_achat[0]));
			$_SESSION['pack']['ID_PACK'] = $pack_personne[0]['ID_PACK'];
			$_SESSION['pack']['NOM'] = $pack_personne[0]['NOM'];
			$_SESSION['pack']['TYPE_PACK'] = $pack_personne[0]['TYPE_PACK'];
			$_SESSION['pack']['PRIX_BASE'] = $pack_personne[0]['PRIX_BASE'];
			$_SESSION['pack']['DUREE'] = $pack_personne[0]['DUREE'];
			$_SESSION['pack']['CV_VISIBILITE'] = $pack_personne[0]['CV_VISIBILITE'];
			$_SESSION['pack']['CV_ACCESSIBLE'] = $pack_personne[0]['CV_ACCESSIBLE'];
			$_SESSION['pack']['NB_FICHES_VISITABLES'] = $pack_personne[0]['NB_FICHES_VISITABLES'];# On ne charge pas ici le NB_FICHES_VISITABLES du pack mais celui 
																						 # de la table pack_personne, voir couche_metier/VIEW_pack.php.
			$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = $pack_personne[0]['CV_VIDEO_ACCESSIBLE'];
			$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = $pack_personne[0]['ALERTE_NON_DISPONIBILITE'];
			$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = $pack_personne[0]['NB_DEPARTEMENTS_ALERTE'];
			$_SESSION['pack']['PARRAINAGE_ACTIVE'] = $pack_personne[0]['PARRAINAGE_ACTIVE'];
			$_SESSION['pack']['PREVISUALISATION_FICHES'] = $pack_personne[0]['PREVISUALISATION_FICHES'];
			$_SESSION['pack']['CONTRATS_PDF'] = $pack_personne[0]['CONTRATS_PDF'];
			$_SESSION['pack']['SUIVI'] = $pack_personne[0]['SUIVI'];
			$_SESSION['pack']['PUBS'] = $pack_personne[0]['PUBS'];
			$_SESSION['pack']['date_fin_validite'] = $date_fin_validite;
			$_SESSION['pack']['date_fin_validite_formatee'] = $date_fin_validite_formatee;
		}
	}else{
		# Il n'y a pas de pack actif.
		$_SESSION['pack']['activé'] = false;
		$_SESSION['pack']['DATE_ACHAT'] = "";
		$_SESSION['pack']['ID_PACK'] = "";
		$_SESSION['pack']['NOM'] = "";
		$_SESSION['pack']['TYPE_PACK'] = "";
		$_SESSION['pack']['PRIX_BASE'] ="";
		$_SESSION['pack']['DUREE'] = "";
		$_SESSION['pack']['CV_VISIBILITE'] = 0;
		$_SESSION['pack']['CV_ACCESSIBLE'] = 0;
		$_SESSION['pack']['NB_FICHES_VISITABLES'] = 0;
		$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = false;
		$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = false;
		$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = 0;
		$_SESSION['pack']['PARRAINAGE_ACTIVE'] = false;
		$_SESSION['pack']['PREVISUALISATION_FICHES'] = false;
		$_SESSION['pack']['CONTRATS_PDF'] = false;
		$_SESSION['pack']['SUIVI'] = false;
		$_SESSION['pack']['PUBS'] = true;
		$_SESSION['pack']['date_fin_validite'] = "00-00-0000 00:00:00";
		$_SESSION['pack']['date_fin_validite_formatee'] = "00000000000000";
	}

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_pack.php');
	
	# On récupère tous les packs visibles.
	$oMSG = new MSG();
	$oPCS_pack = new PCS_pack();
	
	$oMSG->setData('VISIBLE', 1);
	
	$packs = $oPCS_pack->fx_recuperer_tous_packs_by_VISIBLE($oMSG)->getData(1)->fetchAll();
	
	# On calcule pour chaque pack le taux de réduction effectué.
	
	foreach($packs as $key=>$pack){
		if($pack['SOUMIS_REDUCTIONS_PARRAINAGE'] == true && $pack['VISIBLE'] == true){
			$PRIX = $pack['PRIX_BASE'];
			$MAX = $pack['GAIN_PARRAINAGE_MAX'];# Le maximum de réduction auquel est soumis le pack.
			$REDUCTION = $_SESSION['compte']['REDUCTION'];
			
			# Trois cas possibles, soit la réduction possédée est inférieure au MAX soit elle est égale soit elle est supérieure.
			if($REDUCTION >= $MAX){
				# Si la réduction possédée est supérieure ou égale au MAX de réduction possible.
				$REDUCTION = $MAX;# On met le taux de réduction au maximum.
			}
			
			# Si la réduction n'est pas négative ou nulle on l'effectue.
			if($REDUCTION > 0){
				$packs[$key]['nouvelle_reduction'] = $REDUCTION;# On stocke la réduction du pack.
				$packs[$key]['economie'] = round($PRIX*($REDUCTION/100), 2);# On calcule l'économie réalisée.
				$packs[$key]['nouveau_prix'] = round($PRIX-($PRIX*($REDUCTION/100)), 2);# Le nouveau prix est égal à l'ancien prix multiplié par la réduction.
				$packs[$key]['beneficie_reduction'] = true;
			}else{
				$packs[$key]['beneficie_reduction'] = false;
			}
		}		
	}
	
	$now = date("d-m-Y");
	$oNOW = new DateTime( $now );
	$now = $oNOW->format("Ymd");
	
	# MAJ du pack utilisé.
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	$oMSG->setData('limit', 'LIMIT 0,1');
	
	
	$pack_personne = $oPCS_pack->fx_recuperer_pack_actif_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	
	# On vérifie que le pack est encore actif et on met en forme les dates.
	if(isset($pack_personne[0]['ID_PACK']) && !empty($pack_personne[0]['ID_PACK'])){
		# Il y a bien un pack d'activé, on va revérifier au cas où avec un traitement logiciel.
		
		$DATE_ACHAT = $pack_personne[0]['DATE_ACHAT'];
		$DATE_FIN = $pack_personne[0]['DATE_FIN'];
		
		$tab_date_achat = explode('-', $DATE_ACHAT);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])	
		$tab_date_achat2 = explode(' ', $tab_date_achat[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
		$tab_date_achat3 = explode(':', $tab_date_achat2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
		
		$tab_date_fin = explode('-', $DATE_FIN);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])
		$tab_date_fin2 = explode(' ', $tab_date_fin[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
		$tab_date_fin3 = explode(':', $tab_date_fin2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
		
		# On stocke la date de fin de validité sous son format affichable et calculé.
		$date_fin_validite = date("d-m-Y H:i:s", mktime($tab_date_fin3[0], $tab_date_fin3[1], $tab_date_fin3[2], $tab_date_fin[1], $tab_date_fin2[0],  $tab_date_fin[0]));
		$date_fin_validite_formatee = date("YmdHis", mktime($tab_date_fin3[0], $tab_date_fin3[1], $tab_date_fin3[2], $tab_date_fin[1], $tab_date_fin2[0],  $tab_date_fin[0]));
		
		$maintenant = $oNOW->format("YmdHis");
		
		if($date_fin_validite_formatee < $maintenant){
			# La date est dépassée, le pack n'est pas activé.
			$_SESSION['pack']['activé'] = false;
			$_SESSION['pack']['DATE_ACHAT'] = date("d-m-Y H:i:s", mktime($tab_date_achat3[0], $tab_date_achat3[1], $tab_date_achat3[2], $tab_date_achat[1], $tab_date_achat2[0],  $tab_date_achat[0]));
			$_SESSION['pack']['ID_PACK'] = $pack_personne[0]['ID_PACK'];
			$_SESSION['pack']['NOM'] = $pack_personne[0]['NOM'];
			$_SESSION['pack']['TYPE_PACK'] = $pack_personne[0]['TYPE_PACK'];
			$_SESSION['pack']['PRIX_BASE'] = $pack_personne[0]['PRIX_BASE'];
			$_SESSION['pack']['DUREE'] = $pack_personne[0]['DUREE'];
			$_SESSION['pack']['CV_VISIBILITE'] = 0;
			$_SESSION['pack']['CV_ACCESSIBLE'] = 0;
			$_SESSION['pack']['NB_FICHES_VISITABLES'] = 0;
			$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = false;
			$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = false;
			$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = 0;
			$_SESSION['pack']['PARRAINAGE_ACTIVE'] = false;
			$_SESSION['pack']['PREVISUALISATION_FICHES'] = false;
			$_SESSION['pack']['CONTRATS_PDF'] = false;
			$_SESSION['pack']['SUIVI'] = false;
			$_SESSION['pack']['PUBS'] = true;
			$_SESSION['pack']['date_fin_validite'] = $date_fin_validite;
			$_SESSION['pack']['date_fin_validite_formatee'] = $date_fin_validite_formatee;
		}else{
			# Le pack est encore valide, on l'active.
			$_SESSION['pack']['activé'] = true;
			$_SESSION['pack']['DATE_ACHAT'] = date("d-m-Y H:i:s", mktime($tab_date_achat3[0], $tab_date_achat3[1], $tab_date_achat3[2], $tab_date_achat[1], $tab_date_achat2[0],  $tab_date_achat[0]));
			$_SESSION['pack']['ID_PACK'] = $pack_personne[0]['ID_PACK'];
			$_SESSION['pack']['NOM'] = $pack_personne[0]['NOM'];
			$_SESSION['pack']['TYPE_PACK'] = $pack_personne[0]['TYPE_PACK'];
			$_SESSION['pack']['PRIX_BASE'] = $pack_personne[0]['PRIX_BASE'];
			$_SESSION['pack']['DUREE'] = $pack_personne[0]['DUREE'];
			$_SESSION['pack']['CV_VISIBILITE'] = $pack_personne[0]['CV_VISIBILITE'];
			$_SESSION['pack']['CV_ACCESSIBLE'] = $pack_personne[0]['CV_ACCESSIBLE'];
			$_SESSION['pack']['NB_FICHES_VISITABLES'] = $pack_personne[0]['NB_FICHES_VISITABLES'];# On ne charge pas ici le NB_FICHES_VISITABLES du pack mais celui 
																						 # de la table pack_personne, voir couche_metier/VIEW_pack.php.
			$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = $pack_personne[0]['CV_VIDEO_ACCESSIBLE'];
			$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = $pack_personne[0]['ALERTE_NON_DISPONIBILITE'];
			$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = $pack_personne[0]['NB_DEPARTEMENTS_ALERTE'];
			$_SESSION['pack']['PARRAINAGE_ACTIVE'] = $pack_personne[0]['PARRAINAGE_ACTIVE'];
			$_SESSION['pack']['PREVISUALISATION_FICHES'] = $pack_personne[0]['PREVISUALISATION_FICHES'];
			$_SESSION['pack']['CONTRATS_PDF'] = $pack_personne[0]['CONTRATS_PDF'];
			$_SESSION['pack']['SUIVI'] = $pack_personne[0]['SUIVI'];
			$_SESSION['pack']['PUBS'] = $pack_personne[0]['PUBS'];
			$_SESSION['pack']['date_fin_validite'] = $date_fin_validite;
			$_SESSION['pack']['date_fin_validite_formatee'] = $date_fin_validite_formatee;
		}
	}else{
		# Il n'y a pas de pack actif.
		$_SESSION['pack']['activé'] = false;
		$_SESSION['pack']['DATE_ACHAT'] = "";
		$_SESSION['pack']['ID_PACK'] = "";
		$_SESSION['pack']['NOM'] = "";
		$_SESSION['pack']['TYPE_PACK'] = "";
		$_SESSION['pack']['PRIX_BASE'] ="";
		$_SESSION['pack']['DUREE'] = "";
		$_SESSION['pack']['CV_VISIBILITE'] = 0;
		$_SESSION['pack']['CV_ACCESSIBLE'] = 0;
		$_SESSION['pack']['NB_FICHES_VISITABLES'] = 0;
		$_SESSION['pack']['CV_VIDEO_ACCESSIBLE'] = false;
		$_SESSION['pack']['ALERTE_NON_DISPONIBILITE'] = false;
		$_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] = 0;
		$_SESSION['pack']['PARRAINAGE_ACTIVE'] = false;
		$_SESSION['pack']['PREVISUALISATION_FICHES'] = false;
		$_SESSION['pack']['CONTRATS_PDF'] = false;
		$_SESSION['pack']['SUIVI'] = false;
		$_SESSION['pack']['PUBS'] = true;
		$_SESSION['pack']['date_fin_validite'] = "00-00-0000 00:00:00";
		$_SESSION['pack']['date_fin_validite_formatee'] = "00000000000000";
	}

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	$oCL_date = new CL_date();
	
	$oMSG->setData('CLE_ACTIVATION', "");
	
	$comptes_inactifs = $oPCS_personne->fx_recuperer_comptes_non_actives($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On traite les informations.
	foreach($comptes_inactifs as $key=>$compte_inactif){
	$comptes_inactifs[$key]['DATE_CONNEXION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($compte_inactif['DATE_CONNEXION'], true, false, 'en', 'fr'), true, 'fr');
	$comptes_inactifs[$key]['DATE_CONNEXION_simple'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($compte_inactif['DATE_CONNEXION'], true, false, 'en', 'fr'), true, 'fr', true, false, true);
	}
	
	function fx_recuperer_infos_by_ID_IP($ID_IP){
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		
		$oMSG->setData('ID_IP', $ID_IP);
		
		return $infos_ID_IP = $oPCS_personne->fx_recuperer_infos_by_ID_IP($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	}
	
	function fx_recuperer_infos_by_IP_COOKIE($IP_COOKIE){
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		
		$oMSG->setData('IP_COOKIE', $IP_COOKIE);
		
		return $infos_IP_COOKIE = $oPCS_personne->fx_recuperer_infos_by_IP_COOKIE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	}

}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_ajouter_news.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){


}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_types.php');
	
	$oMSG = new MSG();
	$oPCS_types = new PCS_types();
	
	$oMSG->setData('ID_FAMILLE_TYPES', 'Type de pack');
	
	$types_packs = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(isset($_GET['id_annonce'])){
	$ID_ANNONCE = (int)$_GET['id_annonce'];
	if($ID_ANNONCE != 0){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');
		require_once('couche_metier/PCS_contrat.php');
		require_once('couche_metier/PCS_pack.php');
		require_once('couche_metier/PCS_personne.php');
		require_once('couche_metier/PCS_types.php');
		require_once('couche_metier/CL_date.php');

		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		$oPCS_contrat = new PCS_contrat();
		$oPCS_pack = new PCS_pack();
		$oPCS_personne = new PCS_personne();
		$oPCS_types = new PCS_types();
		$oCL_date = new CL_date();
	
		# On récupère l'annonce.
		$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
		$oMSG->setData('VISIBLE', 1);
		
		# On modifie le nom de la variable car il y a un culbutage avec une autre variable $annonce...
		$annonce_courante = $oPCS_annonce->fx_recuperer_annonce_complete_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll();
		
		# On récupère les informations relatives à l'adresse de la personne.
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		
		$personne_courante = $oPCS_personne->fx_recuperer_adresse_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
		
		# On vérifie que l'annonce ait bien, rapportée un résultat.
		if(isset($annonce_courante[0]['ID_ANNONCE'])){
			
			if($_SESSION['compte']['ID_PERSONNE'] == $annonce_courante[0]['ID_PERSONNE']){
				# On définit l'annonce comme étant l'annonce courante, sert si le mec qui regarde l'annonce est le même que celui qui l'a créée.
				$_SESSION['annonce']['annonce_courante'] = (int)$_GET['id_annonce'];
			}
			
			$id_annonce_ok = 1;
			# On met en forme les données.
			$annonce_courante[0]['DATE_ANNONCE'] = $oCL_date->fx_ajouter_date($annonce_courante[0]['DATE_ANNONCE'], true, false, 'en', 'fr');
			$annonce_courante[0]['DATE_DEBUT'] = $oCL_date->fx_ajouter_date($annonce_courante[0]['DATE_DEBUT'], true, false, 'en', 'fr');
			$annonce_courante[0]['DATE_FIN'] = $oCL_date->fx_ajouter_date($annonce_courante[0]['DATE_FIN'], true, false, 'en', 'fr');
			
			$annonce_courante[0]['DATE_ANNONCE'] = substr(str_replace(array(':', ' '), array('h', ' à '), $annonce_courante[0]['DATE_ANNONCE']), 0, -3);
			$annonce_courante[0]['DATE_DEBUT'] = substr(str_replace(array(':', ' '), array('h', ' à '), $annonce_courante[0]['DATE_DEBUT']), 0, -3);
			$annonce_courante[0]['DATE_FIN'] = substr(str_replace(array(':', ' '), array('h', ' à '), $annonce_courante[0]['DATE_FIN']), 0, -3);
			
			$annonce_courante[0]['DESCRIPTION'] = str_replace(array('<br>', '<br />'), '', $annonce_courante[0]['DESCRIPTION']);
			$annonce_courante[0]['ARTISTES_RECHERCHES'] = str_replace(array('<br>', '<br />'), '', $annonce_courante[0]['ARTISTES_RECHERCHES']);
			
			# On vérifie le type de la personne.
			if(isset($_SESSION['compte']['TYPE_PERSONNE']) && $_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire"){
				# On effectue les vérifications avant la décrémentation du nombre d'annonce visitables.
				if(!in_array($annonce_courante[0]['ID_ANNONCE'], $_SESSION['compte']['annonces_visitées'])){
					# Si l'id_annonce en cours n'est pas dans le tableau alors c'est que le prestataire n'a jamais visité cette annonce.
					if($_SESSION['pack']['NB_FICHES_VISITABLES'] > 0){
						# On vérifie que le prestataire puisse encore visiter des fiches.
						
						# On recharge les annonces visitées depuis la BDD puis on rajoute l'annonce en cours.
						$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
						
						$nb_annonces_visitees = $oPCS_personne->fx_recuperer_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
						
						$_SESSION['compte']['annonces_visitées'] = $nb_annonces_visitees[0]['ANNONCES_VISITEES'].$annonce_courante[0]['ID_ANNONCE']."/";
						
						# On met à jour la BDD.
						$oMSG->setData('ANNONCES_VISITEES', $_SESSION['compte']['annonces_visitées']);
						$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
						
						$oPCS_personne->fx_modifier_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG);
						
						# On met à jour la session avec un tableau de données et non pas une chaine.
						$_SESSION['compte']['annonces_visitées'] = explode('/', $_SESSION['compte']['annonces_visitées']);
						
						# On met à jour la session en décrémentant le nombre de fiches visitables.
						$_SESSION['pack']['NB_FICHES_VISITABLES']--;
						
						# On met à jour la BDD.
						$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
						$oMSG->setData('ID_PACK', $_SESSION['pack']['ID_PACK']);
						$oMSG->setData('DATE_ACHAT', $oCL_date->fx_ajouter_date($_SESSION['pack']['DATE_ACHAT'], true, false, 'fr', 'en'));
						$oMSG->setData('NB_FICHES_VISITABLES', $_SESSION['pack']['NB_FICHES_VISITABLES']);
						
						$oPCS_pack->fx_decrementer_NB_FICHES_VISITABLES_by_ID_PERSONNE($oMSG);

						
					}
				}
			}# N'est pas prestataire. Pas d'action spécifique, les Organisateurs ne verront qu'une partie de l'annonce.
		
			# On recharge une seconde fois les annonces visitées depuis la BDD.
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$nb_annonces_visitees = $oPCS_personne->fx_recuperer_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();

			# Si l'annonce en cours est dans le tableau alors on dit que l'annonce peut afficher les informations afin de permettre à l'utilisateur de contacter le client.
			if(in_array($ID_ANNONCE, $_SESSION['compte']['annonces_visitées']) || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				$afficher_infos_contact = true;
			}else{
				$afficher_infos_contact = false;
			}
		}else{
			$id_annonce_ok = 0;
			header('Location:'.$oCL_page->getPage('liste_annonce'));
		}
	}else{
		$id_annonce_ok = 0;
		header('Location:'.$oCL_page->getPage('liste_annonce'));
	}
}else{
	$id_annonce_ok = 0;
	header('Location:'.$oCL_page->getPage('liste_annonce'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}
error_reporting(-1);
# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oCL_date = new CL_date();

	# Si au moins une annonce a été visitée.
	if(is_array($_SESSION['compte']['annonces_visitées'])){
		# On récupère de la session les annonces visitées.
		$annonces_visitees = array_reverse($_SESSION['compte']['annonces_visitées']);
		$annonces = Array();
		
		# pour chacune des annonces visitées on la récupère de la bdd et on l'affiche.
		foreach($annonces_visitees as $annonce_visitee){
			$annonce_visitee = trim($annonce_visitee);
			if(!empty($annonce_visitee)){
				$oMSG->setData('ID_ANNONCE', $annonce_visitee);
				
				$annonce = $oPCS_annonce->fx_recuperer_annonce_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On met en forme les données.
				$annonce[0]['DATE_ANNONCE'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce[0]['DATE_ANNONCE'], true, false, 'en', 'fr'), true, 'fr');
				$annonce[0]['DATE_DEBUT'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce[0]['DATE_DEBUT'], true, false, 'en', 'fr'), true, 'fr');
				$annonce[0]['DATE_FIN'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce[0]['DATE_FIN'], true, false, 'en', 'fr'), true, 'fr');
				
				
				# On sauvegarde l'annonce dans le tableau.
				$annonces[] = $annonce[0];
			}
		}
	}
	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	
	$oMSG->setData(0, '');
	$oMSG->setData(1, '');
	
	$membres = $oPCS_personne->fx_recuperer_tous_membres($oMSG)->getData(1)->fetchAll();

}

?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	# On va charger tous les comptes qui ont été supprimés par les utilisateurs.
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	
	$oMSG->setData('VISIBLE', 0);
	$oMSG->setData('PERSONNE_SUPPRIMEE', 1);

	$comptes_supprimes = $oPCS_personne->fx_recuperer_tous_comptes_supprimes($oMSG)->getData(1);

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){

	if(isset($_GET['id_contrat'])){
		$ID_CONTRAT = (int)$_GET['id_contrat'];
		if($ID_CONTRAT != 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_annonce.php');
			require_once('couche_metier/PCS_contrat.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/PCS_evaluation.php');
			require_once('couche_metier/PCS_types.php');
			require_once('couche_metier/CL_date.php');

			$oMSG = new MSG();
			$oPCS_annonce = new PCS_annonce();
			$oPCS_contrat = new PCS_contrat();
			$oPCS_personne = new PCS_personne();
			$oPCS_evaluation = new PCS_evaluation();
			$oPCS_types = new PCS_types();
			$oCL_date = new CL_date();
			
			# On vérifie que la personne ai le droit de consulter ce contrat.
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$nb_contrat = $oPCS_contrat->fx_compter_contrat_by_ID_CONTRAT_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

			if($nb_contrat[0]['nb_contrat'] == 1){
				$id_contrat_ok = 1;
				
				# On récupère le contrat.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				
				$contrat = $oPCS_contrat->fx_recuperer_contrat_by_ID_CONTRAT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On met en forme les données.
				$contrat[0]['DATE_CONTRAT'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_CONTRAT'], true, false, 'en', 'fr'), true, 'fr');
				$contrat[0]['DATE_EVALUATION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_EVALUATION'], true, false, 'en', 'fr'), true, 'fr');
				$contrat[0]['DATE_DEBUT_contrat'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_DEBUT_contrat'], true, false, 'en', 'fr'), true, 'fr');
				$contrat[0]['DATE_FIN_contrat'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_FIN_contrat'], true, false, 'en', 'fr'), true, 'fr');
				$contrat[0]['DATE_FIN_contrat_formatee'] = $oCL_date->fx_ajouter_date($contrat[0]['DATE_FIN_contrat'], true, true, 'fr', 'fr');
				$contrat[0]['DATE_DEBUT_annonce'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_DEBUT_annonce'], true, false, 'en', 'fr'), true, 'fr');
				$contrat[0]['DATE_FIN_annonce'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_FIN_annonce'], true, false, 'en', 'fr'), true, 'fr');
				$now_formatee = date('YmdHis');
				
				# On récupère les types.
				$oMSG->setData('ID_FAMILLE_TYPES', 'Caractéristiques');
				
				$types = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On récupère les notes.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				
				$evaluations = $oPCS_evaluation->fx_recuperer_evaluations_by_ID_CONTRAT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				// Voir pourquoi aucun résultat.
								
			}else{
				# Le contrat n'appartient pas à la personne.
				$id_contrat_ok = 0;
				$_SESSION['contrat']['message_affiche'] = false;
				$_SESSION['contrat']['message'] = "<span class='alert'>Vous ne possédez pas le droit d'afficher ce contrat.</span><br />";
			}
		}
	}else{
		$id_contrat_ok = 0;
		$_SESSION['contrat']['message_affiche'] = false;
		$_SESSION['contrat']['message'] = "<span class='alert'>Le contrat que vous cherchez n'existe pas.</span><br />";
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');		
	require_once('couche_metier/PCS_types.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_types = new PCS_types();
		
	# On récupère les types nécessaires:
	$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');# Vérifier la famille type.
	
	$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
	
	# On récupère les départements.
	$departements = $oPCS_annonce->fx_recuperer_tous_departements($oMSG)->getData(1)->fetchAll();

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_GET['id_annonce'])){
		# On récupère l'ID de l'annonce en GET et on le transforme en int.
		$ID_ANNONCE = (int)$_GET['id_annonce'];
		$ID_ANNONCE_ok = 0;

		# On vérifie que cette annonce existe. (Visibilité + statut + futures)
		
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');	
		require_once('couche_metier/CL_date.php');			
		
		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		$oCL_date = new CL_date();
		
		$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
		$oMSG->setData('VISIBLE', 1);
		$oMSG->setData('STATUT', 'Validée');
		
		$annonce = $oPCS_annonce->fx_recuperer_annonce_valide_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll();
	
		if(!empty($annonce[0]['ID_ANNONCE'])){
			# L'annonce existe bien et est valide, on va pouvoir faire un contrat dessus.
			$ID_ANNONCE_ok = 1;
			$formulaire = "creer";
			
			# On met en forme les dates:
			$annonce[0]['DATE_DEBUT'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_DEBUT'], true, false, 'en', 'fr');
			$annonce[0]['DATE_FIN'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_FIN'], true, false, 'en', 'fr');
			
			$annonce[0]['DATE_DEBUT'] = substr(str_replace(':', 'h', $annonce[0]['DATE_DEBUT']), 0, -3);
			$annonce[0]['DATE_FIN'] = substr(str_replace(':', 'h', $annonce[0]['DATE_FIN']), 0, -3);
			
		}else{
			# L'annonce n'existe pas ou alors elle n'est pas valide.
			$ID_ANNONCE_ok = 0;
			$_SESSION['creer_contrat']['message_affiche'] = false;
			$_SESSION['creer_contrat']['message'] = "<span class='orange'>L'annonce pour laquelle vous souhaitez créer un contrat n'est pas valide. <span class='petit'>(Date dépassée, annonce refusée, ...)</span></span><br />";
		}
	
	}else{
		# Pas de GET.
		$ID_ANNONCE_ok = 0;
		$_SESSION['creer_contrat']['message_affiche'] = false;
		$_SESSION['creer_contrat']['message'] = "<span class='alert'>L'annonce pour laquelle vous souhaitez créer un contrat n'existe pas.</span><br />";
	}
	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	
	# On récupère tous les prestataires.
	$oMSG->setData('TYPE_PERSONNE', 'Prestataire');
	$oMSG->setData('VISIBLE', 1);
	
	$prestataires = $oPCS_personne->fx_recuperer_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère tous les organisateurs.
	$oMSG->setData('TYPE_PERSONNE', 'Organisateur');
	
	$organisateurs = $oPCS_personne->fx_recuperer_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère tous les administrateurs.
	$oMSG->setData('TYPE_PERSONNE', 'Admin');
	
	$administrateurs = $oPCS_personne->fx_recuperer_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	
	$filleuls = $oPCS_personne->fx_recuperer_filleuls_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	
	# On précharge tous les filleuls de la personne.
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oCL_date = new CL_date();
	
	# On définit le nombre de résultats par page.
	$nb_result_affiches = 10;
	$limite = (int)$_GET['limite'];
	
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);	
	$oMSG->setData('GOLDLIVE', 1);
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);
	
	# On compte le nombre d'annonces goldlive que possède ce prestataire.
	$nb_result = $oPCS_annonce->fx_compter_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère les annonces.
	$annonces = $oPCS_annonce->fx_recuperer_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On met en forme les données.
	foreach($annonces as $key=>$annonce){
		$annonces[$key]['DATE_ANNONCE'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce['DATE_ANNONCE'], true, false, 'en', 'fr'), true, 'fr');
	}
	
	function afficher_pages($nb, $page, $total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
error_reporting(-1);
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_pack.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/PCS_contrat.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');

	$oMSG = new MSG();
	$oPCS_pack = new PCS_pack();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_contrat = new PCS_contrat();
	$oPCS_personne = new PCS_personne();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
				
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
		# On récupère la note moyenne de chaque caractéristique pour toutes les prestations.
		# On récupère tous les types d'évaluation.
		$oMSG->setData("ID_FAMILLE_TYPES", 'Caractéristiques');
		
		$types_evaluation = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
		// $oMSG->setData("ID_PERSONNE", $_SESSION['compte']['ID_PERSONNE']);
		$oMSG->setData("ID_PERSONNE", 23);

		$evaluations = Array();
		# Pour chaque type d'évaluation on effectue la requete de sélection des types.
		foreach($types_evaluation as $key=>$type_evaluation){
			$oMSG->setData("TYPE_EVALUATION", $type_evaluation['ID_TYPES']);
			$evaluation = $oPCS_contrat->fx_recuperer_moy_evaluation_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			$caracteristique = $type_evaluation['ID_TYPES'];
			$evaluations[$caracteristique]['evaluation'] = $evaluation[0]['moy_evaluation'];
			# On vérifie que le résultat ne soit pas null.
			if($evaluations[$caracteristique]['evaluation'] === null){
				$evaluations[$caracteristique]['erreur'] = "<span class='petit'>Vous n'avez jamais été noté sur cette caractéristique.</span>";
			}
		}
		
		if($_SESSION['pack']['SUIVI'] == true){
			# On récupère les gains totaux réalisés ainsi que les dépenses dans les packs et dans les annonces goldlive.
			# On commence par récupérer le prix des achats de tous les pacjs achetés
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$cout_packs = $oPCS_pack->fx_calculer_couts_pack_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			# On récupère ensuite les gains qu'a effectué le prestataire.
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('criteres', 'AND contrat.DATE_FIN < NOW();');
			
			$gain_prestations_passees = $oPCS_contrat->fx_calculer_gains_contrats_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

			# On récupère ensuite les gains que va prochainement effectuer le prestataire mais qui ne sont pas surs à 100%.
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('criteres', 'AND contrat.DATE_FIN > NOW();');
			$gain_prestations_futures = $oPCS_contrat->fx_calculer_gains_contrats_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

		}
	}else if($_SESSION['compte']['TYPE_PERSONNE'] == "Organisateur"){
		# On récupère le nombre de contrats en cours.
		
	}
	
	# On récupère la date de création du compte.
	$oMSG->setData("ID_PERSONNE", $_SESSION['compte']['ID_PERSONNE']);
	
	$date_creation_compte = $oPCS_personne->fx_recuperer_date_creation_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();

		# On met la date en FR.
		$date_creation_compte[0]['DATE_CONNEXION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($date_creation_compte[0]['DATE_CONNEXION'], true, false, 'en', 'fr'), true, 'fr');
	
	# On récupère les informations des dix dernières connexions.
	$oMSG->setData("ID_PERSONNE", $_SESSION['compte']['ID_PERSONNE']);
	$oMSG->setData("limit", "LIMIT 0,10");
	
	$dernieres_connexions = $oPCS_personne->fx_recuperer_dernieres_connexions_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	
		# On met les dates en FR.
		foreach($dernieres_connexions as $key=>$derniere_connexion){
			$dernieres_connexions[$key]['DATE_CONNEXION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($derniere_connexion['DATE_CONNEXION'], true, false, 'en', 'fr'), true, 'fr');
		}
				
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
		
	$parrains_temp = $oPCS_personne->fx_recuperer_tous_PARRAIN($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	$parrains = Array();
	
	# Pour tous ces parrains on récupère les informations personnes
	foreach($parrains_temp as $key => $parrain){
		$oMSG->setData('ID_PERSONNE', $parrain['PARRAIN']);
		
		$personne = $oPCS_personne->fx_recuperer_compte_min_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		$personne[0]['nb_filleuls'] = $parrain['nb_parrain'];
		
		# On sauvegarde la personne.
		$parrains[$key] = $personne[0];
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_slide.php');
	
	$oMSG = new MSG();
	$oPCS_slide = new PCS_slide();
	
	# On récupère tous les slides.
	$slides = $oPCS_slide->fx_recuperer_slides($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	# On précharge tous les packs de la personne, jointure externe gauche sur pack_personne.
	# On va compter le nombre de packs de la personne afin de générer les pages.
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/PCS_pack.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	$oPCS_pack = new PCS_pack();
	$oCL_date = new CL_date();
	
	$nb_packs_activables = 0;# On initialise cette variable qui va servir à compter le nombre de packs activables afin de déterminer l'affichage de l'activation des packs.
	$now_formatee = date("YmdHis");
	
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	
	$nb_result = $oPCS_pack->fx_compter_tous_packs_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();# $nb_result contient le nombre de personne de la BDD.
	// $nb_result[0]['nb_pack']
	
	# On définit le nombre de résultats par page.
	$nb_result_affiches = 12;
	$limite = (int)$_GET['limite'];
	
	
	# On charge tous les packs
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$packs_personne = $oPCS_pack->fx_recuperer_packs_by_ID_PERSONNE_et_by_LIMIT($oMSG)->getData(1)->fetchAll();
	
	foreach($packs_personne as $key=>$pack_personne){
		# On convertit en date complète.
		$packs_personne[$key]['DATE_ACHAT'] = $oCL_date->fx_convertir_date($pack_personne['DATE_ACHAT'], true);
		$packs_personne[$key]['DATE_DEBUT'] = $oCL_date->fx_convertir_date($pack_personne['DATE_DEBUT'], true);
		$packs_personne[$key]['DATE_FIN'] = $oCL_date->fx_convertir_date($pack_personne['DATE_FIN'], true);
		
		# On récupère le "timestamp" de la date de début. 
		$packs_personne[$key]['DATE_DEBUT_formatee'] = $oCL_date->fx_convertir_date($pack_personne['DATE_DEBUT'], true, true);
		
		# On récupère la date d'achat au format EN:
		$packs_personne[$key]['DATE_ACHAT_en'] = $oCL_date->fx_convertir_date($pack_personne['DATE_ACHAT'], true, false, "en");

		# On convertit en date plus simple (m-d-Y).
		$ACHAT_simple = split(' ',$oCL_date->fx_convertir_date($pack_personne['DATE_ACHAT'], true));
		$DEBUT_simple = split(' ',$oCL_date->fx_convertir_date($pack_personne['DATE_DEBUT'], true));
		$FIN_simple = split(' ',$oCL_date->fx_convertir_date($pack_personne['DATE_FIN'], true));
		
		
		$packs_personne[$key]['DATE_ACHAT_simple'] = $ACHAT_simple[0];
		$packs_personne[$key]['DATE_DEBUT_simple'] = $DEBUT_simple[0];
		$packs_personne[$key]['DATE_FIN_simple'] = $FIN_simple[0];
		
		# On calcule le prix réel payé.
		$packs_personne[$key]['prix_reel'] = $pack_personne['PRIX_BASE'] - $pack_personne['PRIX_BASE'] * ($pack_personne['REDUCTION']/100);
		$packs_personne[$key]['reduction_reelle'] = $pack_personne['PRIX_BASE'] * ($pack_personne['REDUCTION']/100);
	}
		
	
	function afficher_pages($nb, $page, $total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
		<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
			
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_contrat.php');	
	require_once('couche_metier/CL_date.php');			
	
	$oMSG = new MSG();
	$oPCS_contrat = new PCS_contrat();
	$oCL_date = new CL_date();

	# On définit le nombre de résultats par page.
	$nb_result_affiches = 20;
	$limite = (int)$_GET['limite'];
	
	# On fait la requête de sélection adaptée.
	if(isset($_GET['rq']) && $_GET['rq'] == "toutes"){
		# On compte le nombre de contrats de cette personne.
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		
		$nb_result = $oPCS_contrat->fx_compter_contrat_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();

		# On récupère tous les contrats.
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		$oMSG->setData('nb_result_affiches', $nb_result_affiches);
		$oMSG->setData('debut_affichage', $limite);
		
		$contrats = $oPCS_contrat->fx_recuperer_contrat_min_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	}else{# rq=courants ou rq='empty' ou pas de rq. Dans ce cas on ne récupère que les futurs contrats.
		# On compte le nombre de contrats de cette personne.
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		
		$nb_result = $oPCS_contrat->fx_compter_contrats_courants_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();

		# On récupère tous les contrats.
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		$oMSG->setData('nb_result_affiches', $nb_result_affiches);
		$oMSG->setData('debut_affichage', $limite);
		
		$contrats = $oPCS_contrat->fx_recuperer_contrats_courants_min_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	}
	# on met en forme les données.
	foreach($contrats as $key=>$contrat){
		# On met en forme les dates:
		$contrats[$key]['DATE_CONTRAT'] = $oCL_date->fx_ajouter_date($contrat['DATE_CONTRAT'], true, false, 'en', 'fr');
		$contrats[$key]['DATE_CONTRAT_simple'] = $oCL_date->fx_formatter_heure($contrats[$key]['DATE_CONTRAT'], true, 'fr', false, true, true);
	}
	
	function afficher_pages($nb, $page, $total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}
	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>			$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}
require_once('couche_metier/CL_page.php');
require_once('couche_metier/PCS_personne.php');
$oCL_page = new CL_page();
$oPCS_personne = new PCS_personne();

# On vérifie qu'on se trouve bien sur la page de l'inscription

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_types.php');

$oMSG = new MSG();
$oPCS_types = new PCS_types();

# On récupère la liste des types de la famille 'Découverte du site'.
$oMSG->setData('ID_FAMILLE_TYPES', 'Découverte du site');

$connaissance_site = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();

function fx_activer_compte($email, $cle_activation){
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	$oCL_page = new CL_page();
	
	$oMSG->setData('EMAIL', $email);
	$oMSG->setData('CLE_ACTIVATION', $cle_activation);
	
	$nb_personne = $oPCS_personne->fx_compter_by_EMAIL_et_CLE_ACTIVATION($oMSG)->getData(1)->fetchAll();
	
	if($nb_personne[0]['nb_personne'] == 1){
		$oMSG->setData('CLE_ACTIVATION', "");# On supprime la clé d'activation afin que le compte ne puisse pas être réactivé.
		$oPCS_personne->fx_valider_compte($oMSG);
		
		# On envoi un email à la personne bannie.
		$additional_headers = "From: noreply@liveanim.com \r\n";
		$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
		$destinataires = $EMAIL;
		$sujet = utf8_decode("Alerte LiveAnim [Activation de votre compte]");
		
		$message = "------------------------------\n";
		$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
		$message.= "------------------------------\n\n";
		$message.= utf8_decode("Bonjour, \n");
		$message.= utf8_decode("Nous avons le plaisir de vous informer que votre compte a été activé sur notre site ".$oCL_page->getPage('accueil').". \n");
		$message.= utf8_decode("Vous pouvez donc dès à présent vous connecter et profiter ! \n");
		$message.= utf8_decode("Nous espérons que nos services vous satisferont, nous sommes à votre écoute pour d'éventuelles questions (Via notre page de contact). \n");
		$message.= utf8_decode("Nous vous souhaitons une agréable journée. \n");
		$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
		
		$_SESSION['bannir_membre']['message'] = "<span class='valide'>Le membre $PSEUDO a été banni $duree pour une durée de $duree_bannissement jour(s).<br />";

		
		if(mail($destinataires, $sujet, $message, $additional_headers)){
			# Si le mail a été correctement envoyé:		
			echo "La clé d'activation est valide. Compte activé. Un e-mail a été envoyé.";
		}else{
			echo "La clé d'activation est valide. Compte activé.";
		}
				
	}else{
		if(strlen($nb_personne[0]['CLE_ACTIVATION']) == 0){
			echo "Le compte a déjà été activé.";
		}else{
			echo "La clé d'activation est invalide.";
		}
	}

}

<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	$ID_PARRAIN = $_SESSION['compte']['ID_PERSONNE'];
	$lien = $oCL_page->getPage('inscription', 'absolu')."?parrain=".$ID_PARRAIN."#inscriptionh2";
	$image = $oCL_page->getPage('accueil', 'absolu').$oCL_page->getImage('special_parrainage');
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

// Cette page est en libre accès.

/*
*	Critères de recherche pour les annonces:
*	Type d'annonce
*	Budget
*	CP
*	Ville
*	Date de début
*	Date de fin
*/

# De base on récupère toutes les annonces visibles, validées et par ordre de goldlive et date de début.
require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_annonce.php');
require_once('couche_metier/PCS_contrat.php');
require_once('couche_metier/PCS_personne.php');
require_once('couche_metier/PCS_types.php');
require_once('couche_metier/CL_date.php');

$oMSG = new MSG();
$oPCS_annonce = new PCS_annonce();
$oPCS_contrat = new PCS_contrat();
$oPCS_personne = new PCS_personne();
$oPCS_types = new PCS_types();
$oCL_date = new CL_date();

// -------------- Préchargement du formulaire de recherche: ---------------------------

$now_court = date('d-m-Y');

$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');
$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);


// -------------- Gestion de la pagination et des requêtes de recherche: ---------------------------

# On définit le nombre de résultats par page.
if(isset($_SESSION['pack']) && $_SESSION['pack']['PREVISUALISATION_FICHES'] == 1){
	$nb_result_affiches = 10;
}else{
	$nb_result_affiches = 20;
}
$limite = (int)$_GET['limite'];

# Si aucune recherche n'a été faite alors on charge le truc de base.
if(!isset($_SESSION['recherche_annonce']['recherche_effectuée'])){
	$oMSG->setData('VISIBLE', 1);
	$oMSG->setData('STATUT', 'Validée');
	$oMSG->setData('criteres', 'AND annonce.DATE_DEBUT > NOW()');

	$nb_result = $oPCS_annonce->fx_compter_annonces_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$annonces = $oPCS_annonce->fx_recuperer_annonces_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
}else{
	# Sinon on exécute la requête.
	$criteres = "AND annonce.DATE_DEBUT > '".$_SESSION['recherche_annonce']['DATE_DEBUT']."' AND annonce.DATE_FIN < '".$_SESSION['recherche_annonce']['DATE_FIN']."' ";
	
	# On rend nos deux dates de session (en) affichables (fr + !datetime)
	$DATE_DEBUT = $oCL_date->fx_ajouter_date($_SESSION['recherche_annonce']['DATE_DEBUT'], true, false, 'en', 'fr');
	$DATE_DEBUT_simple = explode(' ', $DATE_DEBUT);
	$DATE_DEBUT_simple = $DATE_DEBUT_simple[0];
	
	$DATE_FIN = $oCL_date->fx_ajouter_date($_SESSION['recherche_annonce']['DATE_FIN'], true, false, 'en', 'fr');
	$DATE_FIN_simple = explode(' ', $DATE_FIN);
	$DATE_FIN_simple = $DATE_FIN_simple[0];
	
	if($_SESSION['recherche_annonce']['TYPE_ANNONCE'] != "*"){
		$criteres.= "AND annonce.TYPE_ANNONCE='".$_SESSION['recherche_annonce']['TYPE_ANNONCE']."' ";
	}
	if($_SESSION['recherche_annonce']['BUDGET'] != 0){
		$criteres.= "AND annonce.BUDGET >='".$_SESSION['recherche_annonce']['BUDGET']."' ";
	}
	if(!empty($_SESSION['recherche_annonce']['CP_VILLE'])){
		$criteres.= "AND (annonce.VILLE LIKE '%".$_SESSION['recherche_annonce']['CP_VILLE']."%' OR annonce.CP LIKE '%".$_SESSION['recherche_annonce']['CP_VILLE']."%') ";
	}
	$oMSG->setData('VISIBLE', 1);
	$oMSG->setData('STATUT', 'Validée');
	$oMSG->setData('criteres', $criteres);
	
	$nb_result = $oPCS_annonce->fx_compter_annonces_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$annonces = $oPCS_annonce->fx_recuperer_annonces_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
}
# On met en forme les données:
foreach($annonces as $key=>$annonce){
	# Les dates:
	$annonces[$key]['DATE_DEBUT'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce['DATE_DEBUT'], true, false, 'en', 'fr'), true, 'fr');
	$annonces[$key]['DATE_FIN'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce['DATE_FIN'], true, false, 'en', 'fr'), true, 'fr');
	$annonces[$key]['DATE_ANNONCE'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce['DATE_ANNONCE'], true, false, 'en', 'fr'), true, 'fr');
	
	# Le nombre de contrat de chaque annonce.
	$oMSG->setData('ID_ANNONCE', $annonce['ID_ANNONCE']);
	$nb_contrat = $oPCS_contrat->fx_compter_contrat_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	$annonces[$key]['nb_contrat'] = $nb_contrat[0]['nb_contrat'];
}
# On recharge les annonces visitées depuis la BDD.
$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);

$annonces_visitees = $oPCS_personne->fx_recuperer_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();

$annonces_visitees = explode('/', $annonces_visitees[0]['ANNONCES_VISITEES']);

function afficher_pages($nb,$page,$total, $page_actuelle) {
	$nbpages=ceil($total/$nb);
	$numeroPages = 1;
	$compteurPages = 1;
	$limite  = 0;
	$troispointsdroits = 0;
	$troispointsgauche = 0;
	echo '<table border = "0" ><tr>'."\n";
	while($numeroPages <= $nbpages) {
		if($numeroPages > $page_actuelle+10){
			if($numeroPages == $nbpages){
				echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			}else{
				if($troispointsdroits == 0){
					echo '<th width="20px">...</th>'."\n";
					$troispointsdroits = 1;
				}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			}
		}else if($numeroPages < $page_actuelle-10){
				if($numeroPages == 1){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}else if($troispointsgauche == 0){
					echo '<th width="20px">...</th>'."\n";
					$troispointsgauche = 1;
				}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			
		}else{
			if($numeroPages == $page_actuelle){
				echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
			}else{
				echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
			}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
		}
	}
	echo '</tr></table>'."\n";
}

?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oCL_date = new CL_date();
	
	# on compte le nombre de résultats.
	$nb_result = $oPCS_annonce->fx_compter_toutes_annonces($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	// $nb_result[0]['nb_annonce']
	
	# On définit le nombre de résultats par page.
	$nb_result_affiches = 50;
	$limite = (int)$_GET['limite'];
	
	# On récupère toutes les annonces avec le statut visible=0 selon la limite.
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);
	
	$annonces = $oPCS_annonce->fx_recuperer_toutes_annonces_min($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On met au format la date de création de l'annonce.
	foreach($annonces as $key=>$annonce){
		$annonces[$key]['DATE_ANNONCE'] = $oCL_date->fx_ajouter_date($annonce['DATE_ANNONCE'], true, false, 'en', 'fr');
	}
	
	function afficher_pages($nb, $page, $total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oCL_date = new CL_date();
	
	# on compte le nombre de résultats.
	$oMSG->setData('VISIBLE', 0);
	
	$nb_result = $oPCS_annonce->fx_compter_annonce_by_VISIBLE($oMSG)->getData(1)->fetchAll();
	// $nb_result[0]['nb_annonce']
	
	# On définit le nombre de résultats par page.
	$nb_result_affiches = 50;
	$limite = (int)$_GET['limite'];
	
	# On récupère toutes les annonces avec le statut visible=0 selon la limite.
	$oMSG->setData('VISIBLE', 0);
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);
	
	$annonces = $oPCS_annonce->fx_recuperer_min_annonce_by_VISIBLE($oMSG)->getData(1)->fetchAll();
	
	# On met au format la date de création de l'annonce.
	foreach($annonces as $key=>$annonce){
		$annonces[$key]['DATE_ANNONCE'] = $oCL_date->fx_ajouter_date($annonce['DATE_ANNONCE'], true, false, 'en', 'fr');
	}
	
	function afficher_pages($nb, $page, $total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
/*
* Critères de recherche pour les artistes:
* Rôles
* Statut professionnel
* Tarifs maximal 
*/


# De base on récupère tous les prestataires par ordre de type pack activé si on ne reçoit rien en GET
require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_personne.php');
require_once('couche_metier/PCS_types.php');
require_once('couche_metier/CL_date.php');

$oMSG = new MSG();
$oPCS_personne = new PCS_personne();
$oPCS_types = new PCS_types();
$oCL_date = new CL_date();

// -------------- Chargement des informations nécessaires au fonctionnement du formulaire de contact -----------
$oMSG->setData('ID_FAMILLE_TYPES', 'Role');

$types = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);


// -------------- Gestion de la pagination et des requêtes de recherche: ---------------------------

# On définit le nombre de résultats par page.
if(!isset($_SESSION['recherche_artiste']['nb_result_affiches'])){
	$nb_result_affiches = 25;
}
$limite = (int)$_GET['limite'];


if(isset($_GET['role'])){
	if($_GET['role'][strlen($_GET['role'])-1] == "s" || $_GET['role'][strlen($_GET['role'])-1] == "x"){
		$ROLE = substr($_GET['role'],0,-1);# On utilise un truc au pluriel, on vire le s ou le x de fin.
	}else{
		$ROLE = $_GET['role'];
	}
	# On sélectionne tous les prestataires qui ont ce rôle.
	$oMSG->setData('VISIBLE', 1);
	$oMSG->setData('TYPE_PERSONNE', 'Prestataire');
	$oMSG->setData('criteres', '');
	$oMSG->setData('sql_LIKE', "AND ROLES LIKE :ROLES ");
	$oMSG->setData('ROLES', "%".$ROLE."%");
	$oMSG->setData('ORDER_BY', 'ORDER BY pack.PRIX_BASE DESC ');

	$nb_result = $oPCS_personne->fx_compter_personne_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$prestataires = $oPCS_personne->fx_recuperer_personne_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

}else if(!isset($_SESSION['recherche_artiste']['recherche_effectuée'])){
	# Si on a effectué aucune recherche alors on charge la requête de base.
	$oMSG->setData('VISIBLE', 1);
	$oMSG->setData('TYPE_PERSONNE', 'Prestataire');
	
	$oMSG->setData('criteres', "");
	$oMSG->setData('sql_LIKE', 'AND ROLES LIKE :ROLES ');
	$oMSG->setData('ROLES', '%%');
	$oMSG->setData('ORDER_BY', 'ORDER BY pack.PRIX_BASE DESC ');

	$nb_result = $oPCS_personne->fx_compter_personne_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$prestataires = $oPCS_personne->fx_recuperer_personne_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

}else if($_SESSION['recherche_artiste']['recherche_effectuée']){
	# Si l'utilisateur a effectué une recherche alors la charge.
	$oMSG->setData('VISIBLE', 1);
	$oMSG->setData('TYPE_PERSONNE', 'Prestataire');
	$criteres = " ";
	if(!empty($_SESSION['recherche_artiste']['STATUT_PERSONNE'])){
		$criteres.= "AND personne.STATUT_PERSONNE='".$_SESSION['recherche_artiste']['STATUT_PERSONNE']."' ";
	}
	# On filtre aussi par départements si le champ n'est pas vide.
	if(!empty($_SESSION['recherche_artiste']['DEPARTEMENTS'])){
		$criteres.= ' AND DEPARTEMENTS IN ('.$_SESSION['recherche_artiste']['DEPARTEMENTS'].')';
	}
	$oMSG->setData('criteres', $criteres);
	$oMSG->setData('sql_LIKE', 'AND ROLES LIKE :ROLES ');
	$oMSG->setData('ROLES', '%'.$_SESSION['recherche_artiste']['ROLES'].'%');
	$oMSG->setData('ORDER_BY', 'ORDER BY pack.PRIX_BASE DESC ');

	$nb_result = $oPCS_personne->fx_compter_personne_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$prestataires = $oPCS_personne->fx_recuperer_personne_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

}

# On met en forme les données:
foreach($prestataires as $key=>$prestataire){
	$prestataires[$key]['ROLES'] = str_replace(',', '<br />', $prestataire['ROLES']);
}

	
function afficher_pages($nb,$page,$total, $page_actuelle) {
	$nbpages=ceil($total/$nb);
	$numeroPages = 1;
	$compteurPages = 1;
	$limite  = 0;
	$troispointsdroits = 0;
	$troispointsgauche = 0;
	echo '<table border = "0" ><tr>'."\n";
	while($numeroPages <= $nbpages) {
		if($numeroPages > $page_actuelle+10){
			if($numeroPages == $nbpages){
				echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			}else{
				if($troispointsdroits == 0){
					echo '<th width="20px">...</th>'."\n";
					$troispointsdroits = 1;
				}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			}
		}else if($numeroPages < $page_actuelle-10){
				if($numeroPages == 1){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}else if($troispointsgauche == 0){
					echo '<th width="20px">...</th>'."\n";
					$troispointsgauche = 1;
				}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			
		}else{
			if($numeroPages == $page_actuelle){
				echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
			}else{
				echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
			}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
		}
	}
	echo '</tr></table>'."\n";
}



?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_contrats_admin.php');

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/PCS_contrat.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/PCS_evaluation.php');
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');

	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_contrat = new PCS_contrat();
	$oPCS_personne = new PCS_personne();
	$oPCS_evaluation = new PCS_evaluation();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
	

	# On définit le nombre de résultats par page.
	$nb_result_affiches = 50;
	$limite = (int)$_GET['limite'];
	
	if(isset($_GET['rq']) && $_GET['rq'] == "en_cours"){
		$oMSG->setData('STATUT_CONTRAT', 'En cours');
	
		# on compte le nombre de résultats.
		$nb_result = $oPCS_contrat->fx_compter_tous_contrats_by_STATUT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On récupère tous les contrats en cours.
		$oMSG->setData('nb_result_affiches', $nb_result_affiches);
		$oMSG->setData('debut_affichage', $limite);
		
		$contrats = $oPCS_contrat->fx_recuperer_tous_contrats_by_STATUT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
	}else{
		# on compte le nombre de résultats.
		$nb_result = $oPCS_contrat->fx_compter_tous_contrats($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On récupère tous les contrats.
		$oMSG->setData('nb_result_affiches', $nb_result_affiches);
		$oMSG->setData('debut_affichage', $limite);
		
		$contrats = $oPCS_contrat->fx_recuperer_tous_contrats($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	}
	
	# On traite les données.
	foreach($contrats as $key=>$contrat){
		$contrats[$key]['DATE_CONTRAT_simple'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat['DATE_CONTRAT'], true, false, 'en', 'fr'), true, 'fr', true);
		$contrats[$key]['DATE_CONTRAT'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat['DATE_CONTRAT'], true, false, 'en', 'fr'), true, 'fr');
	}
	
	
	function afficher_pages($nb, $page, $total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}
	
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	# On va compter le nombre de membres afin de générer les pages.
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	
	$nb_result = $oPCS_personne->fx_compter_tous_membres($oMSG)->getData(1)->fetchAll();# $nb_result contient le nombre de personne de la BDD.
	
	
	# On définit le nombre de résultats par page.
	$nb_result_affiches = 100;
	$limite = (int)$_GET['limite'];
	
	
	# On charge toutes les personnes
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$personnes = $oPCS_personne->fx_recuperer_membres_by_LIMIT($oMSG)->getData(1);
	
	
	
	function afficher_pages($nb,$page,$total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_nouveaute.php');
require_once('couche_metier/PCS_commentaire.php');
require_once('couche_metier/CL_date.php');

$oMSG = new MSG();
$oPCS_nouveaute = new PCS_nouveaute();
$oPCS_commentaire = new PCS_commentaire();
$oCL_date = new CL_date();


# On définit le nombre de résultats par page.
$nb_result_affiches = 10;
$limite = (int)$_GET['limite'];	

# On récupère la news à afficher.
$oMSG->setData('VISIBLE', 1);
$oMSG->setData('debut_affichage', $limite);
$oMSG->setData('nb_result_affiches', $nb_result_affiches);

# On récupère le nombre de news visibles.
$nb_result = $oPCS_nouveaute->fx_compter_toutes_nouveautees_by_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

# On récupère toutes ces news.
$nouveautees = $oPCS_nouveaute->fx_selectionner_nouveautees_BY_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

# On met en forme les données.
foreach($nouveautees as $key=>$nouveautee){
	$nouveautees[$key]['DATE_CREATION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($nouveautee['DATE_CREATION'], true, false, 'en', 'fr'), true, 'fr');
	$nouveautees[$key]['CONTENU'] = str_replace(Array('\n'), Array('<br />'), $nouveautee['CONTENU']);
}

function afficher_pages($nb,$page,$total, $page_actuelle) {
	$nbpages=ceil($total/$nb);
	$numeroPages = 1;
	$compteurPages = 1;
	$limite  = 0;
	$troispointsdroits = 0;
	$troispointsgauche = 0;
	echo '<table border = "0" ><tr>'."\n";
	while($numeroPages <= $nbpages) {
		if($numeroPages > $page_actuelle+10){
			if($numeroPages == $nbpages){
				echo '<th width="20px"><a href = "'.$page.'?id_news='.$_GET['id_news'].'&limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			}else{
				if($troispointsdroits == 0){
					echo '<th width="20px">...</th>'."\n";
					$troispointsdroits = 1;
				}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			}
		}else if($numeroPages < $page_actuelle-10){
				if($numeroPages == 1){
					echo '<th width="20px"><a href = "'.$page.'?id_news='.$_GET['id_news'].'&limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}else if($troispointsgauche == 0){
					echo '<th width="20px">...</th>'."\n";
					$troispointsgauche = 1;
				}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
			
		}else{
			if($numeroPages == $page_actuelle){
				echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
			}else{
				echo '<th width="20px"><a href = "'.$page.'?id_news='.$_GET['id_news'].'&limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
			}
				$limite = $limite + $nb;
				$numeroPages++;
				$compteurPages++;
		}
	}
	echo '</tr></table>'."\n";
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_nouveaute.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_nouveaute = new PCS_nouveaute();
	$oCL_date = new CL_date();

	# On définit le nombre de résultats par page.
	$nb_result_affiches = 50;
	$limite = (int)$_GET['limite'];	
	
	# On compte le nombre news.
	$nb_result = $oPCS_nouveaute->fx_compter_toutes_nouveautees($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On précharge toutes les news du site sans distinction.
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);
	
	$nouveautees = $oPCS_nouveaute->fx_selectionner_toutes_nouveautees($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On met en forme les données.
	foreach($nouveautees as $key=>$nouveautee){
		$nouveautees[$key]['DATE_CREATION_formatee'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($nouveautee['DATE_CREATION'], true, false, 'en', 'fr'), true, 'fr');
		$nouveautees[$key]['DATE_CREATION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($nouveautee['DATE_CREATION'], true, false, 'en', 'fr'), true, 'fr', true);
	}
	
	
	function afficher_pages($nb, $page, $total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}
	
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	# On charge tous les packs existants.
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_pack.php');
	
	$oMSG = new MSG();
	$oPCS_pack = new PCS_pack();
	
	$oMSG->setData(0, "");
	$oMSG->setData(1, "");
	
	$packs = $oPCS_pack->fx_recuperer_tous_packs($oMSG)->getData(1)->fetchAll();
	
}else{
# Si l'internaute n'est pas connecté et admin il gicle.
header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/PCS_contrat.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/PCS_evaluation.php');
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');

	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_contrat = new PCS_contrat();
	$oPCS_personne = new PCS_personne();
	$oPCS_evaluation = new PCS_evaluation();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();

	$nb_result_affiches = 10;
	$limite = (int)$_GET['limite'];

	$oMSG->setData('STATUT_CONTRAT', 'Validé');
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	
	if(isset($_GET['rq']) && $_GET['rq'] == "futures"){
		$oMSG->setData('where', 'AND contrat.DATE_FIN > NOW()');
	}else{
		$oMSG->setData('where', 'AND contrat.DATE_FIN < NOW()');
	}
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	# On compte le nombre de prestations effectuées.
	$nb_result = $oPCS_contrat->fx_compter_prestations_effectues($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On précharge tous les contrats validés et dont la date de fin est dépassée.
	$prestations = $oPCS_contrat->fx_recuperer_prestations_min($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On met en forme les données.
	foreach($prestations as $key=>$prestation){
		$prestations[$key]['DATE_CONTRAT_simple'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($prestation['DATE_CONTRAT'], true, false, 'en', 'fr'), true, 'fr', true);
		$prestations[$key]['DATE_CONTRAT'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($prestation['DATE_CONTRAT'], true, false, 'en', 'fr'), true, 'fr');
		
		$prestations[$key]['DATE_FIN_simple'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($prestation['DATE_FIN'], true, false, 'en', 'fr'), true, 'fr', true);
		$prestations[$key]['DATE_FIN'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($prestation['DATE_FIN'], true, false, 'en', 'fr'), true, 'fr');
	}

	function afficher_pages($nb,$page,$total, $page_actuelle) {
		$nbpages=ceil($total/$nb);
		$numeroPages = 1;
		$compteurPages = 1;
		$limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
		echo '<table border = "0" ><tr>'."\n";
		while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
		}
		echo '</tr></table>'."\n";
	}

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_pub.php');
	
	$oMSG = new MSG();
	$oPCS_pub = new PCS_pub();
	
	# on récupère toutes les pubs existantes par ordre de position.
	$pubs = $oPCS_pub->fx_recuperer_toutes_pubs($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	foreach($pubs as $key => $pub){
		$pubs[$key]['POSITION'] = constant("PCS_pub::POSITION_".$pub['POSITION']);
	}
	
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_types.php');
	
	$oMSG = new MSG();
	$oPCS_types = new PCS_types();
	
	$oMSG->setData('ID_FAMILLE_TYPES', 'Role');
	$roles_singulier = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	$oMSG->setData('ID_FAMILLE_TYPES', 'Roles');
	$roles_pluriel = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On est sensé avoir autant de rôles singuliers que pluriels.
	$nb_roles = count($roles_singulier);
	
	# On regroupe les tableaux.
	$roles = Array();
	
	for($i = 0;$i<$nb_roles;$i++){
		$roles[$i]['singulier'] = $roles_singulier[$i]['ID_TYPES'];
		$roles[$i]['pluriel'] = $roles_pluriel[$i]['ID_TYPES'];
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/PCS_pack.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/PCS_nouveaute.php');
	require_once('couche_metier/PCS_pub.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	$oPCS_pack = new PCS_pack();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_nouveaute = new PCS_nouveaute();
	$oPCS_pub = new PCS_pub();
	

	# On récupère le nombre de comptes non activés.
	$oMSG->setData('CLE_ACTIVATION', "");
	
	$nb_comptes_inactifs = $oPCS_personne->fx_compter_comptes_non_actives($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère le nombre de membres.
	$nb_comptes = $oPCS_personne->fx_compter_tous_membres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère le nombre de comptes supprimés.
	$oMSG->setData('PERSONNE_SUPPRIMEE', 1);
	$oMSG->setData('VISIBLE', 0);
	
	$nb_comptes_supprimes = $oPCS_personne->fx_compter_comptes_by_PERSONNE_SUPPRIMEE_et_VISIBILITE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère le nombre d'annonces en attentes.
	$oMSG->setData('VISIBLE', 0);
	
	$nb_annonces_en_attente = $oPCS_annonce->fx_compter_annonce_by_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	// $nb_annonces_en_attente[0]['nb_annonce']
	
	# On récupère le nombre d'annonces totales.
	$nb_annonces_totales = $oPCS_annonce->fx_compter_toutes_annonces($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère le nombre de contrats en cours.
	
	# On récupère le nombre de contrats totaux.
	
	# On récupère le nombre packs existants.
	$nb_packs = $oPCS_pack->fx_compter_tous_packs($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	$oMSG->setData('VISIBLE', 0);
	$nb_packs_inactifs = $oPCS_pack->fx_compter_packs_by_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère le nombre de news existantes.
	$oMSG->setData('VISIBLE', 1);
	$nb_news = $oPCS_nouveaute->fx_compter_toutes_nouveautees_by_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	$oMSG->setData('VISIBLE', 0);
	$nb_news_desactive = $oPCS_nouveaute->fx_compter_toutes_nouveautees_by_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On récupère le nombre de pubs existantes.
	$nb_pubs = $oPCS_pub->fx_compter_toutes_pubs($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

	
	
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_menuv_gestion_compte.php');

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
			
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_annonce.php');		
		require_once('couche_metier/PCS_contrat.php');		
		require_once('couche_metier/PCS_message.php');		
		require_once('couche_metier/PCS_personne.php');		
		
		$oMSG = new MSG();
		$oPCS_annonce = new PCS_annonce();
		$oPCS_contrat = new PCS_contrat();
		$oPCS_message = new PCS_message();
		$oPCS_personne = new PCS_personne();
		
		$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
		
		if($_SESSION['compte']['TYPE_PERSONNE'] == "Organisateur" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
			# Le nombre d'annonces totales.
			$toutes_annonces = $oPCS_annonce->fx_compter_toutes_annonces_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			# Le nombre d'annonces en cours.
			$annonces_futures = $oPCS_annonce->fx_compter_annonces_futures_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
			# On compte le nombre d'annonces goldlive.
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('GOLDLIVE', 1);
		
			$annonces_goldlive = $oPCS_annonce->fx_compter_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
		}
		if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
			# Le nombre total de prestations effectuées.
			$oMSG->setData('STATUT_CONTRAT', 'Validé');
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('where', 'AND contrat.DATE_FIN < NOW()');
			
			$prestations_effectues = $oPCS_contrat->fx_compter_prestations_effectues($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			# Le nombre de prestations prévues.
			$oMSG->setData('STATUT_CONTRAT', 'Validé');
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('where', 'AND contrat.DATE_FIN > NOW()');
			
			$prestations_prevues = $oPCS_contrat->fx_compter_prestations_effectues($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
		}
		# Le nombre total de contrats.
		$tous_contrats = $oPCS_contrat->fx_compter_contrat_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
		# Le nombre de contrats en cours.
		$contrats_courants = $oPCS_contrat->fx_compter_contrats_courants_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();

		# Le nombre de messages non lus.
		$oMSG->setData('STATUT_MESSAGE', 'Non lu');
		$oMSG->setData('VISIBLE', 1);
		
		$messages_non_lus = $oPCS_message->fx_compter_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG)->getData(1)->fetchAll();
		
		# Le nombre de messages totaux visibles.
		$oMSG->setData('STATUT_MESSAGE', 'Supprimé');# Tous les messages qui n'auront pas de statut supprimé seront sélectionnés
		$oMSG->setData('VISIBLE', 1);
		$messages_totaux = $oPCS_message->fx_compter_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG)->getData(1)->fetchAll();
		
		# Le nombre de filleuls.
		$filleuls_totaux = $oPCS_personne->fx_compter_filleuls_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
		
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	# On initialise notre variable qui détermine l'affichage du message demandé.
	$id_message_ok = 0;
	if(isset($_GET['id_message'])){
		$ID_MESSAGE = (int)$_GET['id_message'];
		# On vérifie que l'identifiant de l'annonce soit valide.
		if($ID_MESSAGE > 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/PCS_message.php');
			require_once('couche_metier/PCS_types.php');
			require_once('couche_metier/CL_date.php');

			$oMSG = new MSG();
			$oPCS_personne = new PCS_personne();
			$oPCS_message = new PCS_message();
			$oPCS_types = new PCS_types();
			$oCL_date = new CL_date();
			
			# On récupère le message.
			$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);

			$message = $oPCS_message->fx_recuperer_message_by_ID_MESSAGE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			# On vérifie que le message existe bien, si ce n'est pas le cas soit il n'existe pas soit la personne n'y a pas accès.
			if(!empty($message[0]['ID_MESSAGE'])){
				$id_message_ok = 1;
				$maintenant_en = date("Y-m-d H:i:s");
				$maintenant_fr = date("d-m-Y H:i:s");
				
				# On met en forme les données.
				$message[0]['DATE_LECTURE'] = $oCL_date->fx_ajouter_date($message[0]['DATE_LECTURE'], true, false, 'en', 'fr');
				$message[0]['DATE_REPONSE'] = $oCL_date->fx_ajouter_date($message[0]['DATE_REPONSE'], true, false, 'en', 'fr');
				$message[0]['DATE_ENVOI'] = $oCL_date->fx_ajouter_date($message[0]['DATE_ENVOI'], true, false, 'en', 'fr');
				
				$message[0]['DATE_LECTURE'] = str_replace(' ', ' à ', $message[0]['DATE_LECTURE']);
				$message[0]['DATE_REPONSE'] = str_replace(' ', ' à ', $message[0]['DATE_REPONSE']);
				$message[0]['DATE_ENVOI'] = str_replace(' ', ' à ', $message[0]['DATE_ENVOI']);
				
				# On charge les informations de l'expéditeur.
				$oMSG->setData('ID_PERSONNE', $message[0]['EXPEDITEUR']);

				$expediteur = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
				//$expediteur[0]['PSEUDO'];

				# Si le message n'avait pas été lu et qu'il est de type contrat alors on envoi un email à l'expéditeur.
				if($message[0]['STATUT_MESSAGE'] == "Non lu" && $message[0]['TYPE_MESSAGE'] == "Contrat"){
					
					# On modifie la date de lecture:
					$message[0]['DATE_LECTURE'] = $maintenant_fr;
					$message[0]['DATE_LECTURE'] = str_replace(' ', ' à ', $message[0]['DATE_LECTURE']);
					
					# On envoi un email à l'expéditeur afin de lui dire que son annonce a été lue.
					$additional_headers = "From: noreply@liveanim.fr \r\n";
					$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
					$destinataires = $expediteur[0]['EMAIL'];
					$sujet = utf8_decode("LiveAnim [Lecture de votre demande de contrat]");
					
					$message_mail = "------------------------------\n";
					$message_mail.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
					$message_mail.= "------------------------------\n\n";
					$message_mail.= utf8_decode("Bonjour ".$expediteur[0]['PSEUDO'].", \n");
					$message_mail.= utf8_decode("Nous vous informons que votre demande de contrat à ".$_SESSION['compte']['PSEUDO']." vient d'être lue. \n\n");
					$message_mail.= utf8_decode("------------------------------\n\n\n");
					$message_mail.= utf8_decode("LiveAnim vous remercie de votre confiance !\n\n");
					$message_mail.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
					
					mail($destinataires, $sujet, $message_mail, $additional_headers);
					
					# On indique que le message a été lu et sa date de lecture.
					$oMSG->setData('DATE_LECTURE', $maintenant_en);
					$oMSG->setData('STATUT_MESSAGE', 'Lu');
					$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
					$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
					
					$oPCS_message->fx_message_lu($oMSG);
					
				}else if($message[0]['STATUT_MESSAGE'] == "Non lu"){
					# On modifie la date de lecture:
					$message[0]['DATE_LECTURE'] = $maintenant_fr;
					$message[0]['DATE_LECTURE'] = str_replace(' ', ' à ', $message[0]['DATE_LECTURE']);
					
					# On indique que le message a été lu et sa date de lecture.
					$oMSG->setData('DATE_LECTURE', $maintenant_en);
					$oMSG->setData('STATUT_MESSAGE', 'Lu');
					$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
					$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
					
					$oPCS_message->fx_message_lu($oMSG);
				}
				
			}else{
				$_SESSION['message']['message_affiche'] = false;
				$_SESSION['message']['message'] = "<span class='alert'>Vous ne possédez pas l'autorisation de consulter ce message.</span><br />";
			}
		}else{
			$_SESSION['message']['message_affiche'] = false;
			$_SESSION['message']['message'] = "<span class='alert'>Le message personnel que vous souhaitez lire n'existe pas. (2)</span><br />";
		}
	}else{
		$_SESSION['message']['message_affiche'] = false;
		$_SESSION['message']['message'] = "<span class='alert'>Le message personnel que vous souhaitez lire n'existe pas. (1)</span><br />";
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	# On precharge le nombre de de message totaux. (Visibles).
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_message.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/CL_date.php');

	$oMSG = new MSG();
	$oPCS_message = new PCS_message();
	$oPCS_personne = new PCS_personne();
	$oCL_date = new CL_date();

	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	$oMSG->setData('STATUT_MESSAGE', 'Supprimé');
	$oMSG->setData('VISIBLE', 1);
	
	$nb_result = $oPCS_message->fx_compter_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG)->getData(1)->fetchAll();
	
	# On définit le nombre de résultats par page.
	$nb_result_affiches = 20;
	$limite = (int)$_GET['limite'];
	
	
	# On charge tous les messages.
	$oMSG->setData('nb_result_affiches', $nb_result_affiches);
	$oMSG->setData('debut_affichage', $limite);

	$messages = $oPCS_message->fx_recuperer_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG)->getData(1)->fetchAll();
	
	# On met en forme les données.
	foreach($messages as $key=>$message){
		# On récupère le pseudo de l'expéditeur de chaque message:
		$oMSG->setData('ID_PERSONNE', $message['EXPEDITEUR']);
		
		$personne = $oPCS_personne->fx_recuperer_PSEUDO_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
		$messages[$key]['PSEUDO'] = $personne[0]['PSEUDO'];
		
		# On met en forme les dates.
		$messages[$key]['DATE_ENVOI'] = $oCL_date->fx_ajouter_date($message['DATE_ENVOI'], true, false, 'en', 'fr');
		$DATE_ENVOI_simple = split(' ', $messages[$key]['DATE_ENVOI']);
		$messages[$key]['DATE_ENVOI_simple'] = $DATE_ENVOI_simple[0];
	}
	
	
	
	
	function afficher_pages($nb,$page,$total, $page_actuelle) {
        $nbpages=ceil($total/$nb);
        $numeroPages = 1;
        $compteurPages = 1;
        $limite  = 0;
		$troispointsdroits = 0;
		$troispointsgauche = 0;
        echo '<table border = "0" ><tr>'."\n";
        while($numeroPages <= $nbpages) {
			if($numeroPages > $page_actuelle+10){
				if($numeroPages == $nbpages){
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}else{
					if($troispointsdroits == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsdroits = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				}
			}else if($numeroPages < $page_actuelle-10){
					if($numeroPages == 1){
						echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
					}else if($troispointsgauche == 0){
						echo '<th width="20px">...</th>'."\n";
						$troispointsgauche = 1;
					}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
				
			}else{
				if($numeroPages == $page_actuelle){
					echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
				}else{
					echo '<th width="20px"><a href = "'.$page.'?limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
				}
					$limite = $limite + $nb;
					$numeroPages++;
					$compteurPages++;
			}
        }
        echo '</tr></table>'."\n";
	}
	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
/////////////////////////////////////////// Comparer avec le script admin.
# On vérifie que la personne est connectée.
if($_SESSION['compte']['connecté'] == true){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');		
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
		
	# On récupère les types nécessaires:
	$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');# Vérifier la famille type.
	
	$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
	
	# On récupère les départements.
	$departements = $oPCS_annonce->fx_recuperer_tous_departements($oMSG)->getData(1)->fetchAll();
	
	# Récupérer l'id_annonce en GET et récupérer l'annonce associée.
	if(isset($_GET['id_annonce']) && is_numeric($_GET['id_annonce'])){
		$ID_ANNONCE = $_GET['id_annonce'];
		
		$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
		
		$annonce = $oPCS_annonce->fx_recuperer_annonce_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll();
		# On vérifie que l'annonce appartient bien à cette personne.
		if($annonce[0]['ID_PERSONNE'] == $_SESSION['compte']['ID_PERSONNE']){
			# On vérifie que l'annonce n'ait pas déjà été validée.
			if($annonce[0]['STATUT'] != "Validée"){
				# On met en forme les dates.
				$annonce[0]['DATE_ANNONCE'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_ANNONCE'], true, false, 'en', 'fr');
				$annonce[0]['DATE_DEBUT'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_DEBUT'], true, false, 'en', 'fr');
				$annonce[0]['DATE_FIN'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_FIN'], true, false, 'en', 'fr');
				
				# On élimine les secondes et on convertit plus lisiblement
				$annonce[0]['DATE_DEBUT'] = substr(str_replace(':', 'h', $annonce[0]['DATE_DEBUT']), 0, -3);
				$annonce[0]['DATE_FIN'] = substr(str_replace(':', 'h', $annonce[0]['DATE_FIN']), 0, -3);
			
				# On met en forme les textarea:
				$annonce[0]['ARTISTES_RECHERCHES'] = str_replace(array('<br>', '<br />'), '', $annonce[0]['ARTISTES_RECHERCHES']);
				$annonce[0]['DESCRIPTION'] = str_replace(array('<br>', '<br />'), '', $annonce[0]['DESCRIPTION']);
			}else{
				$_SESSION['historique_annonce']['message_affiche'] = false;
				$_SESSION['historique_annonce']['message'] = "<span class='orange'>Vous ne pouvez pas modifier une annonce ayant été publiée.</span><br />";
				header('Location:'.$oCL_page->getPage('historique_annonce'));
			}
		}else if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
			# On redirige l'administrateur vers la page de modification des annonces pour les administrateurs.
			$_SESSION['modifier_annonce']['message'] = "<span class='rose'>Vous avez été redirigé vers l'interface administrateur.</span>";
			$_SESSION['modifier_annonce']['message_affiche'] = false;
			header('Location:'.$oCL_page->getPage('modifier_fiche_annonce_by_admin')."?id_annonce=".$annonce[0]['ID_ANNONCE']);
		}else{
			# L'utilisateur veut modifier une annonce qui ne lui appartient pas.
			header('Location:'.$oCL_page->getPage('gestion_compte'));
		}
		
	}
	
	# On récupère les types de statut.
	$oMSG->setData('ID_FAMILLE_TYPES', "Statut de l'annonce");# Vérifier la famille type
	
	$statuts = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');		
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
		
	# On récupère les types nécessaires:
	$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');# Vérifier la famille type.
	
	$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
	
	# On récupère les départements.
	$departements = $oPCS_annonce->fx_recuperer_tous_departements($oMSG)->getData(1)->fetchAll();
	
	# Récupérer l'id_annonce en GET et récupérer l'annonce associée.
	if(isset($_GET['id_annonce']) && is_numeric($_GET['id_annonce'])){
		$ID_ANNONCE = $_GET['id_annonce'];
		
		$oMSG->setData('ID_ANNONCE', $ID_ANNONCE);
		
		$annonce = $oPCS_annonce->fx_recuperer_annonce_by_ID_ANNONCE($oMSG)->getData(1)->fetchAll();
		
		# On met en forme les dates.
		$annonce[0]['DATE_ANNONCE'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_ANNONCE'], true, false, 'en', 'fr');
		$annonce[0]['DATE_DEBUT'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_DEBUT'], true, false, 'en', 'fr');
		$annonce[0]['DATE_FIN'] = $oCL_date->fx_ajouter_date($annonce[0]['DATE_FIN'], true, false, 'en', 'fr');
		
		# On élimine les secondes et on convertit plus lisiblement
		$annonce[0]['DATE_DEBUT'] = substr(str_replace(':', 'h', $annonce[0]['DATE_DEBUT']), 0, -3);
		$annonce[0]['DATE_FIN'] = substr(str_replace(':', 'h', $annonce[0]['DATE_FIN']), 0, -3);
		
		# On met en forme les textarea:
		$annonce[0]['ARTISTES_RECHERCHES'] = str_replace(array('<br>', '<br />'), '', $annonce[0]['ARTISTES_RECHERCHES']);
		$annonce[0]['DESCRIPTION'] = str_replace(array('<br>', '<br />'), '', $annonce[0]['DESCRIPTION']);
	}
	
	# On récupère les types de statut.
	$oMSG->setData('ID_FAMILLE_TYPES', "Statut de l'annonce");# Vérifier la famille type
	
	$statuts = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_GET['id_contrat'])){
		$ID_CONTRAT = (int)$_GET['id_contrat'];
		if($ID_CONTRAT != 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_annonce.php');
			require_once('couche_metier/PCS_contrat.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/CL_date.php');

			$oMSG = new MSG();
			$oPCS_annonce = new PCS_annonce();
			$oPCS_contrat = new PCS_contrat();
			$oPCS_personne = new PCS_personne();
			$oCL_date = new CL_date();
			
			# On vérifie que la personne ai le droit de consulter ce contrat.
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			$nb_contrat = $oPCS_contrat->fx_compter_contrat_by_ID_CONTRAT_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

			if($nb_contrat[0]['nb_contrat'] == 1){
				$id_contrat_ok = 1;
				
				# On récupère le contrat.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				
				$contrat = $oPCS_contrat->fx_recuperer_contrat_by_ID_CONTRAT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On met en forme les données.
				$contrat[0]['DATE_CONTRAT'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_CONTRAT'], true, false, 'en', 'fr'), true, 'fr');
				$contrat[0]['DATE_DEBUT'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_DEBUT_contrat'], true, false, 'en', 'fr'), true, 'fr', false, false);
				$contrat[0]['DATE_FIN'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_FIN_contrat'], true, false, 'en', 'fr'), true, 'fr', false, false);
				$contrat[0]['PRIX'] = $contrat[0]['PRIX_contrat'];
				$contrat[0]['DESCRIPTION'] = str_replace(Array('<br />', '<br>'), '', $contrat[0]['DESCRIPTION_contrat']);

				
			}else{
				# Le contrat n'appartient pas à la personne.
				$id_contrat_ok = 0;
				$_SESSION['contrat']['message_affiche'] = false;
				$_SESSION['contrat']['message'] = "<span class='alert'>Vous ne possédez pas le droit d'afficher ce contrat.</span><br />";
			}
		}
	}else{
		$id_contrat_ok = 0;
		$_SESSION['contrat']['message_affiche'] = false;
		$_SESSION['contrat']['message'] = "<span class='alert'>Le contrat que vous cherchez n'existe pas.</span><br />";
	}
	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
	
	$ID_PERSONNE_ok = 0;
	
	# On récupère l'id_personne fournit et on va récupérer toutes ses infos personnelles.
	if(isset($_GET['id_personne']) && is_numeric($_GET['id_personne'])){
		
		$ID_PERSONNE_ok = 1;# On valide le fait que l'ID_PERSONNE a bien été réceptionné.
		
		$ID_PERSONNE = (int)$_GET['id_personne'];
		
		$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
		
		$personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# Ensuite on récupère ses IPs.
		
		$ip_personne = $oPCS_personne->fx_recuperer_toutes_ip_by_ID_PERSONNE($oMSG)->getData(1);
		
		# On récupère le parrain.
		$oMSG->setData('ID_PERSONNE', $personne[0]['PARRAIN']);
		$parrain = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On récupère les statuts.
		$oMSG->setData('ID_FAMILLE_TYPES', 'Statut professionnel');
		$statuts = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On récupère les rôles possibles d'un prestataire.
		$oMSG->setData('ID_FAMILLE_TYPES', 'Role');
		
		$roles = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On gère l'url de la vidéo.
		require_once('couche_metier/CL_video.php');
		$oCL_video = new CL_video();
		
		$personne[0]['CV_VIDEO'] = $oCL_video->fx_recuperer_tag($personne[0]['CV_VIDEO']);
		
		# On met en forme la date qui vient de la BDD.
		$personne[0]['DATE_NAISSANCE'] = $oCL_date->fx_convertir_date($personne[0]['DATE_NAISSANCE']);
		
		# On vire les balises <br /> des textarea.
		$personne[0]['DESCRIPTION'] = str_replace('<br />', '', $personne[0]['DESCRIPTION']);
		$personne[0]['TARIFS'] = str_replace('<br />', '', $personne[0]['TARIFS']);
		$personne[0]['MATERIEL'] = str_replace('<br />', '', $personne[0]['MATERIEL']);
				
		# On extrait les rôles de l'utilisateur.
		$ROLES = explode(',', $personne[0]['ROLES']);
	}
	
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_pack.php');
	require_once('couche_metier/PCS_types.php');
	
	$oMSG = new MSG();
	$oPCS_pack = new PCS_pack();
	$oPCS_types = new PCS_types();
	
	$ID_PACK_ok = 0;
	
	# On récupère l'id_pack fournit et on va récupérer toutes ses infos.
	if(isset($_GET['id_pack']) && is_numeric($_GET['id_pack'])){
		
		$ID_PACK_ok = 1;# On valide le fait que l'ID_PACK a bien été réceptionné.
		
		$ID_PACK = (int)$_GET['id_pack'];
		
		# On récupère le pack en question.
		$oMSG->setData('ID_PACK', $ID_PACK);
		
		$pack = $oPCS_pack->fx_recuperer_pack_by_ID_PACK($oMSG)->getData(1)->fetchAll();
		
		# On récupère les types.
		$oMSG->setData('ID_FAMILLE_TYPES', 'Type de pack');
		
		$types_pack = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
		
	}else{
		$ID_PACK_ok = 0;# L'id_pack reçu est invalide.
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){

	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_personne.php');
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');

	$oMSG = new MSG();
	$oPCS_personne = new PCS_personne();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
	
	$ID_PERSONNE_ok = 1;
	
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	
	$personne = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	
	# Ensuite on récupère ses IPs.
		
	$ip_personne = $oPCS_personne->fx_recuperer_toutes_ip_by_ID_PERSONNE($oMSG)->getData(1);
	
	# On récupère le parrain.
	$oMSG->setData('ID_PERSONNE', $personne[0]['PARRAIN']);
	$parrain = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
	
	# On récupère les statuts.
	$oMSG->setData('ID_FAMILLE_TYPES', 'Statut professionnel');
	$statuts = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
	
	# On récupère les rôles possibles d'un prestataire.
	$oMSG->setData('ID_FAMILLE_TYPES', 'Role');
	
	$roles = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On gère l'url de la vidéo.
	require_once('couche_metier/CL_video.php');
	$oCL_video = new CL_video();
	
	$personne[0]['CV_VIDEO'] = $oCL_video->fx_recuperer_tag($personne[0]['CV_VIDEO']);
	
	# On met en forme la date qui vient de la BDD.
	$personne[0]['DATE_NAISSANCE'] = $oCL_date->fx_convertir_date($personne[0]['DATE_NAISSANCE']);
	
	# On vire les balises <br /> des textarea.
	$personne[0]['DESCRIPTION'] = str_replace('<br />', '', $personne[0]['DESCRIPTION']);
	$personne[0]['TARIFS'] = str_replace('<br />', '', $personne[0]['TARIFS']);
	$personne[0]['MATERIEL'] = str_replace('<br />', '', $personne[0]['MATERIEL']);
	
	# On extrait les rôles de l'utilisateur.
	$ROLES = explode(',', $personne[0]['ROLES']);
			
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_GET['id_news'])){
		$ID_NOUVEAUTE = (int)$_GET['id_news'];
		if($ID_NOUVEAUTE > 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_nouveaute.php');
			require_once('couche_metier/CL_date.php');
			
			$oMSG = new MSG();
			$oPCS_nouveaute = new PCS_nouveaute();
			$oCL_date = new CL_date();
			
			# On va récupérer la nouveautée.
			$oMSG->setData('ID_NOUVEAUTE', $ID_NOUVEAUTE);
			
			$nouveautee = $oPCS_nouveaute->fx_selectionner_nouveautee_by_ID_NOUVEAUTE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
						
		}else{
			# id_news incorrect.
			header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
		}
	}else{
		# Pas d'id_news.
		header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_GET['id_pub']) && (int)$_GET['id_pub'] > 0){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_pub.php');
		
		$oMSG = new MSG();
		$oPCS_pub = new PCS_pub();
		
		# On récupère la pub.
		$oMSG->setData('ID_PUB', $_GET['id_pub']);
		
		$pub = $oPCS_pub->fx_recuperer_pub_by_ID_PUB($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		if(!isset($pub[0]['ID_PUB']) || empty($pub[0]['ID_PUB'])){
			# La pub recherchée n'existe pas.
			$_SESSION['liste_pubs_admin']['message_affiche'] = false;
			$_SESSION['liste_pubs_admin']['message'] = "<span class='alert'>Cette pub n'existe pas, vous avez été redirigé.</span><br />";
			
			header('Location: '.$oCL_page->getPage('liste_pubs_admin', 'absolu'));
		}
		
	}else{
		#$_GET['id_pub'] incorrect.
		$_SESSION['liste_pubs_admin']['message_affiche'] = false;
		$_SESSION['liste_pubs_admin']['message'] = "<span class='alert'>Cette pub n'existe pas, vous avez été redirigé.</span><br />";
		
		header('Location: '.$oCL_page->getPage('liste_pubs_admin', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_GET['id_slide'])){
		$ID_SLIDE = (int)$_GET['id_slide'];
		if($ID_SLIDE > 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_slide.php');
			
			$oMSG = new MSG();
			$oPCS_slide = new PCS_slide();
			
			$oMSG->setData('ID_SLIDE', $ID_SLIDE);
			$slide = $oPCS_slide->fx_recuperer_slide_by_ID_SLIDE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			# On vérifie que le slide existe.
			if(isset($slide[0]) && !empty($slide[0])){
				# On met en forme les données.
				$slide[0]['ACCES'] = explode(',', $slide[0]['ACCES']);
				$slide[0]['LIEN'] = trim($slide[0]['LIEN']);
			}else{
				$_SESSION['gestion_slides']['message'] = "<span class='alert'>Le slide que vous souhaitez modifier n'existe pas.</span><br />";
				$_SESSION['gestion_slides']['message_affiche'] = false;
				
				header('Location: '.$oCL_page->getPage('gestion_slides', 'absolu'));
			}
		}else{
			header('Location: '.$oCL_page->getPage('gestion_slides', 'absolu'));
		}
	}else{
		header('Location: '.$oCL_page->getPage('gestion_slides', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(isset($_GET['id_news'])){
	if((int)$_GET['id_news'] > 0){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_nouveaute.php');
		require_once('couche_metier/PCS_commentaire.php');
		require_once('couche_metier/CL_date.php');
		
		$oMSG = new MSG();
		$oPCS_nouveaute = new PCS_nouveaute();
		$oPCS_commentaire = new PCS_commentaire();
		$oCL_date = new CL_date();
		
		# On récupère la news à afficher.
		$oMSG->setData('ID_NOUVEAUTE', $_GET['id_news']);
		$oMSG->setData('VISIBLE', 1);

		$nouveautee = $oPCS_nouveaute->fx_selectionner_nouveautee_by_ID_NOUVEAUTE_and_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On vérifie qu'on ait bien récupéré un résultat.
		if(!empty($nouveautee[0]['ID_NOUVEAUTE'])){
			# On met en forme les données.
			$nouveautee[0]['DATE_CREATION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($nouveautee[0]['DATE_CREATION'], true, false, 'en', 'fr'), true, 'fr');
			$nouveautee[0]['CONTENU'] = str_replace(Array('\n'), Array('<br />'), $nouveautee[0]['CONTENU']);
			
			# -------------------------------- Gestion des commentaires de la news -------------------------------
			
			# On définit le nombre de résultats par page.
			$nb_result_affiches = 50;
			$limite = (int)$_GET['limite'];	
			
			
			$oMSG->setData('ID_NOUVEAUTE', $nouveautee[0]['ID_NOUVEAUTE']);
			$oMSG->setData('VISIBLE', 1);
			$oMSG->setData('debut_affichage', $limite);
			$oMSG->setData('nb_result_affiches', $nb_result_affiches);
			
			# On récupère le nombre de commentaires visibles pour cette news.
			$nb_result = $oPCS_commentaire->fx_compter_tous_commentaires_by_ID_NOUVEAUTE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

			# On récupère tous les commentaires de cette news.
			$commentaires = $oPCS_commentaire->fx_selectionner_commentaires_by_ID_NOUVEAUTE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
			# Mise en forme des données.
			foreach($commentaires as $key=>$commentaire){
				$commentaires[$key]['DATE_CREATION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($commentaire['DATE_CREATION'], true, false, 'en', 'fr'), true, 'fr');
				$commentaires[$key]['CONTENU'] = str_replace(Array('\n'), Array('<br />'), $commentaire['CONTENU']);
			}
			
			
			function afficher_pages($nb,$page,$total, $page_actuelle) {
				$nbpages=ceil($total/$nb);
				$numeroPages = 1;
				$compteurPages = 1;
				$limite  = 0;
				$troispointsdroits = 0;
				$troispointsgauche = 0;
				echo '<table border = "0" ><tr>'."\n";
				while($numeroPages <= $nbpages) {
					if($numeroPages > $page_actuelle+10){
						if($numeroPages == $nbpages){
							echo '<th width="20px"><a href = "'.$page.'?id_news='.$_GET['id_news'].'&limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
							$limite = $limite + $nb;
							$numeroPages++;
							$compteurPages++;
						}else{
							if($troispointsdroits == 0){
								echo '<th width="20px">...</th>'."\n";
								$troispointsdroits = 1;
							}
							$limite = $limite + $nb;
							$numeroPages++;
							$compteurPages++;
						}
					}else if($numeroPages < $page_actuelle-10){
							if($numeroPages == 1){
								echo '<th width="20px"><a href = "'.$page.'?id_news='.$_GET['id_news'].'&limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
							}else if($troispointsgauche == 0){
								echo '<th width="20px">...</th>'."\n";
								$troispointsgauche = 1;
							}
							$limite = $limite + $nb;
							$numeroPages++;
							$compteurPages++;
						
					}else{
						if($numeroPages == $page_actuelle){
							echo '<th width="20px" class="noir_fond">'.$numeroPages.'</th>'."\n";
						}else{
							echo '<th width="20px"><a href = "'.$page.'?id_news='.$_GET['id_news'].'&limite='.$limite.'">'.$numeroPages.'</a></th>'."\n";
						}
							$limite = $limite + $nb;
							$numeroPages++;
							$compteurPages++;
					}
				}
				echo '</tr></table>'."\n";
			}
		
		}else{
			# id_news incorrect
			$_SESSION['news']['message_affiche'] = false;
			$_SESSION['news']['message'] = "<span class='orange'>La news que vous essayez de lire n'existe pas.</span><br /><br />";
			header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
		}
	}else{
		# id_news incorrect
		$_SESSION['news']['message_affiche'] = false;
		$_SESSION['news']['message'] = "<span class='orange'>La news que vous essayez de lire n'existe pas.</span><br /><br />";
		header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
	}
}else{
	# Pas d'id 
	header('Location: '.$oCL_page->getPage('liste_news', 'absolu'));
}

?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(isset($_GET['id_personne'])){
	$ID_PERSONNE = (int)$_GET['id_personne'];
	
	if($ID_PERSONNE > 0){
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_pack.php');
		require_once('couche_metier/PCS_contrat.php');
		require_once('couche_metier/PCS_personne.php');
		require_once('couche_metier/PCS_types.php');
		require_once('couche_metier/CL_date.php');
		require_once('couche_metier/CL_video.php');
		

		$oMSG = new MSG();
		$oPCS_pack = new PCS_pack();
		$oPCS_contrat = new PCS_contrat();
		$oPCS_personne = new PCS_personne();
		$oPCS_types = new PCS_types();
		$oCL_date = new CL_date();
		$oCL_video = new CL_video();
		
		
		# On récupère les informations du prestataire.
		$oMSG->setData('ID_PERSONNE', $ID_PERSONNE);
		
		$prestataire = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
		# On vérifie qu'on ait bien récupéré un prestataire.
		if($prestataire[0]['TYPE_PERSONNE'] == "Prestataire"){
		
			# On récupère la note moyenne de chaque caractéristique pour toutes les prestations.
			# On récupère tous les types d'évaluation.
			$oMSG->setData("ID_FAMILLE_TYPES", 'Caractéristiques');
			
			$types_evaluation = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		
			$oMSG->setData("ID_PERSONNE", $ID_PERSONNE);

			$evaluations = Array();
			# Pour chaque type d'évaluation on effectue la requete de sélection des types.
			foreach($types_evaluation as $key=>$type_evaluation){
				$oMSG->setData("TYPE_EVALUATION", $type_evaluation['ID_TYPES']);
				$evaluation = $oPCS_contrat->fx_recuperer_moy_evaluation_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				$caracteristique = $type_evaluation['ID_TYPES'];
				$evaluations[$caracteristique]['evaluation'] = $evaluation[0]['moy_evaluation'];
				# On vérifie que le résultat ne soit pas null.
				if($evaluations[$caracteristique]['evaluation'] === null){
					$evaluations[$caracteristique]['erreur'] = "<span class='petit'>N'a jamais été noté.</span>";
				}
			}
		
			# On met en forme les données.
			# On calcule l'age du prestataire.
			$annee_naissance = explode('-', $prestataire[0]['DATE_NAISSANCE']);
			$prestataire[0]['age'] = (((int)date('Y')) - $annee_naissance[0]);
			
			$prestataire[0]['DATE_NAISSANCE'] = $oCL_date->fx_ajouter_date($prestataire[0]['DATE_NAISSANCE'], false, false, 'en', 'fr');
			
			$prestataire[0]['DISTANCE_PRESTATION_MAX'] = str_replace('.', ',', $prestataire[0]['DISTANCE_PRESTATION_MAX']);
			
			# On récupère une url pour la vidéo valide.
			$prestataire[0]['CV_VIDEO'] = $oCL_video->fx_recuperer_tag($prestataire[0]['CV_VIDEO']);
					
			# On gère l'adresse.
			$adresse_complete = "";
			if(!empty($prestataire[0]['ADRESSE'])){
				$adresse_complete.= $prestataire[0]['ADRESSE'];
			}
			if(!empty($prestataire[0]['CP']) || !empty($prestataire[0]['VILLE'])){
				$adresse_complete.= ", ";
			}else{
				$adresse_complete.= " ";
			}
			if(!empty($prestataire[0]['CP'])){
				$adresse_complete.= $prestataire[0]['CP'];
			}
			$adresse_complete.= " ";
			if(!empty($prestataire[0]['VILLE'])){
				$adresse_complete.= $prestataire[0]['VILLE'];
			}
					
		
			# On vérifie les numéros de tel.
			if(strlen($prestataire[0]['TEL_FIXE']) < 10){
				$prestataire[0]['TEL_FIXE'] = "<span class='valide petit'>Ne souhaite pas afficher cette information.</span>";
			}
			if(strlen($prestataire[0]['TEL_PORTABLE']) < 10){
				$prestataire[0]['TEL_PORTABLE'] = "<span class='valide petit'>Ne souhaite pas afficher cette information.</span>";
			}
			
			# On vire les balises <br /> des textarea.
			$prestataire[0]['DESCRIPTION'] = str_replace('<br />', '', $prestataire[0]['DESCRIPTION']);
			$prestataire[0]['TARIFS'] = str_replace('<br />', '', $prestataire[0]['TARIFS']);
			$prestataire[0]['MATERIEL'] = str_replace('<br />', '', $prestataire[0]['MATERIEL']);
			
			# On extrait les rôles de l'utilisateur.
			$ROLES = explode(',', $prestataire[0]['ROLES']);
		
			# On récupère le pack actuel du prestataire visité.
			$oMSG->setData('ID_PERSONNE', $prestataire[0]['ID_PERSONNE']);
			$oMSG->setData('limit', 'LIMIT 0,1');
			
			$pack_prestataire = $oPCS_pack->fx_recuperer_pack_actif_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			# On vérifie que le pack soit bien valide.
			if(!empty($pack_prestataire[0]['ID_PACK'])){
				$pack_ok = true;			
			}else{
				$pack_ok = false;
			}
		
		
		}else{
			# L'id de la personne est incorrect.
			$_SESSION['liste_artiste']['message'] = "<span class='orange'>Le prestataire que vous avez recherché n'existe pas.</span>";
			$_SESSION['liste_artiste']['message_affiche'] = false;
			header('Location:'.$oCL_page->getPage('liste_artiste'));
		}
	}else{
		# L'id de la personne est incorrect.
		$_SESSION['liste_artiste']['message'] = "<span class='orange'>Le prestataire que vous avez recherché n'existe pas.</span>";
		$_SESSION['liste_artiste']['message_affiche'] = false;
		header('Location:'.$oCL_page->getPage('liste_artiste'));
	}
}else{
	# Pas d'id.
	header('Location:'.$oCL_page->getPage('liste_artiste'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/PCS_pack.php');
	require_once('couche_metier/PCS_personne.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_pack = new PCS_pack();
	$oPCS_personne = new PCS_personne();
	
	# On récupère le nombre d'achats d'annonces GoldLive.
	$goldlives = $oPCS_annonce->fx_compter_tous_goldlive($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	$revenu_min_goldlive = 0.8 * $goldlives[0]['nb_annonce'];
	$revenu_max_goldlive = 1.6 * $goldlives[0]['nb_annonce'];
	
	# On récupère tous les packs existants.
	$packs = $oPCS_pack->fx_recuperer_tous_packs($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
	# On initialise notre gain total.
	$gain_total = 0;
	
	# Le nombre d'achats totaux correspond au nombre d'achats de packs.
	$achats_totaux = 0;
	
	# Pour chaque pack payant on récupère le nombre d'achats de ce pack.
	foreach($packs as $key=>$pack){
		if($pack['PRIX_BASE'] > 0){
			$oMSG->setData('ID_PACK', $pack['ID_PACK']);
		
			$nb_achats = $oPCS_pack->fx_compter_nb_packs_achetes_by_ID_PACK($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			$packs[$key]['nb_achats'] = $nb_achats[0]['nb_pack'];
			
			# On mutliplie par le prix du pack pour obtenir le revenu total de ce pack.
			$packs[$key]['gains'] = ($nb_achats[0]['nb_pack'])*($pack['PRIX_BASE']);
			
			# On ajoute le gain du pack au gain total.
			$gain_total+= $packs[$key]['gains'];
			$achats_totaux+= $packs[$key]['nb_achats'];
		}
	}
	
	# On récupère le nombre de connectés.
	$oMSG->setData('DERNIERE_ACTIVITE', (time() - 300));
	$nb_connectes = $oPCS_personne->fx_compter_connectes($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	
}else{
# Si l'internaute n'est pas connecté et admin il gicle.
header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(isset($_POST['form_recherche_annonce_date_debut'])){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
	
	# On récupère les types.
	$oMSG->setData('ID_FAMILLE_TYPES', 'Type de soirée');
	$types_annonce = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
	
	
	$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
	$chaines_interdites2 = array("/'/", "/\"/");
		
	# On récupère les données du formulaire.
	$DATE_DEBUT = preg_replace($chaines_interdites, "", trim($_POST['form_recherche_annonce_date_debut']));
	$DATE_FIN = preg_replace($chaines_interdites, "", trim($_POST['form_recherche_annonce_date_fin']));
	$TYPE_ANNONCE = preg_replace($chaines_interdites, "", ucfirst(trim($_POST['form_recherche_annonce_type_annonce'])));
	$BUDGET = preg_replace($chaines_interdites, "", (int)trim($_POST['form_recherche_annonce_budget']));# On s'en fout des décimales...
	$CP_VILLE = preg_replace($chaines_interdites, "", trim($_POST['form_recherche_annonce_cp_ville']));
	$CP_VILLE = preg_replace($chaines_interdites2, "%", $CP_VILLE);# On fera une recherche plus globale avec le caractère %.
	
	# On sauvegarde les données en session pour les réutiliser dans le script_prechargement_liste_annonce.php.
	$_SESSION['recherche_annonce']['DATE_DEBUT'] = $DATE_DEBUT;
	$_SESSION['recherche_annonce']['DATE_FIN'] = $DATE_FIN;
	$_SESSION['recherche_annonce']['TYPE_ANNONCE'] = $TYPE_ANNONCE;
	$_SESSION['recherche_annonce']['BUDGET'] = $BUDGET;
	$_SESSION['recherche_annonce']['CP_VILLE'] = $CP_VILLE;
	$_SESSION['recherche_annonce']['recherche_effectuée'] = 1;
	
	
	# On vérifie les dates.
	if(!$oCL_date->fx_verif_date($DATE_DEBUT)){
		# DATE_DEBUT n'est pas une date.
		$_SESSION['recherche_annonce']['DATE_DEBUT'] = date('Y-m-d');
	}else{
		$_SESSION['recherche_annonce']['DATE_DEBUT'] = $oCL_date->fx_ajouter_date($DATE_DEBUT, false, false, 'fr', 'en');
	}
	if(!empty($DATE_FIN)){
		if(!$oCL_date->fx_verif_date($DATE_FIN)){
			$_SESSION['recherche_annonce']['DATE_FIN'] = "2020-01-01";
		}else{
			$_SESSION['recherche_annonce']['DATE_FIN'] = $oCL_date->fx_ajouter_date($DATE_FIN, false, false, 'fr', 'en');
		}
	}else{
		$_SESSION['recherche_annonce']['DATE_FIN'] = "2020-01-01";
	}
	// Dans l'un ou l'autre cas, on effectue la recherche avec une date de fin très lointaine.

	# Vérification du types de l'annonce.
	if($TYPE_ANNONCE != "*"){# Si le mec a sélectionné un type spécifique on vérifie qu'il existe.
		$liste_types_annonce = array();
		foreach($types_annonce as $key=>$type_annonce){
			$liste_types_annonce[$key] = $type_annonce['ID_TYPES'];
		}
		if(!in_array($TYPE_ANNONCE, $liste_types_annonce)){
			# L'utilisateur a modifié le code source.
			$_SESSION['recherche_annonce']['TYPE_ANNONCE'] = '*';
		}
	}

	
	# On redirige vers la page de listage des annonces. 
	# Le script_prechargement_liste_annonce va automatiquement faire les requêtes en fonction des variables de session.
	header('Location:'.$oCL_page->getPage('liste_annonce').'#resultats_recherche');
	
}else{
	# L'utilisateur ne vient pas depuis le formulaire.
	header('Location:'.$oCL_page->getPage('liste_annonce'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(isset($_POST['form_recherche_artiste_role'])){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_annonce.php');
	require_once('couche_metier/PCS_types.php');
	require_once('couche_metier/CL_date.php');
	
	$oMSG = new MSG();
	$oPCS_annonce = new PCS_annonce();
	$oPCS_types = new PCS_types();
	$oCL_date = new CL_date();
	
	# On récupère les types.
	$oMSG->setData('ID_FAMILLE_TYPES', 'Statut professionnel');
	$types_statut = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll();
	
	
	$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/", "/&gt/", "/&lt/");
	$chaines_interdites2 = array("/'/", "/\"/");
		
	# On récupère les données du formulaire.
	$ROLES = preg_replace($chaines_interdites, "", trim($_POST['form_recherche_artiste_role']));
	$STATUT_PERSONNE = preg_replace($chaines_interdites, "", trim($_POST['form_recherche_artiste_statut']));
	$DEPARTEMENTS = explode(',', preg_replace($chaines_interdites, "", trim($_POST['form_recherche_artiste_departements'])));
	$NOTE = preg_replace($chaines_interdites, "", (int)trim($_POST['form_recherche_artiste_note']));
	
	# On traite la checkbox.
	if($STATUT_PERSONNE == "on" || $STATUT_PERSONNE == "On"){
		$STATUT_PERSONNE = "Pro";
	}else{
		$STATUT_PERSONNE = "";# A tester pour voir si ça retourne tout le monde ou pas :/
	}
	
	$departements_valides = "";
	$nb_departements = count($DEPARTEMENTS);
	# On vérifie que tous les départements soient valides.
	foreach($DEPARTEMENTS as $key=>$departement){
		if((int)$departement > 0){
			$departements_valides.= $departement;
		}
		if($key != $nb_departements-1){
			$departements_valides.= ",";
		}
	}

	# On vérifie la note.
	if($NOTE <= 0 || $NOTE > 5){
		# Si la note est invalide alors on lui attribue la valeur 3 (Par défaut)
		$NOTE = 3;
	}
	
	# On sauvegarde les données en session pour les réutiliser dans le script_prechargement_liste_artiste.php.
	$_SESSION['recherche_artiste']['ROLES'] = $ROLES;
	$_SESSION['recherche_artiste']['STATUT_PERSONNE'] = $STATUT_PERSONNE;
	$_SESSION['recherche_artiste']['DEPARTEMENTS'] = $departements_valides;
	$_SESSION['recherche_artiste']['NOTE'] = $NOTE;
	$_SESSION['recherche_artiste']['recherche_effectuée'] = true;

	

	# Vérification du types du statut de la personne.
	if($STATUT_PERSONNE != ""){# Si le mec a sélectionné un type spécifique on vérifie qu'il existe.
		$liste_statut_personne = array();
		foreach($types_statut as $key=>$type_statut){
			$liste_statut_personne[$key] = $type_statut['ID_TYPES'];
		}
		if(!in_array($STATUT_PERSONNE, $liste_statut_personne)){
			# L'utilisateur a modifié le code source.
			$_SESSION['recherche_artiste']['STATUT_PERSONNE'] = '';# on recherche tous les types si le type n'est pas compris.
		}
	}
	
	# On redirige vers la page de listage des artistes. 
	# Le script_prechargement_liste_artiste va automatiquement faire les requêtes en fonction des variables de session.
	header('Location:'.$oCL_page->getPage('liste_artiste').'#resultats_recherche');
	
}else{
	# L'utilisateur ne vient pas depuis le formulaire.
	header('Location:'.$oCL_page->getPage('liste_artiste'));
}
?><?php
session_start();
require_once('couche_metier/CL_page.php');
$oCL_page = new CL_page();

$_SESSION['récupération'] = array();
$_SESSION['récupération']['message'] = "";
$_SESSION['récupération']['message_affiche'] = false;

$nb_erreur = 0;

if(isset($_POST['btn_form_recuperation_mdp_valider'])){
	# Si on reçoit bien nos données du formulaire de récupération de mot de passe.
	# On vérifie que les champs ne sont pas vides.
	if(empty($_POST['form_recuperation_mdp_pseudo']) || empty($_POST['form_recuperation_mdp_email'])){
		$_SESSION['récupération']['message'].= "<span class='alert'>Un des deux champs est vide.</span><br />";
		header('location: '.$oCL_page->getPage('recuperation_mdp', 'absolu'));
		$nb_erreur++;
	}

	# On vérifie que le pseudo a une taille correcte.
	if(strlen($_POST['form_recuperation_mdp_pseudo']) < 4){
		$_SESSION['récupération']['message'].= "<span class='alert'>Le pseudo doit faire au moins 4 caractères.</span><br />";
		header('location: '.$oCL_page->getPage('recuperation_mdp', 'absolu'));
		$nb_erreur++;
	}

	if(strlen($_POST['form_recuperation_mdp_pseudo']) > 20){
		$_SESSION['récupération']['message'].= "<span class='alert'>Le pseudo doit faire moins de 20 caractères.</span><br />";
		header('location: '.$oCL_page->getPage('recuperation_mdp', 'absolu'));
		$nb_erreur++;
	}

	# On vérifie l'intégrité de l'email.
	if(!filter_var($_POST['form_recuperation_mdp_email'], FILTER_VALIDATE_EMAIL)){
		
		$_SESSION['récupération']['message'].= "<span class='alert'>L'email que vous avez rentré est invalide.</span><br />";
		header('Location: '.$oCL_page->getPage('recuperation_mdp', 'absolu'));
		$nb_erreur++;
	}

	# Une fois les vérifications faites, on vérifie qu'il n'y a pas d'erreur.
	if($nb_erreur == 0){
	
		$PSEUDO = ucfirst(trim($_POST['form_recuperation_mdp_pseudo']));
		$EMAIL = trim($_POST['form_recuperation_mdp_email']);
		
		# On récupère toutes les personnes et leur MDP qui ont ce mail et ce pseudo (normalement, 1 max).
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_personne.php');
		
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		
		$oMSG->setData('PSEUDO', $PSEUDO);
		$oMSG->setData('EMAIL', $EMAIL);
		
		$Personne = $oPCS_personne->fx_recuperer_compte_by_PSEUDO_et_EMAIL($oMSG)->getData(1)->fetchAll();
		
		# On vérifie qu'on a bien un tableau non vide
		if(isset($Personne[0])){
			if(empty($Personne[0])){
				# Erreur: On a un tableau vide
				$_SESSION['récupération']['message'].= "<span class='alert'>Il n'y a pas de compte existant pour ce couple Pseudo/Mot de passe. Réessayez.</span><br />";
				header('Location: '.$oCL_page->getPage('recuperation_mdp', 'absolu'));
				die();
			}

			}else{
			# Erreur: On a un tableau vide
			$_SESSION['récupération']['message'].= "<span class='alert'>Il n'y a pas de compte existant pour ce couple Pseudo/Mot de passe. Réessayez.</span><br />";
			header('Location: '.$oCL_page->getPage('recuperation_mdp', 'absolu'));
			die();
		}

		# On récupère et décode le MDP.
		$MDP = utf8_decode($Personne[0]['MDP']);
		
		require_once('couche_metier/CL_cryptage.php');
		$oCL_cryptage= new CL_cryptage();
		
		# On décrypte le MDP
		$MDP = $oCL_cryptage->Cryptage($MDP, $PSEUDO);

		# On envoi le MDP par email à l'EMAIL fournit.
		
		$additional_headers = "From: noreply@wikibakoro.fr.cr/ \r\n";
		$additional_headers.= "Content-Type: text/plain; charset=iso-8859-1";
		$destinataires = $EMAIL;
		$sujet = utf8_decode("[Wiki de Bakoro] Récupération de mot de passe");
		
		$message = "------------------------------\n";
		$message.= utf8_decode("Vous recevez cet e-mail de la part d'un service automatique, ne répondez pas à cet e-mail. \n");
		$message.= "------------------------------\n\n";
		$message.= utf8_decode("Bonjour ".$PSEUDO.", \n");
		$message.= utf8_decode("Vous recevez cet e-mail car vous avez fait une récupération de mot de passe sur nos services. \n");
		$message.= utf8_decode("Si ce n'est pas vous qui avez fait cette récupération sachez que le mot de passe n'a pas été modifié et vous est simplement renvoyé à cette adresse e-mail. \n");
		$message.= utf8_decode("L'adresse IP enregistrée lors de la demande de récupération est: ".$_SERVER["REMOTE_ADDR"]." \n\n");
		$message.= utf8_decode("Votre mot de passe: ".$MDP." \n\n------------------------------\n");
		$message.= utf8_decode("Nous vous souhaitons de nombreuses et agréables visites sur notre site !\n\n");
		$message.= utf8_decode("Mail envoyé le ").date("d-m-Y").utf8_decode(" à ").date("H")."h".date("i")."mn.\n\n";
		
		if(mail($destinataires, $sujet, $message, $additional_headers)){
			$_SESSION['récupération']['message'] = "<span class='valide'>Un e-mail vous a été envoyé. Pensez à vérifier vos spams !</span><br />";
		}else{
			$_SESSION['récupération']['message'] = "<span class='alert'>Le serveur de mail ne fonctionne pas, veuillez contacter directement un administrateur pour qu'il règle votre problème ou bien attendre que le serveur de mail soit à nouveau fonctionnel. Nous nous excusons pour cet incident sur lequel nous n'avons aucune possibilité de gestion.</span><br />";
		}	
		header('Location: '.$oCL_page->getPage('recuperation_mdp', 'absolu'));
	}
}else{
	header('location: '.$oCL_page->getPage('recuperation_mdp', 'absolu', 'absolu'));
}<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['form_supprimer_compte_email'])){
	
		# On prépare nos variables.
		require_once('couche_metier/MSG.php');
		require_once('couche_metier/PCS_personne.php');
		require_once('couche_metier/CL_cryptage.php');
		
		$oMSG = new MSG();
		$oPCS_personne = new PCS_personne();
		$oCL_cryptage = new CL_cryptage();
		
		$_SESSION['supprimer_compte']['message'] = "";
		$_SESSION['supprimer_compte']['message_affiche'] = false;

		$nb_erreur = 0;
	
		# On vérifie qu'un des champs obligatoire ne soit pas vide.
		if(empty($_POST['form_supprimer_compte_email']) || empty($_POST['form_supprimer_compte_raison']) || empty($_POST['form_supprimer_compte_mdp'])){
			$nb_erreur++;
			$_SESSION['supprimer_compte']['message'].= "<span class='alert'>Un des champs obligatoires est vide.</span><br />";				
		}
		
		# On supprime les chaines interdites.
		$chaines_interdites = array("/<[^>]*>/", "/&lt;/", "/&gt;/", "/&quot;/");
		
		$EMAIL = preg_replace ($chaines_interdites, "", trim($_POST['form_supprimer_compte_email']));
		$RAISON_SUPPRESSION = preg_replace ($chaines_interdites, "", trim(ucfirst($_POST['form_supprimer_compte_raison'])));
		$MDP = $_POST['form_supprimer_compte_mdp'];
		
		# On vérifie que la taille du mot de passe.
		if(strlen($MDP) < 4){
			$nb_erreur++;
			$_SESSION['supprimer_compte']['message'].= "<span class='alert'>Le mot de passe est trop court, 4 caractères minimum.</span><br />";
		}
		
		if(strlen($MDP) > 20){
			$nb_erreur++;
			$_SESSION['supprimer_compte']['message'].= "<span class='alert'>Le mot de passe est trop long, 20 caractères maximum.</span><br />";
		}
		
		# On vérifie que le format de l'adresse email soit valide.
		if(!filter_var($EMAIL, FILTER_VALIDATE_EMAIL)){
			$_SESSION['supprimer_compte']['message'].= "<span class='alert'>L'email que vous avez rentré est invalide.</span><br />";
			$nb_erreur++;
		}
		
		# S'il n'y a pas d'erreurs.
		if($nb_erreur == 0){
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('EMAIL', $EMAIL);
			$oMSG->setData('MDP', utf8_encode($oCL_cryptage->Cryptage($MDP, $_SESSION['compte']['PSEUDO'])));
			$oMSG->setData('RAISON_SUPPRESSION', $RAISON_SUPPRESSION);
			
			# On vérifie que le mot de passe et l'email et l'ID_PERSONNE correspondent bien.
			$nb_personne = $oPCS_personne->fx_compter_personne_by_ID_PERSONNE_et_EMAIL_et_MDP($oMSG)->getData(1)->fetchAll();

			if($nb_personne[0]['nb_personne'] == 1){
				if($_POST['form_supprimer_compte_infos_perso']){
					# On calcule la date d'aujourd'hui.
					$now = date("Y-m-d", mktime(0, 0, 0, date("m"), date("d"),  date("Y")));
				
					# S'il souhaite supprimer immédiatement ses informations personnelles.
					$oMSG->setData('NOM', '');
					$oMSG->setData('PRENOM', '');
					$oMSG->setData('URL_PHOTO_PRINCIPALE', '');
					$oMSG->setData('DATE_NAISSANCE', '0000-00-00');
					$oMSG->setData('CIVILITE', '');
					$oMSG->setData('VILLE', '');
					$oMSG->setData('ADRESSE', '');
					$oMSG->setData('CP', '');
					$oMSG->setData('TEL_FIXE', '');
					$oMSG->setData('TEL_PORTABLE', '');
					
					$oMSG->setData('VISIBLE', 0);
					$oMSG->setData('PERSONNE_SUPPRIMEE', 1);
					$oMSG->setData('DATE_BANNISSEMENT', '0000-00-00');
					$oMSG->setData('DATE_SUPPRESSION_REELLE', $now);
					$oMSG->setData('RAISON_SUPPRESSION', $RAISON_SUPPRESSION);
					
					$oPCS_personne->fx_supprimer_infos_perso_by_ID_PERSONNE($oMSG);
					$oPCS_personne->fx_bannir_personne($oMSG);
					
					$_SESSION = array();
					session_destroy();
					session_unset();
					session_start();
					
					# On s'apprête à afficher le message sur la page d'accueil.
					$_SESSION['connexion']['message_affiche'] = false;
					$_SESSION['connexion']['message'].= "<span class='valide'>Votre compte a été supprimé et vos informations personnelles supprimées. Votre avis a bien été pris en compte.</span><br />Vous avez été déconnecté.";
					header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
					
				}else{
					# On calcule la date d'aujourd'hui + 2 mois.
					$now = date("Y-m-d", mktime(0, 0, 0, date("m")+2, date("d"),  date("Y")));
				
					$oMSG->setData('VISIBLE', 0);
					$oMSG->setData('PERSONNE_SUPPRIMEE', 1);
					$oMSG->setData('DATE_BANNISSEMENT', '0000-00-00');
					$oMSG->setData('DATE_SUPPRESSION_REELLE', $now);
					$oMSG->setData('RAISON_SUPPRESSION', $RAISON_SUPPRESSION);
					
					$oPCS_personne->fx_bannir_personne($oMSG);
					
					$_SESSION = array();
					session_destroy();
					session_unset();
					session_start();
					
					# On s'apprête à afficher le message sur la page d'accueil.
					$_SESSION['connexion']['message_affiche'] = false;					
					$_SESSION['connexion']['message'].= "<span class='valide'>Votre compte a bien été désactivé. Vos informations personnelles seront supprimées d'ici 2 mois.<br/>Votre avis a bien été pris en compte.</span><br />Vous avez été déconnecté.";
					header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
				}
				
				
			
			}else{
				$_SESSION['supprimer_compte']['message'].= "<span class='alert'>Le mot de passe ou l'email sont incorrects.</span><br />";
				header('Location: '.$oCL_page->getPage('supprimer_compte', 'absolu'));
			}
		}else{
			$_SESSION['supprimer_compte']['message'].= "<span class='alert'>Le compte n'a pas été supprimé.</span><br />";
			header('Location: '.$oCL_page->getPage('supprimer_compte', 'absolu'));
		}		
	}else{
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_POST['ids_msg']) || isset($_GET['ids_msg'])){
		if(isset($_GET['ids_msg'])){
			$ID_MESSAGE = $_GET['ids_msg'];
			
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/PCS_message.php');
			require_once('couche_metier/PCS_types.php');
			require_once('couche_metier/CL_date.php');

			$oMSG = new MSG();
			$oPCS_personne = new PCS_personne();
			$oPCS_message = new PCS_message();
			$oPCS_types = new PCS_types();
			$oCL_date = new CL_date();
			
			$_SESSION['messagerie']['message'] = "";
			$_SESSION['messagerie']['message_affiche'] = false;
			
			$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			
			# On vérifie que le message appartient bien à la personne.
			$nb_message = $oPCS_message->fx_compter_message_by_ID_MESSAGE_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
						
			if($nb_message[0]['nb_message'] == 1){
				# On 'supprime' le message.
				$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
				$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
				$oMSG->setData('STATUT_MESSAGE', 'Supprimé');
				
				$oPCS_message->fx_supprimer_message($oMSG);
				
				$_SESSION['messagerie']['message'].= "<center class='valide'>Le message a été supprimé.</center><br />";
				header('Location: '.$oCL_page->getPage('messagerie', 'absolu'));
				
			}else{
				# Le message n'appartient pas à la personne.
				$_SESSION['messagerie']['message'].= "<span class='alert'>Le message que vous essayez de supprimer ne vous appartient pas.</span><br />";
				header('Location: '.$oCL_page->getPage('messagerie', 'absolu'));
			}
		}else if(isset($_POST['ids_msg']) && !empty($_POST['ids_msg'])){
			foreach($_POST['ids_msg'] as $ID_MESSAGE){
				require_once('couche_metier/MSG.php');
				require_once('couche_metier/PCS_personne.php');
				require_once('couche_metier/PCS_message.php');
				require_once('couche_metier/PCS_types.php');
				require_once('couche_metier/CL_date.php');

				$oMSG = new MSG();
				$oPCS_personne = new PCS_personne();
				$oPCS_message = new PCS_message();
				$oPCS_types = new PCS_types();
				$oCL_date = new CL_date();
				
				$_SESSION['messagerie']['message'] = "";
				$_SESSION['messagerie']['message_affiche'] = false;
				
				$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
				$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
				
				# On vérifie que le message appartient bien à la personne.
				$nb_message = $oPCS_message->fx_compter_message_by_ID_MESSAGE_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
							
				if($nb_message[0]['nb_message'] == 1){
					# On 'supprime' le message.
					$oMSG->setData('ID_MESSAGE', $ID_MESSAGE);
					$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
					$oMSG->setData('STATUT_MESSAGE', 'Supprimé');
					
					$oPCS_message->fx_supprimer_message($oMSG);
					
					if(count($_POST['ids_msg']) > 1){
						$_SESSION['messagerie']['message'].= "<center class='valide'>Les messages ont été supprimés.</center><br />".
						"<center class='petit'>(En cas de suppression accidentelle d'un message, contactez nous s'il est vraiment important)</center><br />";
					}else{
						$_SESSION['messagerie']['message'].= "<center class='valide'>Le message a été supprimé.</center><br />".
						"<center class='petit'>(En cas de suppression accidentelle d'un message, contactez nous s'il est vraiment important)</center><br />";
					}
					header('Location: '.$oCL_page->getPage('messagerie', 'absolu'));
					
				}else{
					# Le message n'appartient pas à la personne.
					$_SESSION['messagerie']['message'].= "<span class='alert'>Le message que vous essayez de supprimer ne vous appartient pas.</span><br />";
					header('Location: '.$oCL_page->getPage('messagerie', 'absolu'));
				}
			}
		}else{
			# On a pas défini ce cas là.
			header('Location: '.$oCL_page->getPage('messagerie', 'absolu'));
		}
	}else{
		# Si on ne reçoit rien.
		$_SESSION['messagerie']['message'].= "<span class='orange'>Vous n'avez pas sélectionné de message.</span><br />";
		header('Location: '.$oCL_page->getPage('messagerie', 'absolu'));
	}	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	if(isset($_POST['form_supprimer_pubs_id_pub']) && !empty($_POST['form_supprimer_pubs_id_pub'])){
		foreach($_POST['form_supprimer_pubs_id_pub'] as $ID_PUB){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_pub.php');

			$oMSG = new MSG();
			$oPCS_pub = new PCS_pub();
			
			$_SESSION['liste_pubs_admin']['message'] = "";
			$_SESSION['liste_pubs_admin']['message_affiche'] = false;
			
			# On supprime la pub.
			$oMSG->setData('ID_PUB', $ID_PUB);
			
			$oPCS_pub->fx_supprimer_pub($oMSG);
			
			if(count($_POST['form_supprimer_pubs_id_pub']) > 1){
				$_SESSION['liste_pubs_admin']['message'].= "<center class='valide'>Les pubs ont été supprimées.</center><br />";
			}else{
				$_SESSION['liste_pubs_admin']['message'].= "<center class='valide'>La pub a été supprimée.</center><br />";
			}
			header('Location: '.$oCL_page->getPage('liste_pubs_admin', 'absolu'));
		}
	}else{
		# Pas de pub à supprimer.
		$_SESSION['liste_pubs_admin']['message'].= "<center class='alert'>Aucune pub n'a été supprimée.</center><br />";
		header('Location: '.$oCL_page->getPage('liste_pubs_admin', 'absolu'));
	}	
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_statistiques_site.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "statistiques_site";

?>
<head>
<title>Administration</title>
</head>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_statistiques_site.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Supprimer mon compte</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "supprimer_compte";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_supprimer_compte.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title><?php if(isset($_GET['reussite']) && $_GET['reussite'] == 1){echo "Achat GoldLive réussi !";}else{echo "Achat GoldLive échoué";} ?></title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
		
	require_once('script_prechargement_achat_annonce_goldlive.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "achat_annonce_goldlive";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_achat_annonce_goldlive.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Achat de pack annulé</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "achat_pack_annule";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_achat_pack_annule.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Achat pack réussi</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_achat_pack_ok.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "achat_pack_ok";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_achat_pack_ok.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Acheter un pack</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_acheter_pack.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "acheter_pack";

?>
	<script type="text/javascript" src="<?php echo $oCL_page->getPage('acheter_pack.js'); ?>">
	
	</script>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_acheter_pack.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Activer un compte</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_activer_comptes.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "activer_comptes";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_activer_comptes.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "administration";

?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_administration.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Publier une news</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_ajouter_news.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "ajouter_news";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_ajouter_news.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Ajouter un pack</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_ajouter_pack.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "ajouter_pack";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_ajouter_pack.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Ajout d'une pub</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "ajouter_pub";

?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_ajouter_pub.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Annonce N°<?php echo $_GET['id_annonce']; ?></title>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&language=fr"></script>
<script type="text/javascript" src="js/GMap.js"></script>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


		
require_once('script_prechargement_annonce.php');

# On définit la page courante:
$_SESSION['page_actuelle'] = "annonce";

?>

<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_panel_GMap.php');
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<?php
					require_once('include_pub_haut.php');
				?>	
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_annonce.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Annonces débloquées</title>
</head>
<?php

if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true && ($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin")){
	
	require_once('script_prechargement_annonces_visitees.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "annonces_visitees";

?>
	<script type="text/javascript" src="<?php echo $oCL_page->getPage('acheter_pack.js'); ?>">
	
	</script>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_annonces_visitees.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Bannir un membre</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_bannir_membre.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "bannir_membre";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_bannir_membre.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Changer le rang d'un utilisateur</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "changer_rang";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_changer_rang.php');
						?>	
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Les comptes supprimés par les utilisateurs</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_comptes_supprimes.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "comptes_supprimes";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_comptes_supprimes.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Contactez-nous</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On définit la page courante:
$_SESSION['page_actuelle'] = "contact";

?>

<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_panel_GMap.php');
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_contact.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Contrat N° <?php echo $_GET['id_contrat']; ?></title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_contrat.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "contrat";
	
?>
<script type="text/javascript" src="js/contrat.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_contrat.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if(isset($_GET['id_contrat'])){
		$ID_CONTRAT = (int)$_GET['id_contrat'];
		if($ID_CONTRAT > 0){
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_contrat.php');
			require_once('couche_metier/PCS_personne.php');
			require_once('couche_metier/PCS_evaluation.php');
			require_once('couche_metier/CL_date.php');
			
			$oMSG = new MSG();
			$oPCS_contrat = new PCS_contrat();
			$oPCS_personne = new PCS_personne();
			$oPCS_evaluation = new PCS_evaluation();
			$oCL_date = new CL_date();
			
			
			if($_SESSION['compte']['TYPE_PERSONNE'] != "Admin"){
				# On vérifie que la personne ait le droit de regard sur ce contrat.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
				
				$nb_contrat = $oPCS_contrat->fx_compter_contrat_by_ID_CONTRAT_et_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				if($nb_contrat[0]['nb_contrat'] != 1){
				
					$_SESSION['historique_contrat']['message_affiche'] = false;
					$_SESSION['historique_contrat']['message'] = "<span class='alert'>Vous n'avez pas les droits nécessaires pour visionner ce contrat.</span><br />";
					header('Location: '.$oCL_page->getPage('historique_contrat', 'absolu'));
					die();
				}
				if(!$_SESSION['pack']['CONTRATS_PDF']){
					$_SESSION['contrat']['message_affiche'] = false;
					$_SESSION['contrat']['message'] = "<span class='alert'>Vous n'avez pas les droits nécessaires pour visionner ce contrat.</span><br />";
					header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
					die();
				}
			}
			# La personne a le droit d'afficher le contrat, on le récupère.
			$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
			
			$contrat = $oPCS_contrat->fx_recuperer_contrat_by_ID_CONTRAT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			# Si le contrat est validé.
			if($contrat[0]['STATUT_CONTRAT'] == 'Validé' || $contrat[0]['STATUT_CONTRAT'] == 'Annulé après validation'){

				# On met en forme les données.
				$contrat[0]['DESCRIPTION_annonce'] = utf8_decode($contrat[0]['DESCRIPTION_annonce']);
				$contrat[0]['DATE_CONTRAT'] = utf8_decode($oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_CONTRAT'], true, false, 'en', 'fr'), true, 'fr'));
				$contrat[0]['DATE_EVALUATION'] = ($oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_EVALUATION'], true, false, 'en', 'fr'), true, 'fr'));
				$contrat[0]['DATE_EVALUATION_formatee'] = utf8_decode($oCL_date->fx_ajouter_date($contrat[0]['DATE_EVALUATION'], true, true, 'fr', 'fr'));
				$contrat[0]['DATE_DEBUT_contrat'] = utf8_decode($oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_DEBUT_contrat'], true, false, 'en', 'fr'), true, 'fr'));
				$contrat[0]['DATE_FIN_contrat'] = utf8_decode($oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_FIN_contrat'], true, false, 'en', 'fr'), true, 'fr'));
				$contrat[0]['DATE_DEBUT_annonce'] = utf8_decode($oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_DEBUT_annonce'], true, false, 'en', 'fr'), true, 'fr'));
				$contrat[0]['DATE_FIN_annonce'] = utf8_decode($oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($contrat[0]['DATE_FIN_annonce'], true, false, 'en', 'fr'), true, 'fr'));
				$contrat[0]['STATUT_CONTRAT'] = utf8_decode($contrat[0]['STATUT_CONTRAT']);
				$contrat[0]['PRIX_contrat'] = utf8_decode($contrat[0]['PRIX_contrat']." euros (HT)");
				$contrat[0]['PRIX_annonce'] = utf8_decode($contrat[0]['PRIX_annonce']." euros (HT)");
				$contrat[0]['TYPE_ANNONCE'] = utf8_decode($contrat[0]['TYPE_ANNONCE']);
				$contrat[0]['TITRE'] = utf8_decode($contrat[0]['TITRE']);
				$now = date('m-d-Y H:i:s');
				$now = utf8_decode($oCL_date->fx_formatter_heure($now, true, 'fr'));
				
				# On récupère la personne ayant validée le contrat.
				$oMSG->setData('ID_PERSONNE', $contrat[0]['DESTINATAIRE']);# Le destinataire est la dernière personne à avoir pu choisir de valider le contrat.
				
				$valideur = $oPCS_personne->fx_recuperer_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll();
				
				$contrat[0]['DESCRIPTION_annonce'] = str_replace(Array('<br />', '<br>'), '\n', $contrat[0]['DESCRIPTION_annonce']);
				
				# On récupère les notes du prestataire pour ce contrat.
				$oMSG->setData('ID_CONTRAT', $ID_CONTRAT);
				
				$notes = $oPCS_evaluation->fx_recuperer_evaluations_by_ID_CONTRAT($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				# On le génère.
				require('ressources/pdf/CL_PDF.php');
				
				// Instanciation de la classe CL_PDF
				$pdf = new CL_PDF();
				
				$pdf->AliasNbPages();
				$pdf->AddPage();# Ajout d'une page (obligatoire)
				$pdf->SetFont('Times','BU',15);# Ajout d'un font (obligatoire)
				$pdf->MultiCell(0, 5, $contrat[0]['TITRE'].' :', 0, 'C');
				$pdf->Ln(10);
				$pdf->SetFont('Times','B',15);
				$html = "Le statut de ce contrat est actuellement <i><u>".$contrat[0]['STATUT_CONTRAT']."</u></i>.";
				$pdf->WriteHTML($html);
				$pdf->SetFont('Times','',11);
				$pdf->Cell(40, 5, "    (Le ".$now.")");
				$pdf->Ln(10);
				$pdf->SetFont('Times','',15);
				$html = '<u><b>Description de l\'annonce :</b></u>';
				$pdf->WriteHTML($html);
				$pdf->Ln(10);
				$pdf->MultiCell(0, 5, $contrat[0]['DESCRIPTION_annonce']);
				$pdf->Ln(20);
				# Création du tableau.
				$header_table = array('', "Demande d'origine :", utf8_decode('Offre acceptée :'));
				$datas_table = Array(
						Array(utf8_decode('Date de début :'), "Le ".$contrat[0]['DATE_DEBUT_annonce'], "Le ".$contrat[0]['DATE_DEBUT_contrat']), 
						Array('Date de fin :', "Le ".$contrat[0]['DATE_FIN_annonce'], "Le ".$contrat[0]['DATE_FIN_contrat']), 
						Array('Prix :', $contrat[0]['PRIX_annonce'], $contrat[0]['PRIX_contrat']), 
								);
				$pdf->FancyTable($header_table,$datas_table);
				$pdf->Ln(10);
				if($contrat[0]['DATE_EVALUATION_formatee'] > '20110101010101'){# Si la date d'évalutation est supérieure au premier janvier 2011.
					$html = utf8_decode("<u><b>Date d'évaluation du prestataire :</b></u> Le ".$contrat[0]['DATE_EVALUATION'].".");
					$pdf->WriteHTML($html);
					$html = $pdf->MultiCell(0, 8, '');
					
					# Pour chaque note, on affiche la note.
					foreach($notes as $key=>$note){
						$html = utf8_decode("<b>".$note['TYPE_EVALUATION']."</b>: ");
						$pdf->WriteHTML($html);
						$pdf->SetTextColor(235,40,82);
						$html = utf8_decode("<b>".$note['EVALUATION']."</b>");
						$pdf->WriteHTML($html);
						$pdf->SetTextColor(0);
						$html = utf8_decode("/5. \n");
						$pdf->WriteHTML($html);
					}
				}else{
					$html = utf8_decode("<b>Le prestataire n'a pas encore été noté.</b>");
					$pdf->WriteHTML($html);
				}
				$pdf->Ln(10);
				$html = utf8_decode("Le contrat a été crée le <b>").$contrat[0]['DATE_CONTRAT'].utf8_decode("</b>. Il fut validé par ").utf8_decode($valideur[0]['PSEUDO']).".";
				$pdf->WriteHTML($html);
				$pdf->Ln(30);
				$pdf->SetFont('Times','',11);
				$html = $pdf->MultiCell(0, 5, utf8_decode("Ce contrat a été autotmatiquement généré par nos services, il est susceptible à des modifications ultérieures car il prend en compte toute modification futures du présent contrat."));
				$pdf->SetFont('Times','',9);
				$html.= $pdf->MultiCell(0, 5, '(Annulation, notations du prestataire, etc.)');
				$html.= $pdf->MultiCell(0, 5, '');
				$pdf->SetFont('Times','',11);
				$html.= $pdf->MultiCell(0, 5, utf8_decode("Si vous rencontrez des problèmes, des erreurs ou si vous avez des questions nous vous invitons à nous contacter à support@liveanim.com, merci."));
				$html.= $pdf->MultiCell(0, 5, utf8_decode("LiveAnim reste à votre entière disposition pour tout renseignement complémentaires."));
				$pdf->WriteHTML($html);
				$pdf->Output();
				
				
			}else{
				# Contrat non validé.
				$_SESSION['contrat']['message_affiche'] = false;
				$_SESSION['contrat']['message'] = "<span class='orange'>Ce contrat n'a pas encoré été validé, vous ne pouvez pas le visualiser.</span><br />";
				header('Location: '.$oCL_page->getPage('contrat', 'absolu')."?id_contrat=".$ID_CONTRAT);
			}
		}else{
			# ID_CONTRAT invalide.
			header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
		}
	}else{
		# Pas de GET
		header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Créer une annonce</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('script_prechargement_creer_annonce.php');
		
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "creer_annonce";

?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_creer_annonce.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Créer un contrat</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_creer_contrat.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "creer_contrat";

?>
<script type="text/javascript" src="js/creer_contrat.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_creer_contrat.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Invitez vos amis !</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "envoyer_invitations";
	
?>
<script type="text/javascript" src="js/contrat.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_envoyer_invitations.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Envoyer un message</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_envoyer_message_admin.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "envoyer_message_admin";

?>
	<script type="text/javascript" src="js/envoyer_message_admin.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_envoyer_message_admin.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Foire Aux Questions</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On définit la page courante:
$_SESSION['page_actuelle'] = "faq";

?>

<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_menuh_faq.php');
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
								include_annonces_gold.php
						*/
						require_once('include_faq.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Mes filleuls</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('script_prechargement_filleuls.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "filleuls";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_filleuls.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>a<?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Gestion des annonces GoldLive</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_gestion_annonce_goldlive.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "gestion_annonce_goldlive";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_gestion_annonce_goldlive.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Gestion des Conditions Générales d'Utilisation</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "gestion_cgu";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_gestion_cgu.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Gestion du compte</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_gestion_compte.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "gestion_compte";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_gestion_compte.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Gestion de la FAQ</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "gestion_faq";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_gestion_faq.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Gestion des Mentions Légales</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "gestion_mentions_legales";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_gestion_mentions_legales.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Gestion du parrainage</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}
error_reporting(-1);
# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_gestion_parrainage.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "gestion_parrainage";

?>
<head>
<title>Administration</title>
</head>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_gestion_parrainage.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Gestion des slides</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_gestion_slides.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "gestion_slides";

?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_gestion_slides.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Historique de mes achats de pack</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_historique_achat_pack.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "historique_achat_pack";

?>
<script type="text/javascript" src="<?php echo $oCL_page->getPage('activer_pack.js'); ?>" ></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_historique_achat_pack.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Historique de mes annonces</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('script_prechargement_historique_annonce.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "historique_annonce";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_historique_annonce.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Historique de mes contrats</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('script_prechargement_historique_contrat.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "historique_contrat";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_historique_contrat.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){

	if(isset($achat_annonce_goldlive_ok) && $achat_annonce_goldlive_ok == 1){
		# Le paiement par Allopass a fonctionné.
	?>
		<h2>Achat réussi !</h2><br />
		<br />
		Succès de l'opération, votre annonce est à présent <span class="rose">GoldLive</span> et est donc dès maintenant en tête des résultats de recherches !<br />
		<br />
		<center><a href="<?php echo $oCL_page->getPage('gestion_annonce_goldlive'); ?>">Voir mes annonces GoldLive</a></center><br />
	<?php
	}else if(isset($_GET['RECALL']) && $_GET['reussite'] == 0){
		# L'achat via allopass a échoué. Code érroné.
	?>
		<h2>L'opération a échouée !</h2><br />
		<br />
		Le code Allopass que vous avez rentré est erronné, l'annonce n'a pas été mise à jour.<br />
		<br />
		<center><a href="<?php echo $oCL_page->getPage('historique_annonce')."?rq=toutes"; ?>">Retour à la liste de mes annonces</a></center><br />		
	<?php
	}else if(isset($_GET['reussite']) && $_GET['reussite'] == 1){
		# L'achat via paypal ou allopass a fonctionné.
	?>
		<h2>Achat réussi !</h2><br />
		<br />
		Succès de l'opération, votre annonce est à présent <span class="rose">GoldLive</span> et est donc dès maintenant en tête des résultats de recherches !<br />
		<br />
		<center><a href="<?php echo $oCL_page->getPage('gestion_annonce_goldlive'); ?>">Voir mes annonces GoldLive</a></center><br />
	<?php
	}else{
		# L'achat via paypal a été arrêté.
	?>
		<h2>Opération annulée !</h2><br />
		<br />
		L'opération a été annulée à votre demande, votre compte n'a pas été débité et l'annonce ne possède le statut <span class="rose">GoldLive</span>.<br />
		Elle est donc moins visible que toutes les annonces <span class="rose">GoldLive !</span><br />
		<br />
		<center><a href="<?php echo $oCL_page->getPage('historique_annonce')."?rq=toutes"; ?>">Retour à la liste de mes annonces</a></center><br />		
	<?php
	}

}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Paiement annulé !</h2><br />
	<p>
		<br />
		Vous avez annulé le paiement en cours. L'opération a été annulée et votre compte n'a pas été débité.<br />
		<br />
		Sachez que le paiement est géré par PayPal et donc entièrement sécurisé:<br />
		<p>
			Le service que propose PayPal est de payer en ligne sans communiquer ses données financières, en s’identifiant simplement avec son adresse électronique et un mot de passe.<br />
			Il n'est pas nécessaire d'alimenter son compte PayPal à l'avance.<br />
			La source d'approvisionnement que vous avez choisie (carte de paiement ou compte bancaire) est automatiquement débitée au moment de la transaction.<br />
			Les destinataires sont avertis par courriel dès que vous leur envoyez de l’argent.<br />
			PayPal peut également permettre de transférer des fonds d’un compte vers un autre internaute à condition que le destinataire ait un compte PayPal.<br />
			Ce service est gratuit si vous choisissez un compte bancaire comme source d'approvisionnement, ou s'il y a de l'argent disponible sur votre compte PayPal.<br />
		</p>
	Pour plus d'informations, nous vous invitons à <a href="https://cms.paypal.com/fr/cgi-bin/marketingweb?cmd=_render-content&content_ID=marketing_fr/particuliers_acheter&nav=0.1">visiter leur site officiel.</a>
		
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Paiement réussi !</h2><br />
	<br />
	<p>
	<span class="valide">Votre achat a bien été réalisé, vous pouvez dès à présent activer votre nouveau pack si vous le souhaitez.</span><br />
	Vous pouvez visionner toutes les informations concernant votre compte dans votre profil s'il a été activé.<br />
	Si vous avez préféré attendre la fin de validité de votre compte actuel, sachez que votre nouveau compte s'activera automatiquement dès que celui-ci sera fini.<br />
	</p><br />
	
	

<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<fieldset class="padding_LR"><legend class="legend_basique">Annonce&nbsp;GoldLive:&nbsp;</legend><br />
		<br />
		Vous voulez que votre annonce soit bien <b>visible</b> ? Le statut <b class="rose">GoldLive</b> est là pour ça !<br />
		Pour seulement <span class="petit">1€</span> cette annonce sera placée <span class="rose">en tête des résultats de recherche</span> du site et de moteurs de recherches !<br />
		<br />
		<fieldset class="padding_LR"><legend class="legend_basique">Paypal:&nbsp;</legend><br />
			Nous mettons à votre disposition le moyen de paiement Paypal, qui vous permet de payer via un compte Paypal pour seulement 1.6€ !<br />
			<br />
			<center>
				<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
					<input type="hidden" name="cmd" value="_s-xclick">
					<input type="hidden" name="hosted_button_id" value="XG6P5HWAGUK2L">
					<input name="shipping" type="hidden" value="0.00" />
					<input name="tax" type="hidden" value="0.00" />
					<input name="notify_url" type="hidden" value="<?php echo $oCL_page->getPage('annonce_goldlive_IPN', 'absolu'); ?>" />
					<input id="custom" name="custom" type="hidden" value="id_personne=<?php echo $_SESSION['compte']['ID_PERSONNE']; ?>&id_annonce=<?php echo $annonce[0]['ID_ANNONCE']; ?>" />
					<input type="image" src="https://www.paypalobjects.com/fr_FR/FR/i/btn/btn_buynowCC_LG.gif" border="0" name="submit" alt="PayPal - la solution de paiement en ligne la plus simple et la plus sécurisée !">
					<img alt="" border="0" src="https://www.paypalobjects.com/fr_FR/i/scr/pixel.gif" width="1" height="1">
				</form>

			</center>
			<br />
		</fieldset>
		<br />
		<fieldset class="padding_LR"><legend class="legend_basique">Allopass&nbsp;</legend><br />
			Nous mettons à votre disposition le moyen de paiement Allopass, qui vous permet de payer par téléphone (appel ou SMS, surtaxés) ou via Neosurf.<br />
			<br />
			<center>
				<script type="text/javascript" src="https://payment.allopass.com/buy/checkout.apu?ids=270455&idd=1096819&lang=fr"></script>
				<noscript>
					<a href="https://payment.allopass.com/buy/buy.apu?ids=270455&idd=1096819" style="border:0">
						<img src="https://payment.allopass.com/static/buy/button/fr/162x56.png" style="border:0" alt="Achetez maintenant !" />
					</a>
				</noscript>
			</center>
			<br />
		</fieldset>
		<br />
	</fieldset>

<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Acheter un pack:</h2><br />
	<br />
	Voici tous nos packs, vous pouvez en choisir un nouveau selon votre besoin.<br />
	Vous pouvez choisir d'activer le pack immédiatement ou de de l'activer une fois votre pack actuel terminé. Quel que soit votre choix il est <b>définitif</b>.<br />
	<br />
	<br />
	<span class="petit orange">/!\ <u>Attention</u>: Une fois le paiement validé le choix de l'activation/non activation du pack acheté est <i>définitif</i>, donc n'hésitez pas à annuler le paiement avant de le valider si vous avez fait une erreur.</span>
	<br />
	<br />
	Si vous demandez une activation immédiate de votre nouveau pack, le délai de l'actuel sera terminé. Vous ne récupèrerez pas le temps non utilisé entre les deux packs.<br />
	<br />
	A contraire, si le pack acheté s'active à la fin de votre pack actuel alors vous ne perdrez rien mais vous ne bénéficierez pas des avantages du pack acheté avant que l'actuel ne se termine.<br />
	<br />
	<?php
	foreach($packs as $key=>$pack){
	?>
		<div id="pack" class="<?php if($pack['ID_PACK'] == $_SESSION['pack']['ID_PACK']){ echo "";} ?>" style="">
			<div class="textboxtop"><center class="gras souligne" style="font-size:15px;"><?php echo $pack['NOM'] ?></center></div>
			<div class="textbox">
				<?php if($pack['ID_PACK'] == $_SESSION['pack']['ID_PACK'] && $_SESSION['pack']['activé'] == true){ echo "<center style='font-size:11px;' class='gras noir'>[Pack Activé jusqu'au ".$_SESSION['pack']['date_fin_validite']."]</center>";} ?>
				<center class="cool"><br />
					<?php echo $pack['DESCRIPTION'] ?><br />
				</center>
				<br />
				<center>
				Le prix total de ce pack est de <b><?php echo $pack['PRIX_BASE'] ?>€</b>. Il dure <b><?php echo $pack['DUREE'] ?> mois</b>. <span class="petit"><br />
				(À compter de la date d'achat)</span><br />
				<br />
				</center>
				<?php
				if($pack['SOUMIS_REDUCTIONS_PARRAINAGE']){
					?>
					<span class="cool gras">Le prix de ce pack peut être réduit grâce à vos éventuelles réductions d'un maximum de <?php echo $pack['GAIN_PARRAINAGE_MAX'] ?>%.</span>
					<?php
				}else{
					?>
					<span class="bad souligne">Le prix de ce pack ne peut pas être réduit via d'éventuelles réductions.</span>
					<?php
				}
				?>
				<br />
				<br />
				<span class="souligne">Si l'un de vos filleuls achète ce pack vous bénéficirez automatiquement d'une réduction de <?php echo $pack['REDUCTION'] ?>% sur l'achat de votre prochain pack !</span> <span class='petit'>(Les réductions se cumulent)</span><br />
				<br />
				<center class="souligne gras">Les avantages de ce pack:</center><br />
				<ul>
					<?php
					if($pack['CV_VISIBILITE'] == 10){
						?>
						<li class="cool gras">Votre C.V fera partie des premiers affichés.</li>
						<?php
						}else if($pack['CV_VISIBILITE'] > 8){
						?>
						<li></li>
						<?php
						}else if($pack['CV_VISIBILITE'] > 6){
						?>
						<li></li>
						<?php
						}else if($pack['CV_VISIBILITE'] > 4){
						?>
						<li class="cool">La visibilité de votre C.V bénéficiera d'un gros coup de pouce de notre part.</li>
						<?php
						}else if($pack['CV_VISIBILITE'] > 2){
						?>
						<li class="bad gras">La visibilité de votre C.V bénéficiera d'un petit coup de pouce.</li>
						<?php
						}else if($pack['CV_VISIBILITE'] > 0){
						?>
						<li class="bad">La visibilité de votre C.V sera légèrement améliorée.</li>
						<?php
						}else{
						?>
						<li class="alert">Votre C.V sera dans les derniers affichés.</li>
						<?php
					}
					?>

					<?php
					if($pack['CV_ACCESSIBLE'] == 10){
						?>
						<li class="cool gras">Votre C.V affichera le maximum d'informations aux Organisateurs le consultant.</li>
						<?php
						}else if($pack['CV_ACCESSIBLE'] > 8){
						?>
						<li></li>
						<?php
						}else if($pack['CV_ACCESSIBLE'] > 6){
						?>
						<li></li>
						<?php
						}else if($pack['CV_ACCESSIBLE'] > 4){
						?>
						<li class="cool">Quiconque consultera votre C.V trouvera probablement toutes les informations dont il a besoin.</li>
						<?php
						}else if($pack['CV_ACCESSIBLE'] > 2){
						?>
						<li class="bad gras">Votre C.V permettra d'afficher tout un tas d'informations intéressantes.</li>
						<?php
						}else if($pack['CV_ACCESSIBLE'] > 0){
						?>
						<li class="bad">Votre C.V affichera quelques informations utiles aux Organisateur le consultant.</li>
						<?php
						}else{
						?>
						<li class="alert">Votre C.V affichera le minimum d'informations aux Organisateur le consultant.</li>
						<?php
					}
					?>
					<?php
					if($pack['NB_FICHES_VISITABLES'] > 1000){
					?>
						<li class="cool gras souligne">Vous pourrez visiter un nombre illimité d'annonces&nbsp;!</li>
					<?php
					}else{
					?>
						<li class="gras">Vous pourrez visiter jusqu'à <?php echo $pack['NB_FICHES_VISITABLES'] ?> annonces.</li>
					<?php
					}
					if($pack['CV_VIDEO_ACCESSIBLE']){
					?>
						<li class="cool">Les personnes consultant votre C.V pourront voir votre C.V vidéo.</li>
					<?php
					}else{
					?>
						<li class="bad">Les personnes consultant votre C.V ne pourront pas voir votre C.V vidéo.</li>
					<?php
					}
					
					if($pack['ALERTE_NON_DISPONIBILITE']){
					?>
						<li class="cool">Lors d'une annulation de contrat de la part d'un autre artiste habitant dans les départements que vous surveillez, vous serez automatiquement prévenu.</li>
						<li class="cool">Vous pourrez surveiller jusqu'à <?php echo $pack['NB_DEPARTEMENTS_ALERTE'] ?> départements.</li>
					<?php
					}else{
					?>
						<li class="bad">Vous ne bénéficierez pas du service d'alerte en cas d'annulation de contrat par un autre artiste dans les départements que vous surveillez.</li>
					<?php
					}
					
					if($pack['PARRAINAGE_ACTIVE']){
					?>
						<li class="cool">Vous pourrez parrainer vos amis afin de bénéficier de réductions à chaque fois qu'ils achèteront un pack.</li>
					<?php
					}else{
					?>
						<li class="bad">Vous ne pourrez pas parrainer vos amis et donc n'aurez accès qu'à très peu de réductions possibles.</li>
					<?php
					}
					
					if($pack['PREVISUALISATION_FICHES']){
					?>
						<li class="cool">Vous pourrez prévisualiser les annonces ce qui vous permettra de connaître certaines informations sans pour autant diminuer votre quota d'annonces visitables.</li>
					<?php
					}else{
					?>
						<li class="bad">Vous ne pourrez pas prévisualiser les annonces et de ce fait devrez les consulter afin de prendre connaissance de la moindre information ce qui diminuera votre quota d'annonces visitables.</li>
					<?php
					}
					
					if($pack['CONTRATS_PDF']){
					?>
						<li class="cool">Vous pourrez récupérer tous vos contrats sous format .pdf tout simplement.</li>
					<?php
					}else{
					?>
						<li class="bad">Vous ne pourrez pas récupérer vos contrats sous format .pdf.</li>
					<?php
					}
					
					if($pack['SUIVI']){
					?>
						<li class="cool">Vous bénéficierez d'un suivi automatisé afin d'avoir une vue globale des vos dépenses et gains.</li>
					<?php
					}else{
					?>
						<li class="bad">Vous ne bénéficirez pas d'un suivi automatique et n'aurez pas accès à vos statistiques.</li>
					<?php
					}
					
					if($pack['PUBS']){
					?>
						<li class="bad">Toutes les publicités seront activées.</li>
					<?php
					}else{
					?>
						<li class="cool">Aucune publicité ne viendra vous déranger durant votre navigation sur le site</li>
					<?php
					}
					?>
				</ul>
				<br />
				<?php
				/*
				* 	action --> Dirige vers paypal. /!\ Ne pas oublier de virer le sandbox pour le vrai script.
				*	amount: Somme à payer.
				*	currency_code: Type de monnaie.
				*	shipping: Frais de port.
				*	tax: Taxe.
				*	return: Page sur laquelle est redirigé l'utilisateur à la fin du paiement. (Bravo vous avez réussi !)
				* 	cancel_return: Page sur laquelle est redirigé l'utilisateur si le paiement est annulé.
				*	notify_url: Notification instantanée de Paiement (IPN). /!\ Hyper important.
				*	cmd: Le type de commande, ne pas modifier.
				*	business: Nom du compte qui va recevoir l'argent.
				*	item_name: Le nom de l'item vendu.
				*	no_note: 
				*	lc:	
				*	bn:
				*	custom: Toutes nos propres variables --> id_personne, id_pack
				*/
				?>
				<center>
					<?php
					if($pack['SOUMIS_REDUCTIONS_PARRAINAGE'] == true && $pack['VISIBLE'] == true && $pack['beneficie_reduction'] == true){
					?>
						<?php
						if($pack['nouvelle_reduction'] > 0){
						?>
							Vous bénéficiez de la réduction suivante sur ce pack:<br />
							Total de réduction sur le pack: <b class="cool gras"><?php echo $pack['nouvelle_reduction']; ?>%.</b><br />
							Prix <span class="petit">(Avec réduction)</span>: <b class="cool"><?php echo $pack['nouveau_prix']; ?>€</b><br />
							<br />
							Soit une réduction <b class="cool">de <?php echo $pack['economie']; ?>€ !</b><br />
						<?php
						}else{
						?>
							<span class="orange petit">Vous ne bénéficiez actuellement d'aucune réduction, <a href="<?php echo $oCL_page->getPage('lien_parrainage'); ?>">parrainez</a> pour en obtenir gratuitement !</span><br />
							<br />
						<?php
						}
						?>
					<?php
					}
					?>
					<label for="activer_pack_maintenant">Activer le pack dès maintenant&nbsp;</label><input onclick="maj_formulaire_paiement('custom', '<?php echo $_SESSION['compte']['ID_PERSONNE']; ?>', '<?php echo $pack['ID_PACK']; ?>');" type="checkbox" name="activer_pack_maintenant" id="activer_pack_maintenant" <?php if($_SESSION['pack']['PRIX_BASE'] < $pack['PRIX_BASE']){echo "checked='checked'";} ?> /><br />
						<br />
					<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
						<input name="amount" type="hidden" value="<?php if(isset($pack['nouveau_prix']) && !empty($pack['nouveau_prix'])){echo $pack['nouveau_prix'];}else{echo $pack['PRIX_BASE'];} ?>" />
						<input name="currency_code" type="hidden" value="EUR" />
						<input name="shipping" type="hidden" value="0.00" />
						<input name="tax" type="hidden" value="0.00" />
						<input name="return" type="hidden" value="<?php echo $oCL_page->getPage('achat_pack_ok', 'absolu'); ?>" />
						<input name="cancel_return" type="hidden" value="<?php echo $oCL_page->getPage('achat_pack_annule', 'absolu'); ?>" />
						<input name="notify_url" type="hidden" value="<?php echo $oCL_page->getPage('IPN', 'absolu'); ?>" />
						<input name="cmd" type="hidden" value="_xclick" />
						<input name="business" type="hidden" value="<?php echo $oCL_page->getConfig('compte_credite'); ?>" />
						<input name="item_name" type="hidden" value="<?php echo $pack['NOM']; ?>" />
						<input name="no_note" type="hidden" value="1" />
						<input name="lc" type="hidden" value="FR" />
						<input name="bn" type="hidden" value="PP-BuyNowBF" />
						<input id="custom" name="custom" type="hidden" value="id_personne=<?php echo $_SESSION['compte']['ID_PERSONNE']; ?>&id_pack=<?php echo $pack['ID_PACK']; ?>&duree=1&activer_pack_maintenant=0" />
						<br />
						<input type="image" src="<?php echo $oCL_page->getImage('paypal_boutons'); ?>" title="Acheter le forfait <?php echo $pack['NOM']; ?> (Via Paypal)" alt="Acheter le forfait <?php echo $pack['NOM']; ?> (Via Paypal)">
					</form>
					<span class="petit cool gras">Vous serez redirigé vers PayPal pour cette transaction, vous pouvez payer <u>via tous les moyens de paiement acceptés par PayPal</u>.<br />
					La transaction bancaire est <u>assurée</u> par <u>PayPal</u> et est <u>sécurisée</u>.</span>
				</center>
				<br />
			</div>
			<div class="textboxbottom"></div>
		</div>
		<br />
		<br />
	<?php
	}# Fin du foreach des packs.
	?>
	

<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	?>
	<h2>Page d'activation des comptes:</h2>

	Voici une liste de tous les comptes qui ont été crées sur une IP déjà utilisée.<br />
	En général il y aura autant d'IP que d'IP cookie. Si jamais il y a plus d'IP cookie que d'IP alors c'est que le membre change d'IP (box) sans vider ses cookies.<br />
	Dans ce cas, si l'IP est différente de celle du cookie alors la ligne devient rouge.<br />
	<br />
	<table width="100%" border="0" cellspacing="1" cellpadding="1">
	  <tr class="valide">
			<th width="15%" scope="col">Pseudo</th>
			<th width="15%" scope="col">IP</th>
			<th width="15%" scope="col">IP <span class="petit">(cookie)</span></th>
			<th width="30%" scope="col">Date de création</th>
			<th width="5%" scope="col">Activer</th>
			<th width="5%" scope="col">Bannir</th>
	    </tr>
	<?php
	foreach($comptes_inactifs as $key=> $compte_inactif){
		if($compte_inactif['VALIDE'] == true){
			echo "<span class='alert'>";# Couleur d'alerte si un compte possède encore une clé d'activation en étant valide.
		}
	?>
		<tr><td colspan="6"><br /><hr /></td></tr>
		<tr <?php if($compte_inactif['ID_IP'] != $compte_inactif['IP_COOKIE']){echo "class='alert'";}else{echo "class='valide'";} ?>>
			<th><span title="ID_PERSONNE: N°<?php echo $compte_inactif['ID_PERSONNE']; ?>"><a href="<?php echo $oCL_page->getPage('modifier_fiche_membre')."?id_personne=".$compte_inactif['ID_PERSONNE']; ?>"><?php echo $compte_inactif['PSEUDO']; ?></a></span></th>
			<th><?php echo $compte_inactif['ID_IP']; ?></th>
			<th><?php echo $compte_inactif['IP_COOKIE']; ?></th>
			<th title="<?php echo $compte_inactif['DATE_CONNEXION']; ?>"><?php echo $compte_inactif['DATE_CONNEXION_simple']; ?></th>
			<th>
				<a href="<?php echo $oCL_page->getPage('inscription', 'absolu')."?email=".$compte_inactif['EMAIL']."&cle_activation=".$compte_inactif['CLE_ACTIVATION']; ?>"><img src="images/ok.gif" alt="" title="" /></a>
			</th>
			<th><a href="<?php echo $oCL_page->getPage('bannir_membre'); ?>?id_personne=<?php echo $compte_inactif['ID_PERSONNE']; ?>"><img src="images/supprimer_personne_petit.png" alt="Bannir <?php echo $compte_inactif['PSEUDO']; ?>" title="Bannir <?php echo $compte_inactif['PSEUDO']; ?>" /></a></th>
		</tr>
		<tr><td colspan="6">Liste des IP du compte <?php echo $compte_inactif['PSEUDO']; ?>: <span class="valide">(IP simple)</span></td></tr>
		<?php
		$infos_ID_IP = fx_recuperer_infos_by_ID_IP($compte_inactif['ID_IP']);
		$infos_IP_COOKIE = fx_recuperer_infos_by_IP_COOKIE($compte_inactif['IP_COOKIE']);
		foreach($infos_ID_IP as $key2=>$info_ID_IP){
			# On traite les données.
			$info_ID_IP['DATE_CONNEXION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($info_ID_IP['DATE_CONNEXION'], true, false, 'en', 'fr'), true, 'fr');
			$info_ID_IP['DATE_CONNEXION_simple'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($info_ID_IP['DATE_CONNEXION'], true, false, 'fr', 'fr'), true, 'fr', true, false, true);
			
			if($info_ID_IP['ID_PERSONNE'] != $compte_inactif['ID_PERSONNE']){
		?>
				<tr <?php if($info_ID_IP['ID_IP'] != $info_ID_IP['IP_COOKIE']){echo "class='alert'";}else{echo "class='petit'";} ?>>
					<th><span title="ID_PERSONNE: N°<?php echo $info_ID_IP['ID_PERSONNE']; ?>"><?php echo $info_ID_IP['PSEUDO']; ?></span></th>
					<th><?php echo $info_ID_IP['ID_IP']; ?></th>
					<th><?php echo $info_ID_IP['IP_COOKIE']; ?></th>
					<th title="<?php echo $info_ID_IP['DATE_CONNEXION']; ?>"><?php echo $info_ID_IP['DATE_CONNEXION_simple']; ?></th>
					<th><?php if($info_ID_IP['VISIBLE'] == true){echo "Activé";}else{echo "Inactif";} ?></th>
					<?php if($info_ID_IP['ID_IP'] != $info_ID_IP['IP_COOKIE']){echo "<th>/!\</th>";} ?>
				</tr>
		<?php
			}
		}# Fin du foreach infos_ID_IP
		?>
		<tr><td colspan="6">Liste des IP du compte <?php echo $compte_inactif['PSEUDO']; ?>: <span class="alert">(IP par cookie)</span></td></tr>
		<?php
		foreach($infos_IP_COOKIE as $key2=>$info_IP_COOKIE){
			# On traite les données.
			$info_IP_COOKIE['DATE_CONNEXION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($info_IP_COOKIE['DATE_CONNEXION'], true, false, 'en', 'fr'), true, 'fr');
			$info_IP_COOKIE['DATE_CONNEXION_simple'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($info_IP_COOKIE['DATE_CONNEXION'], true, false, 'fr', 'fr'), true, 'fr', true, false, true);
			
			if($info_IP_COOKIE['ID_PERSONNE'] != $compte_inactif['ID_PERSONNE']){
		?>
				<tr <?php if($info_IP_COOKIE['ID_IP'] != $info_IP_COOKIE['IP_COOKIE']){echo "class='alert'";}else{echo "class='petit'";} ?>>
					<th><span title="ID_PERSONNE: N°<?php echo $info_IP_COOKIE['ID_PERSONNE']; ?>"><?php echo $info_IP_COOKIE['PSEUDO']; ?></span></th>
					<th><?php echo $info_IP_COOKIE['ID_IP']; ?></th>
					<th><?php echo $info_IP_COOKIE['IP_COOKIE']; ?></th>
					<th title="<?php echo $info_ID_IP['DATE_CONNEXION']; ?>"><?php echo $info_IP_COOKIE['DATE_CONNEXION_simple']; ?></th>
					<th><?php if($info_IP_COOKIE['VISIBLE'] == true){echo "Activé";}else{echo "Inactif";} ?></th>
					<?php if($info_IP_COOKIE['ID_IP'] != $info_IP_COOKIE['IP_COOKIE']){echo "<th>/!\</th>";} ?>
				</tr>
		<?php
			}
		}# Fin du foreach infos_IP_COOKIE
		if($compte_inactif['VALIDE'] == true){
			echo "</span>";
		}
	}# Fin du foreach
		?>
	</table>









<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

?>
<h2>Administration:</h2>

Vous êtes dans l'interface d'administration de LiveAnim.<br />
Les menus à gauches vous proposent les diverses parties que vous pouvez administrer.<br />





<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_ajouter_news.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Publier une news:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['ajouter_news']['message']) && $_SESSION['ajouter_news']['message_affiche'] == false){
		echo $_SESSION['ajouter_news']['message'];
		$_SESSION['ajouter_news']['message_affiche'] = true;
	}
	$formulaire = "ajouter";
	require_once('include_form_ajouter_modifier_news.php');

?>
	
	

<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Créer un nouveau Pack:</h2><br />
	<br />
	<?php
		require_once('include_form_ajouter_pack.php');
	?>
	
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Ajouter une pub:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['ajouter_pub']['message']) && $_SESSION['ajouter_pub']['message_affiche'] == false){
		echo $_SESSION['ajouter_pub']['message'];
		$_SESSION['ajouter_pub']['message_affiche'] = true;
	}
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Ajouter une pub:&nbsp;</legend><br />
		<br />
		<?php
		$formulaire = "Ajout";
		require_once('include_form_ajouter_modifier_pub.php');
		?>
		<br />
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
?>	
	<h2><?php echo $annonce_courante[0]['TITRE'] ?></h2><br />
	<?php
	if(isset($_SESSION['annonce']['message']) && $_SESSION['annonce']['message_affiche'] == false){
		echo $_SESSION['annonce']['message'];
		$_SESSION['annonce']['message_affiche'] = true;
	}
	?>
	<?php
	if($id_annonce_ok){# On affiche le contenu de l'annonce.
	?>
		<?php
		if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
		?>
		<br />
		<fieldset class="padding_LR"><legend class="legend_basique">Modération</legend><br />
			<br />
			<center>
				<a href="<?php echo $oCL_page->getPage('modifier_fiche_annonce_by_admin')."?id_annonce=".$annonce_courante[0]['ID_ANNONCE']; ?>">Modifier l'annonce.</a><br />
			</center>
			<br />
		</fieldset>
		<?php
		}
		?>
		<br />
		<?php
		# Si c'est la personne qui a crée l'annonce qui regarde l'annonce alors il peut la passer goldlive.
		if($_SESSION['compte']['ID_PERSONNE'] == $annonce_courante[0]['ID_PERSONNE']){
			# Si l'annonce n'est pas déjà goldlive
			if(!$annonce_courante[0]['GOLDLIVE']){
				require_once('include_acheter_annonce_goldlive.php');
			}else{
				echo "<center class='rose'>Cette annonce possède le statut GOLDLIVE et est donc placée en tête des résultats de recherche&nbsp;!</center><br /><br />";
			}
		}
		echo "<br /><br />";
		?>

		<fieldset class="padding_LR"><legend class="legend_basique">Informations relative à l'annonce</legend><br />
			<br />
			<center>
				<span class="rose">Cette annonce a été créée le <b><?php echo $annonce_courante[0]['DATE_ANNONCE']; ?></b>.</span><br />
				<br />
				<span class="rose"><u>Évènement:</u></span> <b><?php echo $annonce_courante[0]['TYPE_ANNONCE'] ?></b>.<br />
				<br />
				La représentation débute le <b><?php echo $annonce_courante[0]['DATE_DEBUT'] ?></b> et se termine le <b><?php echo $annonce_courante[0]['DATE_FIN'] ?></b>.<br />
				<br />
				<span class="rose">Le budget initial prévu est de <b><?php echo $annonce_courante[0]['BUDGET'] ?>€.</b></span><br />
				<?php
				if($annonce_courante[0]['NB_CONVIVES'] != 0){
				?>
					<span class="rose">La représentation se fera devant <b><?php echo $annonce_courante[0]['NB_CONVIVES'] ?> personnes.</b></span><br />
				<?php
				}else{
				?>
					<span class="petit">(Le nombre d'invité n'a pas été précisé)</span><br />
				<?php
				}
				?>
				<br />
			</center>
			<div class="justify">
				<span class="rose"><u>Description:</u></span><br />
				<?php echo $annonce_courante[0]['DESCRIPTION'] ?><br />
				<br />
				<span class="rose"><u>Artistes recherchés:</u></span><br />
				<?php echo $annonce_courante[0]['ARTISTES_RECHERCHES'] ?><br />
			</div>
			<br />
			<?php
			if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin" || $_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire"){
			?>
				<center>
					Cette annonce vous intéresse ? Faites un <b>contrat</b> !<br />
					<a <?php if (!$_SESSION['compte']['connecté']){echo ""; }else{ ?> href="<?php echo $oCL_page->getPage('creer_contrat')."?id_annonce=".$annonce_courante[0]['ID_ANNONCE']; ?>" <?php } ?>>Faire un contrat</a><br />
					<br />
				</center>
			<?php
			}
			?>
		</fieldset>
		<br />
		<br />
		<fieldset style="" class="padding_LR"><legend class="legend_basique">Informations supplémentaires:</legend><br />
		<br />
		<b><u>Trajet entre vous et le lieu de prestation:</u></b><br />
		<br />
		<input type="hidden" name="origin" id="origin" value="<?php echo $personne_courante[0]['ADRESSE'].", ".$personne_courante[0]['CP']." ".$personne_courante[0]['VILLE']; ?>" />
		<?php
		if($afficher_infos_contact){
		?>
		<input type="hidden" name="destination" id="destination" value="<?php echo $annonce_courante[0]['ADRESSE'].", ".$annonce_courante[0]['CP']." ".$annonce_courante[0]['VILLE']; ?>" />
		<?php
		}else{
		?>
		<input type="hidden" name="destination" id="destination" value="<?php echo $annonce_courante[0]['CP']." ".$annonce_courante[0]['VILLE']; ?>" />
		<?php
		}
		?>
		<div id="map" style="position:relative;height:400px;width:100%;">
		
		</div>
		<br />
		<div id="map_infos">
			<br />
			<span class="rose">La carte officielle avec d'autres options.<span class="petit"> (impression, chemin le moins cher, etc...)</span>:</span><br />
			<center>
				<a href="http://maps.google.fr/maps?f=d&source=s_d&saddr=<?php echo $personne_courante[0]['ADRESSE']; ?>,+<?php echo $personne_courante[0]['VILLE']; ?>&daddr=<?php echo $annonce_courante[0]['VILLE']; ?>">Carte officielle !</a>
			</center>
			<br />
		</div>
		<div id="map_erreur">
		
		</div>
		<script type="text/javascript">
			initialiser_GMap();
			calculate();
			verifier_donnees();
		</script>
		</fieldset>
	<?php
	}else{
		echo "<span class='orange'>Cette annonce est invalide, réessayez.</span>";
	}
	?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_annonce.php');
require_once('couche_metier/PCS_contrat.php');
require_once('couche_metier/PCS_personne.php');
require_once('couche_metier/PCS_types.php');
require_once('couche_metier/CL_date.php');

$oMSG = new MSG();
$oPCS_annonce = new PCS_annonce();
$oPCS_contrat = new PCS_contrat();
$oPCS_personne = new PCS_personne();
$oPCS_types = new PCS_types();
$oCL_date = new CL_date();

$oMSG->setData('VISIBLE', 1);
$oMSG->setData('STATUT', 'Validée');
$oMSG->setData('criteres', 'AND annonce.DATE_DEBUT > NOW()');

$oMSG->setData('nb_result_affiches', 5);
$oMSG->setData('debut_affichage', 0);

$annonces_ = $oPCS_annonce->fx_recuperer_annonces_par_criteres($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);

# On met en forme les données:
foreach($annonces_ as $key=>$annonce){
	# Les dates:
	$annonces_[$key]['DATE_DEBUT'] = $oCL_date->fx_ajouter_date($annonce['DATE_DEBUT'], true, false, 'en', 'fr');
	$annonces_[$key]['DATE_DEBUT_simple'] = split(' ',$oCL_date->fx_convertir_date($annonce['DATE_DEBUT'], true));
	$annonces_[$key]['DATE_DEBUT_simple'] = $annonces_[$key]['DATE_DEBUT_simple'][0];
	
	$annonces_[$key]['DATE_FIN'] = $oCL_date->fx_ajouter_date($annonce['DATE_FIN'], true, false, 'en', 'fr');
	$annonces_[$key]['DATE_FIN_simple'] = split(' ',$oCL_date->fx_convertir_date($annonce['DATE_FIN'], true));
	$annonces_[$key]['DATE_FIN_simple'] = $annonces_[$key]['DATE_FIN_simple'][0];
	
	$annonces_[$key]['DATE_ANNONCE'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($annonce['DATE_FIN'], true, false, 'en', 'fr'), true, 'fr');
	
}

?>
<h3>Annonces GOLD</h3>
	<?php
	foreach($annonces_ as $key=>$annonce){
	?>
		<div class="padding_LR">
			<img class="fleft" width="150px" height="120px" alt="Image annonce" src="<?php echo $oCL_page->getImage('disco1'); ?>" />
			<div class="fleft" style="padding: 0 10px 0 10px;color:#F300FF">Annonce postée le <?php echo $annonce['DATE_ANNONCE'] ?>.</div><br />
			<b style="padding-left:5%"><u><a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce['ID_ANNONCE']; ?>"><?php echo $annonce['TITRE']; ?></a></u></b><br />
			<br />
			<div style="padding-left:30%;padding-right:10px;"><?php echo substr($annonce['DESCRIPTION'], 0, 100)." ..."; ?></div><br />
			<div style="padding-left:80%;padding-right:10px;"><a  title="Les détails de l'annonce dépendront de votre pack si vous êtes un artiste. Les organisateurs n'ont accès qu'au strict minimum." href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce['ID_ANNONCE']; ?>" class="link3">Voir l'annonce</a></div><br/>
			<br class="clear" />
		</div>
	<?php
	}
	?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Annonces débloquées:</h2><br />
	<br />
	Voici toutes les annonces que vous avez débloqué. Vous pouvez les consulter sans limite.<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Liste&nbsp;des&nbsp;annonces&nbsp;que&nbsp;vous&nbsp;avez&nbsp;visité:&nbsp;</legend>
		<table width="100%">
			<?php
			if(is_array($_SESSION['compte']['annonces_visitées'])){
			?>
				<tr height="50" class="formulaire">
					<th>Titre de l'annonce&nbsp;:</th>
					<th>Date&nbsp;:</th>
				</tr>
			<?php 
				foreach($annonces as $key=>$annonce){
				?>
					<tr><th colspan="2"><hr /></th></tr>
					<tr>
						<th><a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce['ID_ANNONCE']; ?>"><?php echo $annonce['TITRE']; ?></a></th>
						<th><?php echo $annonce['DATE_ANNONCE']; ?></th>
					</tr>
				<?php
				}
			}else{
				echo "<tr><th colspan='2'><br /></th></tr><tr><th><span class='orange petit'>Vous n'avez pas encore débloqué d'annonce.</span></th></tr>";
			}
			?>
		</table>
		<br />
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once ('couche_metier/MSG.php');
require_once ('couche_metier/PCS_personne.php');
require_once ('couche_metier/CL_date.php');

$oMSG = new MSG();
$oPCS_personne = new PCS_personne();
$oCL_date = new CL_date();

# On récupère tous les artistes qui possèdent un pack par ordre de pack.

$oMSG->setData('VISIBLE', 1);
$oMSG->setData('TYPE_PERSONNE', 'Prestataire');

$artistes_premium = $oPCS_personne->fx_recuperer_artistes_premium($oMSG)->GetData(1)->fetchAll(PDO::FETCH_ASSOC);

# Mise en forme des variables.
foreach($artistes_premium as $key=>$artiste_premium){
	$artistes_premium[$key]['ROLE_simple'] = explode(',', $artiste_premium['ROLES']);
	
	if(count($artistes_premium[$key]['ROLE_simple']) > 0){
		if(count($artistes_premium[$key]['ROLE_simple']) == 1){
			$artistes_premium[$key]['ROLE_simple'] = $artistes_premium[$key]['ROLE_simple'][0];
		}else{
			$artistes_premium[$key]['ROLE_simple'] = $artistes_premium[$key]['ROLE_simple'][0].", ...";
		}		
	}else{
		$artistes_premium[$key]['ROLE_simple'] = "<span class='petit gris'>Pas de rôle renseigné...</span>";
	}
}

# Préparation à l'autogénération. (Ca va être COMIQUE !) -> Ce fut comique =D
$div_slide = Array();
$nb_artistes = count($artistes_premium);
$int_div = 0;
$i = 0;


foreach($artistes_premium as $key=>$artiste_premium){
	$div_slide[$int_div][$i] = $artiste_premium;
	$i++;
	if($i == 6){# Défini le nombre d'affichage par série. (3 gauche + 3 droite)
		$i = 0;
		$int_div++;
	}
}
?>
<div class="section">
	<h2>LES ARTISTES PREMIUM</h2>
	  <!-- newsSlider begin -->
	<div id="newsSlider">
		<div class="container">
			<div class="slides">
				<?php
				foreach($div_slide as $key_div=>$div){
				$binaire = true;# Va nous permettre de compter le <li>
				?>
					<div class="slide">
						<ul class="topics">
							<?php
							foreach($div as $key_ul=>$ul){
								# On récupère la date de création du compte.
								$oMSG->setData('ID_PERSONNE', $ul['ID_PERSONNE']);
								
								$personne = $oPCS_personne->fx_recuperer_date_creation_compte_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
								$personne[0]['DATE_CONNEXION'] = $oCL_date->fx_ajouter_date($personne[0]['DATE_CONNEXION'], false, false, 'en', 'fr');
								
								# On met en forme les rôles.
								$personne[0]['ROLES'] = trim(str_replace(',', ', ', $ul['ROLES']));
								$personne[0]['ROLES'][strlen($personne[0]['ROLES'])-1] = " ";
							?>
								<li <?php if($binaire){echo "class='alt'";} ?>>
								   <a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$ul['ID_PERSONNE']; ?>"><img width="93px" height="117px" alt="Photo de l'artiste." src="<?php if(isset($ul['URL_PHOTO_PRINCIPALE']) && !empty($ul['URL_PHOTO_PRINCIPALE'])){echo $ul['URL_PHOTO_PRINCIPALE'];}else if($ul['CV_ACCESSIBLE'] > 4){echo $oCL_page->getImage('casque_or');}else if($ul['CV_ACCESSIBLE'] > 2){echo $oCL_page->getImage('casque_argent');}else{echo $oCL_page->getImage('casque_blanc');} ?>" /></a>
								   <h5><?php if(isset($_SESSION['pack']['CV_ACCESSIBLE']) && $_SESSION['pack']['CV_ACCESSIBLE'] >= 2){echo $ul['PSEUDO'];}else{echo "Membre N°".$ul['ID_PERSONNE'];} ?></h5> 
								   <p title="<?php echo $personne[0]['ROLES']; ?>"><?php echo $ul['ROLE_simple']; ?></p>
								   <p><a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$ul['ID_PERSONNE']; ?>" class="link2">Voir son CV</a></p>
								   <span style="color:#000000;opacity:0.3;">Inscrit le <?php echo $personne[0]['DATE_CONNEXION']; ?></span>
								</li>
							<?php
								# on modifie l'état du binaire.
								if($binaire){
									$binaire = false;
								}else{
									$binaire = true;
								}
							}
							?>
						</ul>
					</div>
				<?php
				}
				?>
			</div>
		</div>
		<?php
		if($nb_artistes >= 7){
		?>		
			<a href="#" class="previous"></a><a href="#" class="next"></a>
		<?php
		}
		?>
	</div>
</div><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){

	if(isset($_GET['id_personne'])){
		$ID_PERSONNE = (int)$_GET['id_personne'];
	}
?>
		<h2>Bannir un membre:</h2>
		<br />
		<br />
		Vous pouvez effectuer un bannissement temporaire ou définitif du membre sélectionné. <br />
		<span class='petit'>(Date de fin de bannissement proche de 2020 si définitif.)</span><br />
		<br />
		
		<fieldset><legend class="legend_basique">Formulaire de bannissement d'un membre.</legend>
			<form class="formulaire" action="script_bannissement_membre.php" method="post" id="form_bannissement" name="form_bannissement"><br />
				<?php
					if(isset($_SESSION['bannir_membre']['message']) && $_SESSION['bannir_membre']['message_affiche'] == false){
						echo $_SESSION['bannir_membre']['message'];
						$_SESSION['bannir_membre']['message_affiche'] = true;
					}
				?>
				
				<br />
				Choisissez le membre à modérer:<br />
				<select id="form_bannissement_id_personne" name="form_bannissement_id_personne">
					<?php
					var_dump($membres);
					foreach($membres as $key=>$membre){
					?>
						<option value="<?php echo $membre['ID_PERSONNE']; ?>" <?php if(isset($ID_PERSONNE) && $ID_PERSONNE == $membre['ID_PERSONNE']){echo "selected='selected'";} ?>><?php echo $membre['PSEUDO']; ?></option>
					<?php
					}
					?>
				</select>
				<br />
				<br />
				
				<label for="form_bannissement_personne_supprimee">Ban définitif:&nbsp;</label><input type="checkbox" name="form_bannissement_personne_supprimee" id="form_bannissement_personne_supprimee" />
				<br />
				<br />
				
				<label for="form_bannissement_duree">Durée: <span class="petit">(En jours)</span></label><br />
				<input type="text" name="form_bannissement_duree" id="form_bannissement_duree" size="5" /><span class="petit">&nbsp;(Inutile si ban définitif)</span>
				<br />
				<br />
				
				
				
				<label for="form_bannissement_raison">Raison du bannissement:</label><br />
				<textarea id="form_bannissement_raison" name="form_bannissement_raison" cols="80" rows="8">Vous avez été banni par notre service de modération pour la raison suivante: </textarea><br />
				<br />
				
				<center>
					<a><img src="images/previsualiser.jpg" alt="Prévisualiser" onclick="fx_previsualiser('form_bannissement_raison', 'preview');" /></a>
				</center>
				<br />
					<p id="preview">
					
					</p>
				<center>
					<input type="image" id="btn_form_bannissement_valider" name="btn_form_bannissement_valider" src="images/valider2.png" />
				</center>
			</form>
		</fieldset>
		

<?php	
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Changer le rang:</h2><br />
	<br />
	<?php
		if(isset($_SESSION['administration']['message_affiche']) && $_SESSION['administration']['message_affiche'] == false){
			echo $_SESSION['administration']['message'];
			$_SESSION['administration']['message_affiche'] = true;
		}
	?>
	<br />
	<fieldset><legend class="legend_basique">Formulaire de modification du rang:</legend><br />
		<br />
		<form class="formulaire" action="script_changer_rang.php" method="post" id="" name="">
			Login/Pseudo du membre à modifier:<br />
			<input type="text" class="my_input" name="form_changer_rang_pseudo" id="form_changer_rang_pseudo" /><br />
			<br />
			
			Sélectionnez son nouveau rang:<br />
			<select class="my_input" name="form_changer_rang_type_personne" id="form_inscription_type_personne">
				<option value="Prestataire" <?php if(isset($_SESSION['changer_rang']['type_personne'])){ if($_SESSION['changer_rang']['type_personne'] == "Prestataire"){echo "selected='selected'";}} ?>>Prestataire / Artiste</option>
				<option value="Organisateur" <?php if(isset($_SESSION['changer_rang']['type_personne'])){ if($_SESSION['changer_rang']['type_personne'] == "Organisateur"){echo "selected='selected'";}} ?>>Organisateur de soirée</option>
				<option value="Admin" <?php if(isset($_SESSION['changer_rang']['type_personne'])){ if($_SESSION['changer_rang']['type_personne'] == "Admin"){echo "selected='selected'";}} ?>>Admin</option>
			</select><br />
			<br />
			<center>
				<input type="image" src="images/valider.png" id="btn_form_changer_rang_valider" name="btn_form_changer_rang_valider" />
			</center>
		</form>
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Liste des comptes supprimés par les utilisateurs:</h2><br />
	<br />
	Tous les comptes suivants ont été supprimés par leur propriétaire - ou un tiers autre que notre administration -, connaître la raison de la suppression peut vous aider dans vos relations clients.<br />
	Vous pouvez contacter les membres en questions si vous pensez que la raison qu'ils ont donnée n'est pas valable dans le but de les faire changer d'avis.<br />
	Notez que les comptes ne sont supprimés que deux mois après leur date de suppression, ils peuvent donc récupérer toutes leurs informations sans perte de données.<br />
	<br />

	<table width="100%" border="0" cellspacing="1" cellpadding="1">
		<tr class="valide">
			<th width="20%" scope="col">Pseudo:</th>
			<th width="20%" scope="col">Infos:</th>
			<th width="20%" scope="col">Téléphone(s):</th>
			<th width="40%" scope="col">Raison:</th>
		</tr>
		<tr><th colspan="4"><hr /></th></tr>
		<?php
		while($compte_supprime = $comptes_supprimes->fetch(PDO::FETCH_ASSOC)){
		?>
			<tr>
				<th><span title="<?php echo "ID N°".$compte_supprime['ID_PERSONNE']; ?>"><a href="<?php echo $oCL_page->getPage('modifier_fiche_membre')."?id_personne=".$compte_supprime['ID_PERSONNE']; ?>"><?php echo $compte_supprime['PSEUDO']; ?></a></span></th>
				<th><?php echo $compte_supprime['CIVILITE']." ".$compte_supprime['NOM']." ".$compte_supprime['PRENOM']."<br />".$compte_supprime['EMAIL']; ?></th>
				<th><?php echo $compte_supprime['TEL_FIXE']."<br />".$compte_supprime['TEL_PORTABLE'] ?></th>
				<th><?php echo $compte_supprime['RAISON_SUPPRESSION']; ?></th>
			</tr>
			<tr><th colspan="4"><hr /></th></tr>
		<?php
		}
		?>
	</table>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><div class="padding_LR">
	Vous êtes artiste ou organisateur, nous vous mettons en relation en un clic. 
	<br />Nous nous occupons de tout à moindre coût.</div>
<div class="adv-zzz">
	<?php
	if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin" || $_SESSION['compte']['PSEUDO'] == "Vadorequest"){
		echo "<h6><a href='".$oCL_page->getPage('administration')."'>Administration</a></h6>";	
	}else{
		echo "<br />";
	}
	
	if($_SESSION['compte']['connecté'] == true){
	?>
		
		Salut <?php echo $_SESSION['compte']['PSEUDO']; ?><br />
		<br />
		<h4><form action="<?php echo $oCL_page->getPage("gestion_compte"); ?>" method="post"><input type="image" src="<?php echo $oCL_page->getImage('mon_compte'); ?>" alt="Accéder à mon compte" title="Accéder à mon compte" /></form></h4>
		
		<a class="fright" style="padding-right:45px;" href="<?php echo $oCL_page->getPage("deconnexion.php"); ?>" >Déconnexion</a>
	<?php
	}else if($_SESSION['compte']['connecté'] == false){
	?>
		<!-- <a href="script_connexion_facebook.php"><img alt="Connectez vous depuis facebook !" title="Connectez vous depuis facebook !" src="<?php #echo $oCL_page->getImage('facebook'); ?>"></a> -->
		<form action="script_connexion.php" method="post" id="form_connexion" name="form_connexion">
			<br />
			<table border="0" cellspacing="1" cellpadding="3">
			<tr>
				<td align="left" width="36%"><b>Pseudo</b>&nbsp;:</td>
				<td width="40%">
					<input size="12" type="text" name="form_connexion_pseudo" id="form_connexion_pseudo" size="15" maxlength="20" tabindex="1" autofocus="1"  />
				</td>
				<td width="24%" rowspan="2">&nbsp;<input type="image" height="32px" width="32px" src="<?php echo $oCL_page->getImage('valider2'); ?>" alt="Connexion" title="Connexion" id="btn_form_connexion_valider" name="btn_form_connexion_valider" value="Envoyer" tabindex="3" /></td>			</tr>
			<tr>
				<td align="left"><b>Mot&nbsp;de&nbsp;passe</b>&nbsp;:</td>
				<td>
					<input size="12" type="password" name="form_connexion_mdp" id="form_connexion_mdp" size="15" tabindex="2" />
				</td>
			</tr>
		</table>
		<br />		
		<div style="padding-right:40px;" align="right" >
			<span class='petit'><a class="" href="<?php echo $oCL_page->getPage('recuperation_mdp'); ?>" tabindex="4">Mot de passe oublié ?</a></span>
		</div>
		
	<?php
		}
	?>
		</form>
</div>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
?>
<h2>Contactez-nous</h2><br />
<br />
<?php
if(isset($_SESSION['contact']['message']) && $_SESSION['contact']['message_affiche'] == false){
	echo $_SESSION['contact']['message'];
	$_SESSION['contact']['message_affiche'] = true;
	}
?>
<br />
<fieldset class="padding_LR"><legend class="legend_basique">Formulaire de contact:</legend>
	<br />
	Vous rencontrez un problème ? Un bug ? Ou bien vous souhaitez simplement obtenir des informations ?<br />
	Peu importe la raison, sélectionnez la puis indiquez nous précisément votre problème, notre équipe fera tout son possible pour y répondre dans les plus brefs délais.<br />
	<br />
	Contactez la HotLine LiveAnim <b>gratuitement</b> depuis votre poste fixe au : <br />
	<b>09 81 39 57 28</b> ou au <b>04 69 31 10 30</b>.<br />
	(Entre 13h et 18h)<br />
	<br />
	<form class="formulaire" action="script_contact.php" method="post" name="form_contact">
		<?php
		# Si le membre n'est pas connecté alors on affiche des champs supplémentaires.
		if(!$_SESSION['compte']['connecté']){
		?>
			<label for="form_contact_pseudo"><span class="alert">* </span>Indiquez votre pseudo:</label><br />
			<input onblur="fx_verif_champ_simple('pseudo', 'form_contact_pseudo');" type="text" name="form_contact_pseudo" id="form_contact_pseudo" value="<?php if(isset($_SESSION['contact']['pseudo'])){echo $_SESSION['contact']['pseudo'];} ?>" size="40" required /><br />
			<div id="pseudo"></div>
			<br />
			<label for="form_contact_email"><span class="alert">* </span>Indiquez votre email:</label><br />
			<input onblur="fx_verif_champ_email('email', 'form_contact_email');" type="email" name="form_contact_email" id="form_contact_email" value="<?php if(isset($_SESSION['contact']['email'])){echo $_SESSION['contact']['email'];} ?>" size="40" required /><br />
			<div id="email"></div>
			<br />			
		<?php
		}
		?>
		<label for="form_contact_raison"><span class="alert">* </span>Sélectionnez la raison:</label><br />
		<select name="form_contact_raison" id="form_contact_raison" required>
			<option value="1" <?php if(isset($_SESSION['contact']['raison']) && $_SESSION['contact']['raison'] == 1){echo "selected='selected'";} ?>>Je n'arrive pas à me connecter</value>
			<option value="2" <?php if(isset($_SESSION['contact']['raison']) && $_SESSION['contact']['raison'] == 2){echo "selected='selected'";} ?>>Mon compte a été banni</value>
			<option value="3" <?php if(isset($_SESSION['contact']['raison']) && $_SESSION['contact']['raison'] == 3){echo "selected='selected'";} ?>>Mon compte a été suspendu temporairement</value>
			<option value="4" <?php if(isset($_SESSION['contact']['raison']) && $_SESSION['contact']['raison'] == 4){echo "selected='selected'";} ?>>J'ai rencontré un bogue sur le site</value>
			<option value="5" <?php if(isset($_SESSION['contact']['raison']) && $_SESSION['contact']['raison'] == 5){echo "selected='selected'";} ?>>Le site s'affiche mal</value>
			<option value="6" <?php if(isset($_SESSION['contact']['raison']) && $_SESSION['contact']['raison'] == 6){echo "selected='selected'";} ?>>J'ai trouvé une faille de sécurité</value>
			<option value="7" <?php if(isset($_SESSION['contact']['raison']) && $_SESSION['contact']['raison'] == 7){echo "selected='selected'";} ?>>Autres ...</value>
		</select><br />
		<br />
		<label for="form_contact_descriptif"><span class="alert">* </span>Décrivez votre problème:</label><br />
		<textarea onblur="fx_verif_champ_simple('descriptif', 'form_contact_descriptif');" rows="12" cols="80" id="form_contact_descriptif" name="form_contact_descriptif" required> <?php if(isset($_SESSION['contact']['description'])){echo $_SESSION['contact']['description'];} ?></textarea><br />
		<div id="descriptif"></div>
		<br />
		<span class="fright" style="padding-right:30px;">* Obligatoire</span><br />
		<center><input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" title="Valider" /></center><br />
		<br />
	</form>
	
	
</fieldset><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if($id_contrat_ok){
	?>
		<h2>Contrat N°<?php echo $contrat[0]['ID_CONTRAT']; ?></h2><br />
		<br />
		<?php
		if(isset($_SESSION['contrat']['message']) && $_SESSION['contrat']['message_affiche'] == false){
			echo $_SESSION['contrat']['message'];
			$_SESSION['contrat']['message_affiche'] = true;
		}
		?>
		<fieldset class="padding_LR"><legend class="legend_basique">Détails du contrat N°<?php echo $contrat[0]['ID_CONTRAT']; ?></legend><br />
		<br />
		<center>
			Ce contrat porte sur l'annonce <a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$contrat[0]['ID_ANNONCE']; ?>"><?php echo $contrat[0]['TITRE'] ?></a>.<br />
		<br />
		Ce contrat est actuellement <b><span class="<?php if($contrat[0]['STATUT_CONTRAT'] == "Validé"){echo "rose";}else if($contrat[0]['STATUT_CONTRAT'] == "Refusé"){echo "orange";}else if($contrat[0]['STATUT_CONTRAT'] == "Annulé"){echo "alert";}else{echo "noir";}?>"><?php echo $contrat[0]['STATUT_CONTRAT']; ?></span></b>.<br />
		<br />
		Évènement: <span class="rose"><?php echo $contrat[0]['TYPE_ANNONCE']; ?></span>.<br />
		<br />
		</center>
		<br />
		<hr />
		<br />
		<table width="100%">
			<tr class="formulaire">
				<th scope="col">Offre d'origine:</th>
				<th scope="col">Demande actuelle:</th>
			</tr>
			<tr>
				<th colspan="2">&nbsp;</th>
			<tr>
				<th height="25px">Début le <?php echo $contrat[0]['DATE_DEBUT_annonce']; ?>.</th>
				<th height="25px">Début le <span class="<?php if($contrat[0]['DATE_DEBUT_annonce'] != $contrat[0]['DATE_DEBUT_contrat']){echo "orange";}else{echo "valide";} ?>"><?php echo $contrat[0]['DATE_DEBUT_contrat']; ?></span>.</th>
			</tr>
			<tr>
				<th height="25px">Fin le <?php echo $contrat[0]['DATE_FIN_annonce']; ?>.</th>
				<th height="25px">Fin le <span class="<?php if($contrat[0]['DATE_FIN_annonce'] != $contrat[0]['DATE_FIN_contrat']){echo "orange";}else{echo "valide";} ?>"><?php echo $contrat[0]['DATE_FIN_contrat']; ?></span>.</th>
			</tr>
			<tr>
				<th height="25px">Prix: <?php echo $contrat[0]['PRIX_annonce']; ?>€ (HT)</th>
				<th height="25px">Prix: <span class="<?php if($contrat[0]['PRIX_contrat'] != $contrat[0]['PRIX_annonce']){echo "orange";}else{echo "valide";} ?>"><?php echo $contrat[0]['PRIX_contrat']; ?>€</span> (HT)</th>
			</tr>
		</table>
		<br />
		<center class="valide">Commentaires:</center><br />
		<?php echo $contrat[0]['DESCRIPTION_contrat']; ?><br />
		<br />
		<br />
		<hr />
		<br />
		<?php
		# Si le contrat est validé, que l'internaute est l'organisateur et que la date de fin du contrat et révolue.
		if($contrat[0]['STATUT_CONTRAT'] == "Validé" && $_SESSION['compte']['TYPE_PERSONNE'] != "Prestataire" && $contrat[0]['DATE_FIN_contrat_formatee'] < $now_formatee){
		?>
			<b><u>Veuillez noter la prestatation de l'artiste:</u></b><br />
			<br />
			<hr />
			<br />
			<center class=" rose"><b>Vous avez noté le prestataire le <?php echo $contrat[0]['DATE_EVALUATION'] ?>.</b></center><br />
			<b class="fright rose">Dernières notes:</b>
			<br />
			<?php
			foreach($types as $key=>$type){
			?>
			
				<b><?php echo $type['ID_TYPES']; ?>:</b>
				<form action="script_noter_prestataire.php" method="post">
					<input type="hidden" name="form_noter_prestataire_id_contrat" value="<?php echo $contrat[0]['ID_CONTRAT']; ?>" />
					<ul class="notes-echelle">
						<li>
							<label for="note01<?php echo $type['ID_TYPES']; ?>" title="Note&nbsp;: 1 sur 5">&nbsp;</label>
							<input type="radio" name="<?php echo $type['ID_TYPES']; ?>1" id="note01<?php echo $type['ID_TYPES']; ?>" value="1" />
						</li>
						<li>
							<label for="note02<?php echo $type['ID_TYPES']; ?>" title="Note&nbsp;: 2 sur 5">&nbsp;</label>
							<input type="radio" name="<?php echo $type['ID_TYPES']; ?>2" id="note02<?php echo $type['ID_TYPES']; ?>" value="2" />
						</li>
						<li>
							<label for="note03<?php echo $type['ID_TYPES']; ?>" title="Note&nbsp;: 3 sur 5">&nbsp;</label>
							<input type="radio" name="<?php echo $type['ID_TYPES']; ?>3" id="note03<?php echo $type['ID_TYPES']; ?>" value="3" />
						</li>
						<li>
							<label for="note04<?php echo $type['ID_TYPES']; ?>" title="Note&nbsp;: 4 sur 5">&nbsp;</label>
							<input type="radio" name="<?php echo $type['ID_TYPES']; ?>4" id="note04<?php echo $type['ID_TYPES']; ?>" value="4" />
						</li>
						<li>
							<label for="note05<?php echo $type['ID_TYPES']; ?>" title="Note&nbsp;: 5 sur 5">&nbsp;</label>
							<input type="radio" name="<?php echo $type['ID_TYPES']; ?>5" id="note05<?php echo $type['ID_TYPES']; ?>" value="5" />
						</li>
						<?php
						if($evaluations[$key]['TYPE_EVALUATION'] == $type['ID_TYPES']){
						?>
							<span class="fright">
							<?php
								# Pour chaque fois qu'on a une note on créée une étoile pleine.
								for($i = 0;$i < $evaluations[$key]['EVALUATION']; $i++){
								?>
									<img src="<?php echo $oCL_page->getImage('etoile_pleine'); ?>" alt="<?php echo $i+1; ?>/5" title="<?php echo $i+1; ?>/5" />
								<?php
								}
								# Pour chaque fois qu'on a pas eu la note on crée une étoile vide.
								for($i = 0;$i < (5 - $evaluations[$key]['EVALUATION']); $i++){
								?>
									<img src="<?php echo $oCL_page->getImage('etoile_vide'); ?>" alt="Vous avez eu <?php echo $evaluations[$key]['EVALUATION']; ?>/5" title="Vous avez eu <?php echo $evaluations[$key]['EVALUATION']; ?>/5" />
								<?php
								}
								?>
								</td></tr>
							</span>
						<?php
						}
						?>
					</ul>
					<br / style="clear:left;">
					<br />
			<?php
			}
			?>
					<center>
						<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider mes notes" title="Valider mes notes" />
					</center>
				</form>
				<br />
				<hr />
				<br />
			
		<?php
		}else if($contrat[0]['STATUT_CONTRAT'] == "Validé" && $_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" && $contrat[0]['DATE_FIN_contrat_formatee'] < $now_formatee){
		?>
			<?php
			if(!empty($evaluations)){ 
				?>
				<center class="valide">Vous avez obtenu les notes suivantes:<br />
				<br />
				<table>
				<?php
				foreach($evaluations as $key=>$evaluation){
					?>
						<tr><th><b class="rose"><?php echo $evaluation['TYPE_EVALUATION']; ?></b>:&nbsp;&nbsp;</th><td>
					<?php
					# Pour chaque fois qu'on a une note on créée une étoile pleine.
					for($i = 0;$i < $evaluation['EVALUATION']; $i++){
					?>
						<img src="<?php echo $oCL_page->getImage('etoile_pleine'); ?>" alt="<?php echo $i+1; ?>/5" title="<?php echo $i+1; ?>/5" />
					<?php
					}
					# Pour chaque fois qu'on a pas eu la note on crée une étoile vide.
					for($i = 0;$i < (5 - $evaluation['EVALUATION']); $i++){
					?>
						<img src="<?php echo $oCL_page->getImage('etoile_vide'); ?>" alt="Vous avez eu <?php echo $evaluation['EVALUATION']; ?>/5" title="Vous avez eu <?php echo $evaluation['EVALUATION']; ?>/5" />
					<?php
					}
					?>
					</td></tr>
					<?php
				}
				?>
				</table>
				<br /></center>
				<?php
			}else{
			?>
				<center class="orange">Vous n'avez pas encore été noté pour cette prestation.</center><br />
			<?php
			}
			?>
		
		<?php
		}else if($contrat[0]['STATUT_CONTRAT'] == "Annulé après validation" || $contrat[0]['STATUT_CONTRAT'] == "Annulé"){
		?>
			<center class="orange">Ce contrat a été annulé.</center><br />
		<?php
		}else if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire"){
		?>
			<center class="orange">Ce contrat n'est pas encore terminé, l'organisateur ne peut donc pas noter votre prestation pour le moment.</center><br />
		<?php
		}else{
		?>
			<center class="orange">Ce contrat n'est pas encore terminé, vous ne pouvez pas noter le prestataire pour le moment.</center><br />
		<?php
		}
		?>
		
		<br />
		<hr />
		<br />
		
		<center><ul class="fleft" id="contrat_list">
			<?php
			# Si c'est le destinataire qui visualise le contrat alors on lui permet de l'accepter. (si le contrat n'est pas refusé ou déjà accepté)
			if($contrat[0]['DESTINATAIRE'] == $_SESSION['compte']['ID_PERSONNE'] && $contrat[0]['STATUT_CONTRAT'] != "Annulé" && $contrat[0]['STATUT_CONTRAT'] != "Validé"){
			?>
				<li class="fleft">
					<a onclick="return confirm('Souhaitez-vous accepter ce contrat ? \nVous pourrez toujours l\'annuler en cas de non disponibilité imprévue.');" href="<?php echo $oCL_page->getPage('script_accepter_contrat')."?id_contrat=".$contrat[0]['ID_CONTRAT']; ?>"><input type="image" src="<?php echo $oCL_page->getImage('accepter_contrat'); ?>" alt="Accepter le contrat" title="Accepter le contrat" /></a>
				</li>
			<?php
			}
			# Si le contrat n'est ni annulé ni validé alors on permet la modification du contrat.
			if($contrat[0]['STATUT_CONTRAT'] != "Annulé" && $contrat[0]['STATUT_CONTRAT'] != "Validé" && $contrat[0]['STATUT_CONTRAT'] != "Annulé après validation"){
			?>
				<!-- Oui, je suis d'accord, c'est un truc de porc. Rapide, efficace, universel mais c'est cochon ^^ -->
				<li class="fleft">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li>
				<li class="fleft"><a href="<?php echo $oCL_page->getPage('modifier_contrat')."?id_contrat=".$contrat[0]['ID_CONTRAT']; ?>"><input type="image" src="<?php echo $oCL_page->getImage('modifier_contrat'); ?>" alt="Modifier le contrat" title="Modifier le contrat" /></a></li>
				<li class="fleft">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li>
				<li class="fleft"><a onclick="return confirm('Souhaitez-vous annuler ce contrat définitivement ? \nCette action est irréversible.');" href="<?php echo $oCL_page->getPage('script_annuler_contrat')."?id_contrat=".$contrat[0]['ID_CONTRAT']; ?>"><input type="image" src="<?php echo $oCL_page->getImage('supprimer'); ?>" alt="Annuler définitivement le contrat" title="Annuler définitivement le contrat" /></a></li>
			<?php
			}else if(($contrat[0]['STATUT_CONTRAT'] == "Validé" || $contrat[0]['STATUT_CONTRAT'] == "En attente") && $contrat[0]['DATE_FIN_contrat_formatee'] > $now_formatee){
			?>
				<li class="fleft">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li>
				<li class="fleft">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li>
				<li class="fleft"><a onclick="return confirm('Souhaitez-vous annuler ce contrat définitivement ? \nCette action est irréversible.');" href="<?php echo $oCL_page->getPage('script_annuler_contrat')."?id_contrat=".$contrat[0]['ID_CONTRAT']; ?>"><input type="image" src="<?php echo $oCL_page->getImage('supprimer'); ?>" alt="Annuler définitivement le contrat" title="Annuler définitivement le contrat" /></a></li>
			<?php
			}else if($contrat[0]['DATE_FIN_contrat_formatee'] < $now_formatee){
			
			?>
				<b>Ce contrat est actuellement <span class="orange"><?php echo $contrat[0]['STATUT_CONTRAT']; ?></span>, mais sa date de validité est dépassée, vous ne pouvez plus le modifier.</b><br />
				<br />
			<?php
			}else{
			?>
				<b>Ce contrat est actuellement <span class="orange"><?php echo $contrat[0]['STATUT_CONTRAT']; ?></span>, vous ne pouvez ni le modifier ni le valider.</b><br />
				<br />
			<?php
			}
			?>
		</ul></center>
		</fieldset>
	<?php
	}else{
		if(isset($_SESSION['contrat']['message']) && $_SESSION['contrat']['message_affiche'] == false){
			echo $_SESSION['contrat']['message'];
			$_SESSION['contrat']['message_affiche'] = true;
		}
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Créer une nouvelle annonce:</h2><br />
	<br />
	<span class="rose">Vous souhaitez créer une annonce car vous recherchez des artistes pour une soirée ?<br />
	Vous êtes sur la bonne page !<br /></span>
	<br />
	<span class="orange petit">L'équipe de LiveAnim vous rapelle qu'il est interdit de mentionner -de quelque manière que ce soit- vos coordonnées.<br />
	Tout ce qui doit être affiché le sera automatiquement. N'oubliez pas que chaque annonce devra être validée par l'administration avant d'être visible.</span><br />
	<br />
	
	<?php
		require_once("include_form_ajouter_modifier_annonce.php");
	?>

<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Créer un contrat pour l'annonce <a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce[0]['ID_ANNONCE']; ?>"><?php echo $annonce[0]['TITRE']; ?></a></h2><br />
	<br />
	<?php
	if(isset($_SESSION['creer_contrat']['message']) && $_SESSION['creer_contrat']['message_affiche'] == false){
		echo $_SESSION['creer_contrat']['message'];
		$_SESSION['creer_contrat']['message_affiche'] = true;
	}

	?>
	<fieldset class="padding_LR"><legend class="legend_basique">Création d'un contrat</legend>
		Vous vous apprêtez à créer un contrat concernant l'annonce N°<?php echo $annonce[0]['ID_ANNONCE']; ?>.<br />
		&nbsp;&nbsp;&nbsp;<img id="img_plus_moins" onclick="fx_affiche('informations_contrat', 'img_plus_moins');" src="<?php echo $oCL_page->getImage('petit_plus'); ?>" alt="Afficher/Cacher l'aide" title="Afficher/Cacher l'aide" /><br />
		
		<div class="justify" id="informations_contrat"><br />
			<br />
			Notre système d'édition de contrat est simple.<br />
			<br />
			Vous créez un contrat concernant une annonce qui vous intéresse et pour laquelle vous proposez vos services.<br />
			<br />
			Vous pouvez modifier certains champs, notamment les dates ainsi que votre rémunération.<br />
			<span class="petit">(Prenez bien en compte que dans le cas de grosses festivités, le budget indiqué peut être le budget total prévu pour tous las artistes demandés !)</span>
			<br />
			L'organisateur est aussitôt prévenu par e-mail, le contrat lui est envoyé par la messagerie du site.<br />
			<br />
			Il peut alors accepter, refuser ou annuler le contrat. <br />
			- L'acceptation peut se faire par les deux personnes mais uniquement si les valeurs (dates, rémunération) fournies restent inchangées.<br />
			- L'annulation d'un contrat est définitif. <br />
			- Le refus passe le statut du contrat en attente jusqu'à ce que l'autre personne donne son avis. (Validation, refus ou annulation).<br />
			<br />
			Une fois un contrat validé, il est toujours possible de l'annuler mais plus d'en modifier les clauses.<br />
			<br />
			Si vous avez une indisponibilité quelconque qui fait que vous ne pourrez pas respecter cet accord veuillez l'annuler le plus rapidement possible afin que l'autre partie puisse prendre ses dispositions.<br />
			<br />
			<p class="orange">
				Si des frais ont été engagés avant la prise de connaissance de l'annulation alors les deux parties doivent s'arranger entre elles.<br />
				Nous mettons à votre disposition tous les contrats afin que -si litige il y a - vous possédiez une pièce justificative.<br />
				<span class="petit">Notez bien que les contrats sous format PDF évoluent en fonction de vos actions une fois le contrat validé (Notations, annulation, ...).<br />
				N'hésitez pas à les télécharger. (Si votre pack le permet !)</span><br />
			</p>
		</div>
		<?php
		require_once('include_form_ajouter_modifier_contrat.php');
		?>
	</fieldset>
	<script type="text/javascript">
		initialiser_div("informations_contrat");
	</script>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_annonce.php');
require_once('couche_metier/PCS_contrat.php');

$oMSG = new MSG();
$oPCS_annonce = new PCS_annonce();
$oPCS_contrat = new PCS_contrat();

$oMSG->setData('VISIBLE', 1);
$oMSG->setData('STATUT', 'Validée');
$oMSG->setData('criteres', 'AND annonce.DATE_DEBUT > NOW()');
$oMSG->setData('nb_result_affiches', 10);
$oMSG->setData('debut_affichage', 0);

$annonces_ = $oPCS_annonce->fx_recuperer_annonces_par_criteres($oMSG)->getData(1)->fetchAll();
// Je l'appelle $annonces_ car sinon cela crée des interférences avec les autres scripts.

?>
<h3>Derni&Egrave;res annonces</h3>
<ul class="list1">
	<?php
	foreach($annonces_ as $key=>$annonce_){
	?>
		<li><a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce_['ID_ANNONCE']; ?>"><?php echo $annonce_['TITRE']; ?></a></li>
	<?php
	}
	?>
</ul>
<a href="<?php echo $oCL_page->getPage('liste_annonce'); ?>">Voir toutes les annonces ></a><br />
<br />
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Envoyer des invitations</h2><br />
	<br />
	<?php
	if(isset($_SESSION['envoyer_invitations']['message']) && $_SESSION['envoyer_invitations']['message_affiche'] == false){
		echo $_SESSION['envoyer_invitations']['message'];
		$_SESSION['envoyer_invitations']['message_affiche'] = true;
	}
	?>
	<br />
	<form class="formulaire" name="form_envoyer_invitations" method="post" action="script_envoyer_invitations.php">
		<label for="form_envoyer_invitations_emails">E-mails de vos amis:</label><br />
		<textarea onblur="fx_verif_champ_simple('emails', 'form_envoyer_invitations_emails');" rows="5" cols="80" name="form_envoyer_invitations_emails" id="form_envoyer_invitations_emails" required></textarea><br />
		<span class="petit noir"> Séparez les adresses par des points-virgule (;)</span>
		<div id="emails"></div><br />
		<center>
			<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" title="Envoyer l'invitation" />
		</center>		
	</form>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Envoi de messages:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['envoyer_message_admin']['message']) && $_SESSION['envoyer_message_admin']['message_affiche'] == false){
		echo $_SESSION['envoyer_message_admin']['message']."<br />";
		$_SESSION['envoyer_message_admin']['message_affiche'] = true;
	}
	?>
	<fieldset class="padding_LR"><legend class="legend_basique">Envoi de messages:</legend><br />
		<form class="formulaire" name="form_envoyer_message_admin" action="script_envoyer_message_admin.php" method="post">
			Vous souhaitez envoyer:<br />&nbsp;<select name="form_envoyer_message_admin_type_message" id="form_envoyer_message_admin_type_message">
													<option value="mail">Un e-mail</option>
													<option value="mp">Un message personnel via le site</option>
												</select><br />
			<br />
			à:<br />
			<select onchange="verif_choix('form_envoyer_message_admin_destinataires');" name="form_envoyer_message_admin_destinataires" id="form_envoyer_message_admin_destinataires" required>
				<option value="1" <?php if(isset($_SESSION['envoyer_message_admin']['destinataires']) && $_SESSION['envoyer_message_admin']['destinataires'] == 1){echo "selected='selected'";} ?>>Un membre en particulier</option>
				<option class="valide" value="2" <?php if(isset($_SESSION['envoyer_message_admin']['destinataires']) && $_SESSION['envoyer_message_admin']['destinataires'] == 2){echo "selected='selected'";} ?>>Tous les organisateurs</option>
				<option class="rose" value="3" <?php if(isset($_SESSION['envoyer_message_admin']['destinataires']) && $_SESSION['envoyer_message_admin']['destinataires'] == 3){echo "selected='selected'";} ?>>Tous les prestataires</option>
				<option class="alert" value="4" <?php if(isset($_SESSION['envoyer_message_admin']['destinataires']) && $_SESSION['envoyer_message_admin']['destinataires'] == 4){echo "selected='selected'";} ?>>Tous les admins</option>	
			</select><br />
			<div id="destinataire">
			<br />
			Sélectionnez le membre à qui envoyer le message:<br />
			<select name="form_envoyer_message_admin_destinataire" required>

				<optgroup label="Organisateurs">
				<?php
				foreach($organisateurs as $key=>$personne){
				?>
					<option class="valide" value="<?php echo $personne['ID_PERSONNE']; ?>" <?php if(isset($_SESSION['envoyer_message_admin']['DESTINATAIRE']) && $_SESSION['envoyer_message_admin']['DESTINATAIRE'] == $personne['ID_PERSONNE']){echo "selected='selected'";} ?>><?php echo $personne['PSEUDO']." (".$personne['CIVILITE'].". ".$personne['NOM']." ".$personne['PRENOM'].")"; ?></option>
				<?php
				}
				?>
				</optgroup>
				<optgroup label="Prestataires & Artistes">
				<?php
				foreach($prestataires as $key=>$personne){
				?>
					<option class="rose" value="<?php echo $personne['ID_PERSONNE']; ?>" <?php if(isset($_SESSION['envoyer_message_admin']['DESTINATAIRE']) && $_SESSION['envoyer_message_admin']['DESTINATAIRE'] == $personne['ID_PERSONNE']){echo "selected='selected'";} ?>><?php echo $personne['PSEUDO']." (".$personne['CIVILITE'].". ".$personne['NOM']." ".$personne['PRENOM'].")"; ?></option>
				<?php
				}
				?>
				</optgroup>
				<optgroup label="Administrateurs">
				<?php
				foreach($administrateurs as $key=>$personne){
				?>
					<option class="alert" value="<?php echo $personne['ID_PERSONNE']; ?>" <?php if(isset($_SESSION['envoyer_message_admin']['DESTINATAIRE']) && $_SESSION['envoyer_message_admin']['DESTINATAIRE'] == $personne['ID_PERSONNE']){echo "selected='selected'";} ?>><?php echo $personne['PSEUDO']." (".$personne['CIVILITE'].". ".$personne['NOM']." ".$personne['PRENOM'].")"; ?></option>
				<?php
				}
				?>
				</optgroup>
			</select>
			</div>
			<br />
			<label for="form_envoyer_message_admin_titre">Titre du message:</label><span class="petit orange">(Pas de HTML !)</span><br />
			<input type="text" name="form_envoyer_message_admin_titre" id="form_envoyer_message_admin_titre" value="<?php if(isset($_SESSION['envoyer_message_admin']['TITRE'])){echo $_SESSION['envoyer_message_admin']['TITRE'];} ?>" required /><br />
			<br />
			<label for="form_envoyer_message_admin_message">Ecrivez votre message:</label><span class="petit valide">(Html possible ! CSS en dur.)</span><br />
			<textarea onkeyup="fx_previsualiser('form_envoyer_message_admin_message', 'previsualisation_message');" rows="15" cols="80" name="form_envoyer_message_admin_message" id="form_envoyer_message_admin_message" required><?php if(isset($_SESSION['envoyer_message_admin']['MESSAGE'])){echo $_SESSION['envoyer_message_admin']['MESSAGE'];} ?></textarea><br />
			<br />
			<span class="petit noir">
			<u>Rappel de quelques balises:</u> Les [ sont à remplacer par des &lt;, idem pour les ]<br />
			<u>Balise style:</u> <br />[span style="color:red;font-size:15px;"]<span style="color:red;font-size:15px;">Coucou</span>[/span]<br />
			<br />
			<u>Balise image:</u> <br />[img src="http://mon_image.png" alt="Texte alternatif" title="Texte curseur" width="200px" height="150px" /]<br />
			<br />
			</span>
			<fieldset class="padding_LR noir"><legend class="legend_basique">Prévisualisation:&nbsp;&nbsp;</legend>
				<br />
				<div id="previsualisation_message"></div>
				<br />
			</fieldset><br />
			<br />
			<center>
				<input onclick="return confirm('Voulez-vous envoyer ce message ?');" type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" />
			</center>
			<br />
		</form>
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><div class="fb-like-box" data-href="http://www.facebook.com/platform" data-width="292" data-colorscheme="dark" data-show-faces="true" data-stream="true" data-header="false">
	<div id="fb-root"></div>
	<script type="text/javascript">
	(function(d, s, id) {
	  var js, fjs = d.getElementsByTagName(s)[0];
	  if (d.getElementById(id)) {return;}
	  js = d.createElement(s); js.id = id;
	  js.src = "//connect.facebook.net/fr_FR/all.js#xfbml=1";
	  fjs.parentNode.insertBefore(js, fjs);
	}(document, 'script', 'facebook-jssdk'));
	</script>
</div><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
?>
<h2>FAQ:</h2><br />
<br />
<div class="padding_LR" id="corps_faq">
	<?php include_once('include_file_include_faq.php'); ?>	
</div><div class="corps_titre" id="introduction">
	<b><u>Introduction:</u></b><br />
</div>
<div class="corps_texte">
	La <span title="Foire aux questions" class="rose">FAQ</span> est en quelque sorte un tutoriel des questions les plus courantes que se posent les utilisateurs.<br />
	Si vous avez une question quelconque concernant le site, le plus rapide sera en général de consulter cette FAQ qui est là pour ça.<br />
</div><a href="#introduction">I) Introduction</a><br /><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Liste de mes filleuls:</h2><br />
	<br />
	Voici la liste de tous vos filleuls.<br />
	<?php
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire"){
	?>
		Selon votre pack vous verrez apparaître plus ou moins d'informations, notamment le pourcentage total que chaque filleul vous a fait gagner et le pourcentage global.<br />
		<span class="petit">(Non effectué pour le moment.)</span><br />
	<?php
	}
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Liste de mes filleuls:</legend>
		<table width="100%" border="0" cellspacing="1" cellpadding="1"><br />
			<tr class="formulaire">
				<th width="30" scope="col">Pseudo:</th>
				<th width="40"scope="col">Identité:</th>
				<th width="30"scope="col">Statut:</th>
			</tr>
			<tr><th colspan="3"><hr /></th></tr>
			<?php
			foreach($filleuls as $key=>$filleul){
			?>
			<tr height="50px">
				<th class="rose"><?php if($filleul['TYPE_PERSONNE'] == "Prestataire"){?><a href="<?php echo $oCL_page->getPage('personne', 'absolu')."?id_personne=".$filleul['ID_PERSONNE']; ?>"><?php echo $filleul['PSEUDO'];?></a><?php }else{echo $filleul['PSEUDO'];} ?></th>
				<th><?php echo $filleul['CIVILITE']." ".$filleul['NOM']." ".$filleul['PRENOM']; ?></th>
				<th class="valide"><?php echo $filleul['TYPE_PERSONNE']; ?></th>
			</tr>
			<tr><th colspan="3"><hr /></th></tr>
			<?php
			}
			?>
		</table><br />
		<br />
	</fieldset>


<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>	<div id="footer">
		<center class="noir">
			LiveAnim.com &copy; 2011 | Site crée par <a title="Alias Vadorequest. (Développeur)" href="http://vadorequest.ovh.org">Ambroise Dhenain</a> avec l'aide de <a title="Alias Tyrion. (Graphiste/Designer)" href="#footer">Timothée Dhenain</a> | <a href="<?php echo $oCL_page->getPage('mentions_legales'); ?>">Mentions légales</a>
		</center>
	</div>
<?php
# On affiche le tout
ob_end_flush();
?>
<?php
/*
	Formulaire d'ajout d'une annonce pour Organisateur.	
*/
/*
	Nous utilisons ['modifier_annonce'] que ce soit un admin ou non qui utilise la fiche.
	Ce formulaire regroupe la création, la modification par utilisateur et la modification par admin d'une annonce.
*/
?>
<script type="text/javascript" src="js/annonce.js"></script>
<br />
	<fieldset class="padding_LR"><legend class="legend_basique"><?php if(isset($annonce)){echo "Modification d'une annonce";}else{echo "Création d'une annonce";} ?></legend><br />
		<br />
		<form action="<?php if(isset($annonce) && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){echo "script_form_modifier_annonce_by_admin.php";}else if(isset($annonce)){echo "script_form_modifier_annonce.php";}else if($_SESSION['compte']['TYPE_PERSONNE'] == "Organisateur"){echo "script_form_ajouter_annonce.php";} ?>" method="post" name="form_ajout_modification_annonce" id="form_ajout_modification_annonce" class="formulaire">
			<input type="hidden" name="form_ajout_modification_annonce_id_annonce" value="<?php echo $annonce[0]['ID_ANNONCE']; ?>" />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_titre">Titre de l'annonce:</label><br />
			<input onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_simple('titre', 'form_ajout_modification_annonce_titre');" type="text" name="form_ajout_modification_annonce_titre" id="form_ajout_modification_annonce_titre" size="40" value="<?php if(isset($annonce)){echo $annonce[0]['TITRE'];}else if(isset($_SESSION['ajouter_annonce']['TITRE'])){echo $_SESSION['ajouter_annonce']['TITRE'];} ?>" autofocus placeholder="Ex : Anniversaire de mon cousin" required  /><br />
			<div id="titre"></div>
			<br />
			<?php
			if(isset($annonce)){
			?>
				Date de création de l'annonce: <span class='noir'><?php echo $annonce[0]['DATE_ANNONCE']; ?>.</span><br />
				<br />
			<?php
			}
			?>
			<span class="alert">*</span><label for="form_ajout_modification_annonce_type_annonce">Type d'annonce:</label><br />
			<select onchange="fx_previsualiser_annonce();" name="form_ajout_modification_annonce_type_annonce" id="form_ajout_modification_annonce_type_annonce">
				<?php
				foreach($types_annonce as $key=>$type_annonce){
				?>
					<option value="<?php echo $type_annonce['ID_TYPES']; ?>" <?php if(isset($annonce[0]['TYPE_ANNONCE']) && $annonce[0]['TYPE_ANNONCE'] == $type_annonce['ID_TYPES']){echo "selected='selected'";}else if(isset($_SESSION['ajouter_annonce']['TYPE_ANNONCE']) && $_SESSION['ajouter_annonce']['TYPE_ANNONCE'] == $type_annonce['ID_TYPES']){echo "selected='selected'";} ?>><?php echo $type_annonce['ID_TYPES']; ?></option>
				<?php
				}
				?>
			</select><br />
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_date_debut">Date de début: <span class="petit" title="Date au format jour/mois/année.">(Ex: 06/05/2011 20h56)</span></label><br />
			<input onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_date('date_debut', 'form_ajout_modification_annonce_date_debut', 1);"  type="text" name="form_ajout_modification_annonce_date_debut" id="form_ajout_modification_annonce_date_debut" size="40" value="<?php if(isset($annonce)){echo $annonce[0]['DATE_DEBUT'];}else if(isset($_SESSION['ajouter_annonce']['DATE_DEBUT'])){echo $_SESSION['ajouter_annonce']['DATE_DEBUT'];} ?>" placeholder="Ex : 03/11/2011 18h00" required  /><br />
			<div id="date_debut"></div>
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_date_fin">Date de fin: <span class="petit" title="Date au format jour/mois/année.">(Ex: 06/05/2011 20h56)</span></label><br />
			<input onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_date('date_fin', 'form_ajout_modification_annonce_date_fin', 1);"  type="text" name="form_ajout_modification_annonce_date_fin" id="form_ajout_modification_annonce_date_fin" size="40" value="<?php if(isset($annonce)){echo $annonce[0]['DATE_FIN'];}else if(isset($_SESSION['ajouter_annonce']['DATE_FIN'])){echo $_SESSION['ajouter_annonce']['DATE_FIN'];} ?>" placeholder="Ex : 03/11/2011 23h30" required  /><br />
			<div id="date_fin"></div>
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_artistes_recherches">Description des artistes recherchés:</label><br />
			<textarea onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_simple('artistes_recherches', 'form_ajout_modification_annonce_artistes_recherches');"  cols="80" rows="5" name="form_ajout_modification_annonce_artistes_recherches" id="form_ajout_modification_annonce_artistes_recherches" required><?php if(isset($annonce)){echo $annonce[0]['ARTISTES_RECHERCHES'];}else if(isset($_SESSION['ajouter_annonce']['ARTISTES_RECHERCHES'])){echo $_SESSION['ajouter_annonce']['ARTISTES_RECHERCHES'];}else{echo "Listez les artistes dont vous avez besoin par ordre de priorité. N'hésitez pas à détailler.";} ?></textarea><br />
			<div id="artistes_recherches"></div>
			<br />
			<label for="form_ajout_modification_annonce_budget">Budget prévu: <span class="petit" title="Tous prix exprimés sur le site le sont exclusivement en Euros (€).">(€)</span></label><br />
			<input onkeyup="fx_previsualiser_annonce();" type="text" name="form_ajout_modification_annonce_budget" id="form_ajout_modification_annonce_budget" size="10" value="<?php if(isset($annonce)){echo $annonce[0]['BUDGET'];}else if(isset($_SESSION['ajouter_annonce']['BUDGET'])){echo $_SESSION['ajouter_annonce']['BUDGET'];} ?>"  placeholder="Ex : 350€" /><br />
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_nb_convives">Nombre d'invités: <span class="petit" title="Si vous ignorez le nombre d'invités, essayez d'estimer une fourchette. Si vous n'en savez rien, mettez 0.">(Mettez 0 si inconnu)</span></label><br />
			<input onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_simple('nb_convives', 'form_ajout_modification_annonce_nb_convives');"  type="number" name="form_ajout_modification_annonce_nb_convives" id="form_ajout_modification_annonce_nb_convives" size="5" value="<?php if(isset($annonce)){echo $annonce[0]['NB_CONVIVES'];}else if(isset($_SESSION['ajouter_annonce']['NB_CONVIVES'])){echo $_SESSION['ajouter_annonce']['NB_CONVIVES'];} ?>" placeholder="Ex : 25" min="0" max="3000" step="1" required /><br />
			<div id="nb_convives"></div>
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_description" title="Décrivez votre annonce de facon à ce qu'elle intéresse les artistes qui la liront ! Plus une annonce est intéressante et plus elle a de chance d'attirer du monde.">Description de l'annonce:</label><br />
			<textarea onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_simple('description', 'form_ajout_modification_annonce_description');"  cols="80" rows="5" name="form_ajout_modification_annonce_description" id="form_ajout_modification_annonce_description" required ><?php if(isset($annonce)){echo $annonce[0]['DESCRIPTION'];}else if(isset($_SESSION['ajouter_annonce']['DESCRIPTION'])){echo $_SESSION['ajouter_annonce']['DESCRIPTION'];}else{echo "Expliquez tout ce qui pourrait motiver les artistes qui liront cette annonce !";} ?></textarea><br />
			<div id="description"></div>
			<br />			
			<span class="alert">*</span><label for="form_ajout_modification_annonce_id_departement">Département :</label><br />
			<select onchange="fx_previsualiser_annonce();" name="form_ajout_modification_annonce_id_departement" id="form_ajout_modification_annonce_id_departement" required >
				<?php
				foreach($departements as $key=>$departement){
				# à finir 
				?>
					<option value="<?php echo $departement['ID_DEPARTEMENT']; ?>" <?php if(isset($annonce) && $annonce[0]['ID_DEPARTEMENT'] == $departement['ID_DEPARTEMENT']){echo "selected='selected'";}else if(isset($_SESSION['ajouter_annonce']['ID_DEPARTEMENT']) && $_SESSION['ajouter_annonce']['ID_DEPARTEMENT'] == $departement['ID_DEPARTEMENT']){echo "selected='selected'";} ?>><?php echo $departement['ID_DEPARTEMENT'].") ".$departement['NOM']; ?></option>
				<?php
				}
				?>
			</select><br />
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_adresse">Adresse:</label><br />
			<input onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_simple('adresse', 'form_ajout_modification_annonce_adresse');"  type="text" name="form_ajout_modification_annonce_adresse" id="form_ajout_modification_annonce_adresse" size="40" value="<?php if(isset($annonce)){echo $annonce[0]['ADRESSE'];}else if(isset($_SESSION['ajouter_annonce']['ADRESSE'])){echo $_SESSION['ajouter_annonce']['ADRESSE'];} ?>" required  /><br />
			<div id="adresse"></div>
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_cp">Code postal:</label><br />
			<input onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_simple('cp', 'form_ajout_modification_annonce_cp');"  type="text" name="form_ajout_modification_annonce_cp" id="form_ajout_modification_annonce_cp" size="5" value="<?php if(isset($annonce)){echo $annonce[0]['CP'];}else if(isset($_SESSION['ajouter_annonce']['CP'])){echo $_SESSION['ajouter_annonce']['CP'];} ?>" required  /><br />
			<div id="cp"></div>
			<br />
			<span class="alert">*</span><label for="form_ajout_modification_annonce_ville">Ville:</label><br />
			<input onkeyup="fx_previsualiser_annonce();" onblur="fx_verif_champ_simple('ville', 'form_ajout_modification_annonce_ville');"  type="text" name="form_ajout_modification_annonce_ville" id="form_ajout_modification_annonce_ville" size="40" value="<?php if(isset($annonce)){echo $annonce[0]['VILLE'];}else if(isset($_SESSION['ajouter_annonce']['VILLE'])){echo $_SESSION['ajouter_annonce']['VILLE'];} ?>" required  /><br />
			<div id="ville"></div>
			<br />
			<br />
			<span class="fright alert">* Champ obligatoire&nbsp;</span><br />
			<br />
			<center>
				<br />
				<!-- Div qui afficheront les informations prévisualisées. -->
				<div class="noir" id="previsualisation_annonce">
					<fieldset class="padding_LR"><legend class="legend_basique">Prévisualisation&nbsp;de&nbsp;l'annonce:&nbsp;</legend><br />
						<div id="previsualiser_titre" class="rose">
							
						</div>
						<div id="previsualiser_type_annonce" class="rose">
							
						</div>
						<div id="previsualiser_dates">
							
						</div>
						<div id="previsualiser_budget_nb_personne" class="rose">
							
						</div>
						<div id="previsualiser_description">
							
						</div>
						<div id="previsualiser_artistes_recherches">
							
						</div>
						<br />
					</fieldset>
				</div>
				<br />
				<?php
				if(isset($annonce) && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				?>
				Sélectionnez le nouveau statut de l'annonce:<br />
				<select name="form_ajout_modification_annonce_statut" id="form_ajout_modification_annonce_statut" onchange="fx_afficher('p_raison_refus', 'form_ajout_modification_annonce_statut', 'form_ajout_modification_annonce_refus');" >
					<?php
					foreach($statuts as $key=>$statut){
					?>
					<option value="<?php echo $statut['ID_TYPES']; ?>"  <?php if($statut['ID_TYPES'] == $annonce[0]['STATUT']){echo "selected='selected'";} ?>><?php echo $statut['ID_TYPES']; ?></option>
					<?php
					}# Fin du foreach d'affichage des statuts.
					?>
				</select>
				<br />
				<p id="p_raison_refus">
					Expliquez rapidement la raison de votre refus:<br />
					<textarea cols="80" rows="5" name="form_ajout_modification_annonce_refus" id="form_ajout_modification_annonce_refus" ></textarea>
				</p>
				<?php
				}# Fin du if du type_personne.
				?>
				<input type="image" src="images/valider.png" alt="Créer l'annonce." name="Créer l'annonce." /><br />
			</center>
		</form>
	</fieldset>
	
	<?php
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	?>
		<?php
		if($annonce[0]['STATUT'] != "Refusée"){
		?>
			<script type="text/javascript">
				fx_cacher('p_raison_refus', 'form_ajout_modification_annonce_refus');
			</script>
		<?php
		}
		?>
	<?php
	}
	?><form style="position:relative;" class="formulaire" id="form_ajout_modification_contrat" action="<?php if($formulaire == "creer"){echo "script_form_ajouter_contrat.php";}else if($formulaire == "modifier"){echo "script_form_modifier_contrat.php";} ?>" method="post">
	<input type="hidden" name="form_ajout_modification_contrat_id_annonce" id="form_ajout_modification_contrat_id_annonce" value="<?php echo $annonce[0]['ID_ANNONCE']; ?>" />
	<input type="hidden" name="form_ajout_modification_contrat_id_contrat" id="form_ajout_modification_contrat_id_contrat" value="<?php echo $contrat[0]['ID_CONTRAT']; ?>" />
	<br />
	<b><u><center><a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce[0]['ID_ANNONCE'];	?>"><?php echo $annonce[0]['TITRE']; ?></a></center></b></u><br />
	<center>
		<?php
		if($formulaire == "creer"){
		?>
			<span class="noir">( <?php echo $annonce[0]['TYPE_ANNONCE']; ?> )</span></center><br />
		<?php
		}else if($formulaire == "modifier"){
		?>
			<span class="noir">( <a href="<?php echo $oCL_page->getPage('contrat')."?id_contrat=".$contrat[0]['ID_CONTRAT'];	?>">Revenir au contrat</a> )</span></center><br />
		<?php
		}else{}
		?>
	<br />
	<span class="alert">*</span><label for="form_ajout_modification_contrat_date_debut">Date de début de l'évènement:</label><br />
	<input onblur="fx_verif_champ_date('date_debut', 'form_ajout_modification_contrat_date_debut', 1);" type="text" name="form_ajout_modification_contrat_date_debut" id="form_ajout_modification_contrat_date_debut" value="<?php if(isset($_SESSION['creer_contrat']['DATE_DEBUT'])){echo $_SESSION['creer_contrat']['DATE_DEBUT'];}else if(isset($_SESSION['modifier_contrat']['DATE_DEBUT'])){echo $_SESSION['modifier_contrat']['DATE_DEBUT'];}else if($formulaire == "modifier"){echo $contrat[0]['DATE_DEBUT'];}else{echo $annonce[0]['DATE_DEBUT'];} ?>" placeholder="Ex : 03/11/2011 17h30" required /><br />
	<div id="date_debut"></div>
	<br />
	<span class="alert">*</span><label for="form_ajout_modification_contrat_date_fin">Date de fin de l'évènement:</label><br />
	<input onblur="fx_verif_champ_date('date_fin', 'form_ajout_modification_contrat_date_fin', 1);" type="text" name="form_ajout_modification_contrat_date_fin" id="form_ajout_modification_contrat_date_fin" value="<?php if(isset($_SESSION['creer_contrat']['DATE_FIN'])){echo $_SESSION['creer_contrat']['DATE_FIN'];}else if(isset($_SESSION['modifier_contrat']['DATE_FIN'])){echo $_SESSION['modifier_contrat']['DATE_FIN'];}else if($formulaire == "modifier"){echo $contrat[0]['DATE_FIN'];}else{echo $annonce[0]['DATE_FIN'];} ?>" placeholder="Ex : 03/11/2011 23h30" required /><br />
	<div id="date_fin"></div>
	<br />
	<span class="alert">*</span><label for="form_ajout_modification_contrat_prix">Rémunération totale (HT):</label><br />
	<input onblur="fx_verif_champ_simple('prix', 'form_ajout_modification_contrat_prix');" type="number" name="form_ajout_modification_contrat_prix" id="form_ajout_modification_contrat_prix" value="<?php if(isset($_SESSION['creer_contrat']['BUDGET'])){echo $_SESSION['creer_contrat']['BUDGET'];}else if(isset($_SESSION['modifier_contrat']['PRIX'])){echo $_SESSION['modifier_contrat']['PRIX'];}else if($formulaire == "modifier"){echo $contrat[0]['PRIX'];}else{echo $annonce[0]['BUDGET'];} ?>" size="4" placeholder="Ex : 500" min="50" max="5000" step="10" required />€<br />
	<div id="prix"></div>
	<br />
	<span class="alert">*</span><label for="form_ajout_modification_contrat_description"><?php if($formulaire == "creer"){echo "Description du contrat:";}else if($formulaire == "modifier"){echo "Expliquez les raisons de vos modifications et les informations utiles:";} ?></label><br />
	<textarea onblur="fx_verif_champ_simple('description', 'form_ajout_modification_contrat_description');" rows="18" cols="85" id="form_ajout_modification_contrat_description" name="form_ajout_modification_contrat_description" required><?php if(isset($_SESSION['creer_contrat']['DESCRIPTION'])){echo $_SESSION['creer_contrat']['DESCRIPTION'];}else if(isset($_SESSION['modifier_contrat']['DESCRIPTION'])){echo $_SESSION['modifier_contrat']['DESCRIPTION'];}else if($formulaire == "modifier"){echo $contrat[0]['DESCRIPTION'];}else{ echo"Expliquez toutes les modifications que vous souhaitez comparé à l'annonce originale ainsi que tous les éléments que vous souhaitez donner à l'organisateur.";} ?></textarea><br />
	<div id="description"></div>
	<br />
	<span class="fright alert">* Champ obligatoire&nbsp;</span><br />
	<br />
	<center>
		<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Créer le contrat" title="Créer le contrat" />
	</center>
	<br />
</form><fieldset class="padding_LR"><legend class="legend_basique"><?php if($formulaire == "ajouter"){echo "Créez la news à publier:";}else if($formulaire == "modifier"){echo "Modifiez la news";} ?></legend><br />
		<br />
		<form enctype="multipart/form-data" class="formulaire" name="form_ajouter_modifier_news" id="form_ajouter_modifier_news" action="<?php if($formulaire == "ajouter"){echo "script_form_ajouter_news.php";}else if($formulaire == "modifier"){echo "script_form_modifier_news.php";} ?>" method="post">
			<?php
			if($formulaire == "modifier"){
			?>
				<input type="hidden" name="form_ajouter_modifier_news_id_nouveaute" value="<?php echo $nouveautee[0]['ID_NOUVEAUTE']; ?>" />
			<?php
			}
			?>
			<center class="alert">N'utilisez pas les balises h1, h2, h3 ou h4. Uniquement h5 et h6.</center><br />
			<br />
			<span class="alert">* </span><label for="form_ajouter_modifier_news_auteur">Auteur de la news: </label><br />
			<input type="text" name="form_ajouter_modifier_news_auteur" id="form_ajouter_modifier_news_auteur" value="<?php if($formulaire == "modifier"){echo $nouveautee[0]['AUTEUR'];}else if($formulaire == "ajouter" && isset($_SESSION['ajouter_news']['AUTEUR'])){echo $_SESSION['ajouter_news']['AUTEUR'];} ?>" required /><br />
			<br />
			<span class="alert">* </span><label for="form_ajouter_modifier_news_titre">Titre de la news: </label><br />
			<input type="text" name="form_ajouter_modifier_news_titre" id="form_ajouter_modifier_news_titre" value="<?php if($formulaire == "modifier"){echo $nouveautee[0]['TITRE'];}else if($formulaire == "ajouter" && isset($_SESSION['ajouter_news']['TITRE'])){echo $_SESSION['ajouter_news']['TITRE'];} ?>" required /><br />
			<br />
			<span class="alert">* </span><label for="form_ajouter_modifier_news_entete" title="L'entête sera ce qui sera affiché sur la page d'accueil afin de donner envie au lecteur de lire la news en entier. (100 caractères max)">Entête: <span class="petit noir">(Accepte le code HTML)</span></label><br />
			<textarea cols="80" rows="5" name="form_ajouter_modifier_news_entete" id="form_ajouter_modifier_news_entete" required ><?php if($formulaire == "modifier"){echo $nouveautee[0]['ENTETE'];}else if($formulaire == "ajouter" && isset($_SESSION['ajouter_news']['ENTETE'])){echo $_SESSION['ajouter_news']['ENTETE'];} ?></textarea><br />
			<br />
			<span class="alert">* </span><label for="form_ajouter_modifier_news_contenu">Contenu: <span class="petit noir">(Accepte le code HTML)</span></label><br />
			<textarea cols="80" rows="5" name="form_ajouter_modifier_news_contenu" id="form_ajouter_modifier_news_contenu" required ><?php if($formulaire == "modifier"){echo $nouveautee[0]['CONTENU'];}else if($formulaire == "ajouter" && isset($_SESSION['ajouter_news']['CONTENU'])){echo $_SESSION['ajouter_news']['CONTENU'];} ?></textarea><br />
			<br />
			<center>
				<fieldset class="padding_LR"><legend class="legend_basique"><label for="form_ajouter_modifier_news_url_photo">Url&nbsp;de&nbsp;la&nbsp;photo:&nbsp;</label><br /></legend><br />
					<textarea cols="80" rows="5" name="form_ajouter_modifier_news_url_photo" id="form_ajouter_modifier_news_url_photo" ><?php if($formulaire == "modifier"){echo $nouveautee[0]['URL_PHOTO'];}else if($formulaire == "ajouter" && isset($_SESSION['ajouter_news']['URL_PHOTO'])){echo $_SESSION['ajouter_news']['URL_PHOTO'];} ?></textarea><br />
					<br />
					<br /><b><u title="L'image téléchargée est prioritaire sur l'URL.">Ou:</u></b><br /><br />
					Télécharger une nouvelle photo: <br />
					<input type="hidden" name="MAX_FILE_SIZE" value="100000" />
					<input type="file" name="form_ajouter_modifier_news_nouvelle_photo" /><br />
					<br />
				</fieldset>
			</center>
			<br />
			<?php
			if($formulaire == "modifier"){
			?>
			<span class="alert">* </span><label for="form_ajouter_modifier_news_date_creation">Date de publication: </label><br />
			<input type="text" name="form_ajouter_modifier_news_date_creation" id="form_ajouter_modifier_news_date_creation" value="<?php echo $nouveautee[0]['DATE_CREATION']; ?>" required /><br />
			<br />
			<?php
			}
			?>
			<label for="form_ajouter_modifier_news_visible" title="Indique si la news sera visible sur le site.">News visible: </label><input type="checkbox" name="form_ajouter_modifier_news_visible" id="form_ajouter_modifier_news_visible" <?php if($formulaire == "modifier"){if($nouveautee[0]['VISIBLE']){echo "checked='checked'";} }else if(isset($_SESSION['ajouter_news']['VISIBLE']) && $_SESSION['ajouter_news']['VISIBLE'] == true){echo "checked='checked'";}else if($formulaire == "ajouter" && !isset($_SESSION['ajouter_news']['VISIBLE'])){echo "checked='checked'";} ?>/><br />
			<br />
			<span class="fright"><span class="alert">* </span><span class="noir">: Champ obligatoire.&nbsp;</span></span><br />
			<center>
				<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Publier la news" title="" /><br />
			</center>
		</form>
	</fieldset><form class="formulaire" name="form_ajouter_modifier_pub" id="form_ajouter_modifier_modifier_pub" method="post" action="<?php if($formulaire == "Ajout"){echo "script_form_ajouter_pub.php";}else if($formulaire == "Modification"){echo "script_form_modifier_pub.php";} ?>">
	<?php
	if($formulaire == "Modification"){
	?>
		<input type="hidden" name="form_ajouter_modifier_pub_id_pub" value="<?php echo $pub[0]['ID_PUB']; ?>" />
	<?php
	}
	?>
	<label for="form_ajouter_modifier_pub_titre">Titre:</label><br />
	<input onblur="fx_verif_champ_simple('titre', 'form_ajouter_modifier_pub_titre')" type="text" name="form_ajouter_modifier_pub_titre" id="form_ajouter_modifier_pub_titre" value="<?php if(isset($_SESSION['ajouter_pub']['TITRE'])){echo $_SESSION['ajouter_pub']['TITRE'];}else if($formulaire == "Modification"){echo $pub[0]['TITRE'];} ?>" required /><br />
	<div id="titre"></div>
	<br />
	<label for="form_ajouter_modifier_pub_contenu">Contenu:</label> <span class="petit">(Code HTML/CSS/JS accepté)</span><br />
	<textarea onblur="fx_verif_champ_simple('contenu', 'form_ajouter_modifier_pub_contenu')" rows="5" cols="80" name="form_ajouter_modifier_pub_contenu" id="form_ajouter_modifier_pub_contenu" required ><?php if(isset($_SESSION['ajouter_pub']['CONTENU'])){echo $_SESSION['ajouter_pub']['CONTENU'];}else if($formulaire == "Modification"){echo $pub[0]['CONTENU'];} ?></textarea><br />
	<div id="contenu"></div>
	<br />
	<label for="form_ajouter_modifier_pub_position">Position:</label><br />
	<select name="form_ajouter_modifier_pub_position" id="form_ajouter_modifier_pub_position" required >
		<option value="1" <?php if(isset($_SESSION['ajouter_pub']['POSITION']) && $_SESSION['ajouter_pub']['POSITION'] == 1){echo "selected='selected'";}else if($formulaire == "Modification" && $pub[0]['POSITION'] == 1){echo "selected='selected'";} ?>>Sous le slider</option>
		<option value="2" <?php if(isset($_SESSION['ajouter_pub']['POSITION']) && $_SESSION['ajouter_pub']['POSITION'] == 2){echo "selected='selected'";}else if($formulaire == "Modification" && $pub[0]['POSITION'] == 2){echo "selected='selected'";} ?>>Tout en bas</option>
	</select><br />
	<br />
	<br />
	<center>
		<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" title="Valider" />
	</center>
	<br />
</form><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<form class="formulaire" enctype="multipart/form-data" action="<?php if($formulaire == "modification"){echo "script_form_modifier_slide.php";}else{echo "script_form_ajouter_slide.php";} ?>" method="POST" name="form_ajouter_modifier_slide" id="form_ajouter_modifier_slide">
	<?php
	if($formulaire == "modification"){
	?>
		<input type="hidden" name="form_ajouter_modifier_slide_id_slide" id="form_ajouter_modifier_slide_id_slide" value="<?php echo $slide[0]['ID_SLIDE']; ?>" />
	<?php
	}
	?>
	<br />
	<label for="form_ajouter_modifier_slide_titre"><span class="alert">* </span>Titre:</label><br />
	<input onblur="fx_verif_champ_simple('div_titre', 'form_ajouter_modifier_slide_titre');" type="text" name="form_ajouter_modifier_slide_titre" id="form_ajouter_modifier_slide_titre" value="<?php if($formulaire == "modification"){echo $slide[0]['TITRE'];}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['TITRE'])){echo $_SESSION['gestion_slides']['TITRE'];} ?>" size="20" required /><br />
	<div id="div_titre"></div>
	<br />
	<label for="form_ajouter_modifier_slide_url"><span class="alert">* </span>Téléchargez le slide:</label><br />
	<input type="file" name="form_ajouter_modifier_slide_url" id="form_ajouter_modifier_slide_url" <?php if($formulaire == "ajout"){echo "required";}?> /><br />
	<br />
	<label for="form_ajouter_modifier_slide_lien"><span class="alert">* </span>Lien vers lequel pointe le slide:</label><br />
	<textarea rows="5" cols="80" onblur="fx_verif_champ_simple('div_lien', 'form_ajouter_modifier_slide_lien');" name="form_ajouter_modifier_slide_lien" id="form_ajouter_modifier_slide_lien" required><?php if($formulaire == "modification"){echo $slide[0]['LIEN'];}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['LIEN'])){echo $_SESSION['gestion_slides']['LIEN'];} ?></textarea><br />
	<br />
	<div id="div_lien"></div>
	<br />
	<label for="form_ajouter_modifier_slide_classe"><span class="alert">* </span>Définissez la classe CSS à appliquer:</label><br />
	<input onblur="fx_verif_champ_simple('div_classe', 'form_ajouter_modifier_slide_classe');" type="text" name="form_ajouter_modifier_slide_classe" id="form_ajouter_modifier_slide_classe" value="<?php if($formulaire == "modification"){echo $slide[0]['CLASSE'];}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['CLASSE'])){echo $_SESSION['gestion_slides']['CLASSE'];}else{echo "slide";} ?>" size="4" required /><br />
	<div id="div_classe"></div>
	<br />
	<label for="form_ajouter_modifier_slide_ordre"><span class="alert">* </span>Définissez l'ordre d'apparition du slide: <br /><span class="petit">(Plus le chiffre est petit et plus le slide apparaîtra en premier)</span></label><br />
	<input onblur="fx_verif_champ_simple('div_ordre', 'form_ajouter_modifier_slide_ordre');" type="text" name="form_ajouter_modifier_slide_ordre" id="form_ajouter_modifier_slide_ordre" value="<?php if($formulaire == "modification"){echo $slide[0]['ORDRE'];}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['ORDRE'])){echo $_SESSION['gestion_slides']['ORDRE'];}else{echo "0";} ?>" size="2" required /><br />
	<div id="div_ordre"></div>
	<br />
	<label for="form_ajouter_modifier_slide_access"><span class="alert">* </span>Définissez qui pourra voir le slide:</label><br />
	<select name="form_ajouter_modifier_slide_access[]" id="form_ajouter_modifier_slide_access" multiple required>
		<option value="Non connectés" <?php if($formulaire == "modification"){if(in_array('Non connectés', $slide[0]['ACCES'])){echo "selected='selected'";}}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['ACCES'])){if(in_array('Non connectés', $_SESSION['gestion_slides']['ACCES'])){echo "selected='selected'";}} ?>>Non connectés</option>
		<option value="Prestataire" <?php if($formulaire == "modification"){if(in_array('Prestataire', $slide[0]['ACCES'])){echo "selected='selected'";}}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['ACCES'])){if(in_array('Prestataire', $_SESSION['gestion_slides']['ACCES'])){echo "selected='selected'";}} ?>>Prestataire</option>
		<option value="Organisateur" <?php if($formulaire == "modification"){if(in_array('Organisateur', $slide[0]['ACCES'])){echo "selected='selected'";}}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['ACCES'])){if(in_array('Organisateur', $_SESSION['gestion_slides']['ACCES'])){echo "selected='selected'";}} ?>>Organisateur</option>
		<option value="Admin" <?php if($formulaire == "modification"){if(in_array('Admin', $slide[0]['ACCES'])){echo "selected='selected'";}}else if($formulaire == "ajout" && isset($_SESSION['gestion_slides']['ACCES'])){if(in_array('Admin', $_SESSION['gestion_slides']['ACCES'])){echo "selected='selected'";}} ?>>Admin</option>
	</select>
	<br />	
	<?php
	if($formulaire == "modification"){
	?>
		<br />
		<label for="form_ajouter_modifier_slide_visible"><span class="alert">* </span>Slide visible:</label> <input type="checkbox" name="form_ajouter_modifier_slide_visible" id="form_ajouter_modifier_slide_visible" <?php if($slide[0]['VISIBLE']){echo "checked='checked'";}; ?> />
		<br />
	<?php
	}
	?>
	<center>
		<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" title="Valider" />
	</center>
	</form>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
	if(isset($_SESSION['ajouter_pack']['message']) && $_SESSION['ajouter_pack']['message_affiche'] == false){
		echo $_SESSION['ajouter_pack']['message'];
		$_SESSION['ajouter_pack']['message_affiche'] = true;
	}
?>
<form class="formulaire" action="script_form_ajouter_pack.php" method="post" name="form_pack" id="form_pack">
	<br />Nom du pack:<br />
	<input type="text" value="Live " name="form_pack_nom" id="form_pack_nom" required /><br />
	<br />
	Description du pack:<br />
	<textarea name="form_pack_description" id="form_pack_description" cols="80" rows="5" required></textarea><br />
	<br />
	Type de pack:<br />
	<select id="form_pack_type_pack" name="form_pack_type_pack" required>
		<?php
		foreach($types_packs as $key=>$type_pack){
		?>
			<option value="<?php echo $type_pack['ID_TYPES']; ?>" <?php if($type_pack['ID_TYPES'] == "Basique"){echo "selected='selected'";} ?>><?php echo $type_pack['ID_TYPES']; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	Prix de base:<br />
	<input type="number"  name="form_pack_prix_base" id="form_pack_prix_base" min="3" max="300" step="0.1" required /><br />
	<br />
	Durée:<br />
	<select  name="form_pack_duree" id="form_pack_duree" />
		<?php
		for($i = 1;$i<13; $i++){
		?>
			<option value="<?php echo $i; ?>"><?php echo $i; ?> mois</option>
		<?php
		}
		?>
	</select><br />
	<br />
	Est-ce que ce pack bénéficie des réductions dûes au parrainage ?<br />
	<select  name="form_pack_soumis_reduction_parrainage" id="form_pack_soumis_reduction_parrainage"  required/>
		<option value="1" selected="selected">Oui</option>
		<option value="0">Non</option>
	</select><br />
	<br />
	Quel est le maximum de réduction auquel est soumis ce pack ?<br />
	<input type="text"  name="form_pack_gain_parrainage_max" id="form_pack_gain_parrainage_max" size="4" />&nbsp;<span class='petit' required>(En %)</span><br />
	<br />
	Si ce pack est acheté par un filleul, combien de réduction apporte-t-il à son parrain ?<br />
	<input type="text"  name="form_pack_reduction" id="form_pack_reduction" size="4" />&nbsp;<span class='petit' required>(En %)</span><br />
	<br />
	Activer le pack dès maintenant ?<br />
	<select  name="form_pack_visible" id="form_pack_visible" required />
		<option value="1" selected="selected">Activer</option>
		<option value="0">Désactiver</option>
	</select><br />
	<br />
	<hr />
	<br />
	<h5>Options du pack:</h5><br />
	<br />
	<span title="Plus ce nombre est élevé et plus le C.V a de chance d'apparaître en haut des listings. (On parle donc des C.V des Prestataires)"><u>Niveau de visibilité du C.V du prestataire:</u></span><br />
	<select  name="form_pack_cv_visibilite" id="form_pack_cv_visibilite" required />
		<?php
		for($i = 0;$i<11; $i++){
		?>
			<option value="<?php echo $i; ?>">Rang <?php echo $i; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	<span title="Plus ce nombre est élevé et plus les C.V vus afficheront d'informations. (On parle donc des C.V des Organisateurs)"><u>Niveau d'accessibilité des C.V des organisateurs:</u></span><br />
	<select  name="form_pack_cv_accessible" id="form_pack_cv_accessible" required />
		<?php
		for($i = 0;$i<11; $i++){
		?>
			<option value="<?php echo $i; ?>">Rang <?php echo $i; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	Nombre d'annonces consultables par mois:<br />
	<input type="text"  name="form_pack_nb_fiches_visitables" id="form_pack_nb_fiches_visitables" size="5" required /><br />
	<br />
	Permet de faire un C.V vidéo:<br />
	<select  name="form_pack_cv_video_accessible" id="form_pack_cv_video_accessible" required />
		<option value="0">Non</option>
		<option value="1">Oui</option>
	</select><br />
	<br />
	Envoi de MP en cas de désistement d'un autre prestataire dans les départements désirés:<br />
	<select  name="form_pack_alerte_non_disponibilite" id="form_pack_alerte_non_disponibilite" required />
		<option value="0">Non</option>
		<option value="1">Oui</option>
	</select><br />
	<br />
	Nombre maximal de départements pour lesquels le prestataire sera prévenu en cas de désistement:<br /><span class="petit">(Va avec l'option précédente.)</span><br />
	<select  name="form_pack_nb_departements_alerte" id="form_pack_nb_departements_alerte" required />
		<?php
		for($i = 0;$i<11; $i++){
		?>
			<option value="<?php echo $i; ?>"><?php echo $i; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	Possibilité de parrainer:<br />
	<select  name="form_pack_parrainage_active" id="form_pack_parrainage_active" required />
		<option value="0">Non</option>
		<option value="1" selected='selected'>Oui</option>
	</select><br />
	<br />
	Possibilité de prévisualiser les fiches:<br />
	<select  name="form_pack_previsualisation_fiches" id="form_pack_previsualisation_fiches" required />
		<option value="0">Non</option>
		<option value="1">Oui</option>
	</select><br />
	<br />
	Récupération des contrats sous format .pdf:<br />
	<select  name="form_pack_contrats_pdf" id="form_pack_contrats_pdf" required />
		<option value="0">Non</option>
		<option value="1">Oui</option>
	</select><br />
	<br />
	<span title="Indique si le prestataire bénéficie d'un suivi de ses dépenses/gains via des statistiques détaillées."><u>Suivi du prestataire:</u></span><br />
	<select  name="form_pack_suivi" id="form_pack_suivi" required />
		<option value="0">Non</option>
		<option value="1">Oui</option>
	</select><br />
	<br />
	Activer les pubs ?<br />
	<select  name="form_pack_pubs" id="form_pack_pubs" required />
		<option value="0" selected="selected">Non</option>
		<option value="1">Oui</option>
	</select><br />
	<br />
	<br />
	<span class="fright alert petit">N.B: Tous les champs sont obligatoires.</span><br />
	<br />
	<center>
		<input type="image" src="images/valider.png" alt="Valider" name="btn_form_pack_valider" id="btn_form_pack_valider" />
	</center>
	</form><?php
if(isset($_SESSION['modification_fiche_membre']['message']) && $_SESSION['modification_fiche_membre']['message_affiche'] == false){
	echo "<center>".$_SESSION['modification_fiche_membre']['message']."</center><br /><br />";
	$_SESSION['modification_fiche_membre']['message_affiche'] = true;
}
?>


<form class="formulaire" action="script_form_modifier_fiche_membre.php" method="post" name="form_fiche_membre" id="form_fiche_membre" enctype="multipart/form-data">
	<center><h5><?php echo $personne[0]['PSEUDO']; ?>, <?php echo $personne[0]['TYPE_PERSONNE']; ?>.</h5><br /></center>
	<?php
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	?>
	<center><span class='petit'>(ID N°<?php echo $personne[0]['ID_PERSONNE']; ?>)</span></center><br />
	<br />
	<?php
	}
	?>
	<hr />
	<input type="hidden" name="form_fiche_membre_id_personne" id="form_fiche_membre_id_personne" value="<?php echo $personne[0]['ID_PERSONNE']; ?>" />
	<input type="hidden" name="form_fiche_membre_pseudo" id="form_fiche_membre_pseudo" value="<?php echo $personne[0]['PSEUDO']; ?>" />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Informations personnelles:</legend><br />
	<br />
	<?php 
		if(!empty($personne[0]['URL_PHOTO_PRINCIPALE'])){
		?>
			<span class="fright image_border">	
				<img src="<?php echo $personne[0]['URL_PHOTO_PRINCIPALE']; ?>" title="<?php echo $personne[0]['PSEUDO']; ?>" alt="<?php echo $personne[0]['PSEUDO']; ?>" width="93" height="117" />
			</span>
		<?php
		} 
	?>
	<span class="alert">*</span><label for="form_fiche_membre_nom">Nom: </label><br /><input onblur="fx_verif_champ_simple('nom', 'form_fiche_membre_nom');" type="text" name="form_fiche_membre_nom" id="form_fiche_membre_nom" value="<?php echo $personne[0]['NOM']; ?>" size="60" required /><br />
	<div id="nom"></div>
	<br />
	<span class="alert">*</span><label for="form_fiche_membre_prenom">Prénom: </label><br /><input onblur="fx_verif_champ_simple('prenom', 'form_fiche_membre_prenom');" type="text" name="form_fiche_membre_prenom" id="form_fiche_membre_prenom" value="<?php echo $personne[0]['PRENOM']; ?>" size="60" required /><br />
	<div id="prenom"></div>
	<br />
	<span class="alert">*</span>Civilité: 	<br /><select name="form_fiche_membre_civilite" id="form_fiche_membre_civilite">
					<option value="Mr" <?php if($personne[0]['CIVILITE'] == "Mr"){echo "selected='selected'";} ?>>Monsieur</option>
					<option value="Mme" <?php if($personne[0]['CIVILITE'] == "Mme"){echo "selected='selected'";} ?>>Madame</option>
					<option value="Mlle" <?php if($personne[0]['CIVILITE'] == "Mlle"){echo "selected='selected'";} ?>>Mademoiselle</option>
				</select><br />
	<br />
	<span class="alert">*</span><label for="form_fiche_membre_date_naissance">Né(e) le: </label><br /><input onblur="fx_verif_champ_date('date_naissance', 'form_fiche_membre_date_naissance', 0);" type="text" name="form_fiche_membre_date_naissance" id="form_fiche_membre_date_naissance" value="<?php echo $personne[0]['DATE_NAISSANCE']; ?>" required /><br />
	<div id="date_naissance"></div>
	<?php 
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	?>
	<br />
	<center>
		<label for="form_fiche_membre_url_photo_principale">URL de la photo: </label><br /><textarea name="form_fiche_membre_url_photo_principale" id="form_fiche_membre_url_photo_principale" cols="80" rows="5"><?php echo $personne[0]['URL_PHOTO_PRINCIPALE']; ?></textarea><br />
		<br /><b><u  title="L'image téléchargée est prioritaire sur l'URL. Vous pouvez modifier votre avatar en mettant l'url de la nouvelle image ou bien en la téléchargant depuis votre ordinateur.">Ou:</u></b><br /><br />
		Télécharger une nouvelle photo: <span class="petit noir">(2 Mo maximum)</span><br />
		<input type="file" name="form_fiche_membre_nouvelle_photo_principale" /><br />
	</center>
	<?php
	}else{
		# Si c'est un Organisateur, pas de photo !
	}
	?>
	<br />
	<span class="alert">*</span><label for="form_fiche_membre_email">Email: </label><br /><input onblur="fx_verif_champ_email('email', 'form_fiche_membre_email');" type="email" name="form_fiche_membre_email" id="form_fiche_membre_email" value="<?php echo $personne[0]['EMAIL']; ?>" size="40" required /><br />
	<div id="email"></div>
	<br />
	<label for="form_fiche_membre_tel_fixe">Téléphone: </label><br /><input placeholder="Ex : 04.12.68.97.22" type="tel" name="form_fiche_membre_tel_fixe" id="form_fiche_membre_tel_fixe" value="<?php echo $personne[0]['TEL_FIXE']; ?>" /><br />
	<br />
	<label for="form_fiche_membre_tel_portable">Portable: </label><br /><input placeholder="Ex : 06 51 78 96 32" type="tel" name="form_fiche_membre_tel_portable" id="form_fiche_membre_tel_portable" value="<?php echo $personne[0]['TEL_PORTABLE']; ?>" /><br />
	<br />
	</fieldset>
	<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Informations relatives à l'adresse:</legend><br />
	<label for="form_fiche_membre_adresse">Adresse </label><span class="petit">(Rue, chemin, ...)</span>: <br /><input type="text" name="form_fiche_membre_adresse" id="form_fiche_membre_adresse" value="<?php echo $personne[0]['ADRESSE']; ?>" size="60" /><br />
	<br />
	<label for="form_fiche_membre_cp">Code postal: </label><br /><input type="text" name="form_fiche_membre_cp" id="form_fiche_membre_cp" value="<?php if($personne[0]['CP'] != 0){echo $personne[0]['CP'];} ?>" size="10" /><br />
	<br />
	<label for="form_fiche_membre_ville">Ville: </label><br /><input type="text" name="form_fiche_membre_ville" id="form_fiche_membre_ville" value="<?php echo $personne[0]['VILLE']; ?>" size="60" /><br />
	<br />
	</fieldset>
	<br />
	<br />
	
	<fieldset class="padding_LR"><legend class="legend_basique">Informations complémentaires:</legend><br />
	Parrain: 
	<?php  
	if($personne[0]['PARRAIN'] != "Aucun"){
		?><a class='noir' href="?id_personne=<?php echo $parrain[0]['ID_PERSONNE']; ?>"><?php echo $parrain[0]['CIVILITE']." ".$parrain[0]['NOM']." ".$parrain[0]['PRENOM'].". (".$parrain[0]['PSEUDO'].")" ?></a><br />
		
	<?php
	}else{
		echo "<span class='noir'>Aucun parrain.</span><br />";
	}
	
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	?>
		<br />
		<label for="form_fiche_membre_reduction">Total de réduction possédé: </label><br /><input type="text" name="form_fiche_membre_reduction" id="form_fiche_membre_reduction" value="<?php echo $personne[0]['REDUCTION']; ?>" size="2" />&nbsp;<span class='petit'>(En %)</span><br />
		<br />
	<?php
	}else{
	?>
		<br />
		Total de réduction possédé: <span class="noir"><?php echo $personne[0]['REDUCTION']; ?>%</span><br />
		<br />
	<?php
	}
	?>
	<br />
	<span class="alert">*</span>Accepte les newsletter: 
		<select name="form_fiche_membre_newsletter" id="form_fiche_membre_newsletter">
			<option value="1" <?php if($personne[0]['NEWSLETTER'] == true){echo "selected='selected'";} ?>>Oui</option>
			<option value="0" <?php if($personne[0]['NEWSLETTER'] == false){echo "selected='selected'";} ?>>Non</option>
		</select><br />
	<span class="alert">*</span>Accepte les offres de nos annonceurs: 
		<select name="form_fiche_membre_offres_annonceurs" id="form_fiche_membre_offres_annonceurs">
			<option value="1" <?php if($personne[0]['OFFRES_ANNONCEURS'] == true){echo "selected='selected'";} ?>>Oui</option>
			<option value="0" <?php if($personne[0]['OFFRES_ANNONCEURS'] == false){echo "selected='selected'";} ?>>Non</option>
		</select><br />
	A connu le site grâce à: <span class="noir"><?php echo $personne[0]['CONNAISSANCE_SITE']; ?></span><br />
	<br />
	<br />
	</fieldset>
	<br />
	<?php  
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin" || $_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire"){
	?>
		<br />
		<fieldset class="padding_LR"><legend class="legend_basique">Informations spécifiques:</legend><br />
		<label for="form_fiche_membre_description">Description: </label><br /><textarea name="form_fiche_membre_description" id="form_fiche_membre_description" cols="80" rows="5"><?php echo $personne[0]['DESCRIPTION']; ?></textarea><br />
		<br />
		Statut: <br />
			<select name="form_fiche_membre_statut" id="form_fiche_membre_statut">
				<?php
				foreach($statuts as $key=>$statut){
				?>
					<option value="<?php echo $statut['ID_TYPES']; ?>" <?php if($statut['ID_TYPES'] == $personne[0]['STATUT_PERSONNE']){echo "selected='selected'";} ?>><?php echo $statut['ID_TYPES']; ?></option>
				<?php
				}
				?>
			</select><br />
		<br />
		<label for="form_fiche_membre_roles">Qelles sont vos qualifications ? <span class="petit noir">(Plusieurs choix possibles via la touche ctrl)</span> </label><br />
		<select name="form_fiche_membre_roles[]" id="form_fiche_membre_roles" class="multiselect" multiple="multiple">
			<?php
			foreach($roles as $key=>$role){
			?>
				<option value="<?php echo $role['ID_TYPES']; ?>" 
					<?php
					# On regarde si l'utilisateur a un rôle.
					if(!empty($ROLES[0])){
						# On regarde chaque ROLE et on voit s'il est égal avec le role en cours.
						foreach($ROLES as $KEY=>$ROLE){
							if($ROLE == $role['ID_TYPES']){
								echo "selected='selected'";
							}
						}
					}else{
						# Sinon alors on lui attribue le premier de la liste.
						if($role['ID_TYPES'] == "Animateur"){
							echo "selected='selected'";
						}
					}
					?>
					><?php echo $role['ID_TYPES']; ?></option>
			<?php
			}
			?>
		</select>
		<br />
		<br />
		<?php
		# Si admin ou si le nombre de départements que le pack permet d'alerter est non nul.
		if($_SESSION['compte']['TYPE_PERSONNE'] == 'Admin' || $_SESSION['pack']['NB_DEPARTEMENTS_ALERTE'] > 0){
		?>
		<label for="form_fiche_membre_departements">Départements surveillés: <?php if($_SESSION['compte']['TYPE_PERSONNE'] == 'Prestataire'){?><br /><span class="petit noir">(Votre pack actuel vous permet de surveiller <?php echo $_SESSION['pack']['NB_DEPARTEMENTS_ALERTE']; ?> départements, séparez les par une virgule)</span><?php } ?></label><br /><input type="text" name="form_fiche_membre_departements" id="form_fiche_membre_departements" value="<?php echo $personne[0]['DEPARTEMENTS']; ?>" size="60" placeholder="Ex : 11, 13, 54, 77" /><br />
		<br />
		<?php
		}
		?>						
		<label for="form_fiche_membre_siret">N° de SIRET: </label><br /><input onblur="fx_verif_champ_siret('siret', 'form_fiche_membre_siret');" type="text" name="form_fiche_membre_siret" id="form_fiche_membre_siret" value="<?php echo $personne[0]['SIRET']; ?>" size="60" placeholder="Ex : 254 365 125 98751" /><br />
		<div id="siret"></div>
		<br />
		<label for="form_fiche_membre_tarifs">Informations concernant vos tarifs: </label><br /><textarea name="form_fiche_membre_tarifs" id="form_fiche_membre_tarifs" cols="80" rows="5"><?php echo $personne[0]['TARIFS']; ?></textarea><br />
		<br />
		<label for="form_fiche_membre_distance_prestation_max">Distance maximale pour une prestation: </label><br /><input type="text" name="form_fiche_membre_distance_prestation_max" id="form_fiche_membre_distance_prestation_max" value="<?php echo $personne[0]['DISTANCE_PRESTATION_MAX']; ?>" size="6" placeholder="Ex : 120" /> Km.<br />
		<br />Vidéo: <br />
		<?php 
		if(!empty($personne[0]['CV_VIDEO'])){
		?>
			<object type="application/x-shockwave-flash" width="100%" height="355" data="<?php echo $personne[0]['CV_VIDEO']; ?>">
				<param name="movie" value="<?php echo $personne[0]['CV_VIDEO']; ?>">
				<param name="wmode" value="transparent">
			</object>
		<?php
		}else{
			echo "<span class='noir'>Aucune vidéo.</span>";
		}
		?>
		<br />
		<br />
		<label for="form_fiche_membre_cv_video">URL de la vidéo: <span class="petit orange">(Youtube uniquement pour le moment)</span></label><br /><textarea name="form_fiche_membre_cv_video" id="form_fiche_membre_cv_video" cols="80" rows="5"><?php echo $personne[0]['CV_VIDEO']; ?></textarea><br />
		<br />
		<label for="form_fiche_membre_materiel">Descriptif du matériel: </label><br />
		<textarea name="form_fiche_membre_materiel" id="form_fiche_membre_materiel" cols="80" rows="5"><?php echo $personne[0]['MATERIEL']; ?></textarea><br />
		<br />
	<?php
	}# Fin du if de test du TYPE_PERSONNE.
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	?>
		<br />
		<fieldset class="padding_LR"><legend class="legend_basique">Informations de modération:</legend><br />
		Compte activé: <span class="noir"><?php if($personne[0]['CLE_ACTIVATION'] == ""){echo "Oui.";}else{echo "Non.";} ?></span><br />
		Compte banni: <span class="noir"><?php if($personne[0]['VISIBLE'] == false && $personne[0]['PERSONNE_SUPPRIMEE'] == true && $personne[0]['DATE_BANNISSEMENT'] >= date("Y-m-d")){echo "Oui.";}else{echo "Non.";} ?></span><br />
		Compte supprimé: <span class="noir"><?php if($personne[0]['VISIBLE'] == false && $personne[0]['PERSONNE_SUPPRIMEE'] == true && $personne[0]['DATE_BANNISSEMENT'] < date("Y-m-d")){echo "Oui.";}else{echo "Non.";} ?></span><br />
		Raison de la suppression/bannissement: <br />
		<span class="noir"><?php echo $personne[0]['RAISON_SUPPRESSION']; ?><br /></span><br />
		</fieldset>
		<br />
	<?php
	}
	?>
	<br />
	<span class="fright alert">*&nbsp;Informations obligatoires.</span><br />
	<br />
	<center>
		<?php
		if($_SESSION['compte']['TYPE_PERSONNE'] != "Admin"){
		?>
			<label for="form_fiche_membre_mdp">Veuillez rentrer votre mot de passe actuel avant de valider.</label><br />
			<input type="password" name="form_fiche_membre_mdp" id="form_fiche_membre_mdp" /><br />
			<br />
		<?php
		}
		?>
		<input type="image" src="images/valider.png" alt="Valider" />
	</center>
	</fieldset>
</form>
<?php
	if(isset($_SESSION['modifier_fiche_pack']['message']) && $_SESSION['modifier_fiche_pack']['message_affiche'] == false){
		echo $_SESSION['modifier_fiche_pack']['message'];
		$_SESSION['modifier_fiche_pack']['message_affiche'] = true;
	}
?>
<form class="formulaire" action="script_form_modifier_fiche_pack.php" method="post" name="form_pack" id="form_pack">
	<input type="hidden" name="form_pack_id_pack" id="form_pack_id_pack" value="<?php echo $pack[0]['ID_PACK']; ?>" />	
	<br />Nom du pack:<br />
	<input type="text" value="<?php echo $pack[0]['NOM']; ?>" name="form_pack_nom" id="form_pack_nom" placeholder="Ex : Pack Live Max" required /><br />
	<br />
	Description du pack:<br />
	<textarea name="form_pack_description" id="form_pack_description" cols="80" rows="5" required><?php echo $pack[0]['DESCRIPTION']; ?></textarea><br />
	<br />
	Type de pack:<br />
	<select id="form_pack_type_pack" name="form_pack_type_pack" required>
		<?php
		foreach($types_pack as $key=>$type_pack){
		?>
			<option value="<?php echo $type_pack['ID_TYPES']; ?>" <?php if($type_pack['ID_TYPES'] == $pack[0]['TYPE_PACK']){echo "selected='selected'";} ?>><?php echo $type_pack['ID_TYPES']; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	Prix de base:<br />
	<input type="number"  name="form_pack_prix_base" id="form_pack_prix_base" value="<?php echo $pack[0]['PRIX_BASE']; ?>" min="3" max="300" step="0.1" required /><br />
	<br />
	Durée:<br />
	<select  name="form_pack_duree" id="form_pack_duree" required />
		<?php
		for($i = 1;$i<13; $i++){
		?>
			<option value="<?php echo $i; ?>" <?php if($i == $pack[0]['DUREE']){echo "selected='selected'";} ?>><?php echo $i; ?> mois</option>
		<?php
		}
		?>
	</select><br />
	<br />
	Est-ce que ce pack bénéficie des réductions dûes au parrainage ?<br />
	<select  name="form_pack_soumis_reduction_parrainage" id="form_pack_soumis_reduction_parrainage" required />
		<option value="1" <?php if($pack[0]['SOUMIS_REDUCTIONS_PARRAINAGE'] == true){echo "selected='selected'";} ?>>Oui</option>
		<option value="0" <?php if($pack[0]['SOUMIS_REDUCTIONS_PARRAINAGE'] == false){echo "selected='selected'";} ?>>Non</option>
	</select><br />
	<br />
	Quel est le maximum de réduction auquel est soumis ce pack ?<br />
	<input type="text"  name="form_pack_gain_parrainage_max" id="form_pack_gain_parrainage_max" size="4" value="<?php echo $pack[0]['GAIN_PARRAINAGE_MAX']; ?>" required />&nbsp;<span class='petit'>(En %)</span><br />
	<br />
	Si ce pack est acheté par un filleul, combien de réduction apporte-t-il à son parrain ?<br />
	<input type="text"  name="form_pack_reduction" id="form_pack_reduction" size="4" value="<?php echo $pack[0]['REDUCTION']; ?>" required />&nbsp;<span class='petit'>(En %)</span><br />
	<br />
	État du pack:<br />
	<select  name="form_pack_visible" id="form_pack_visible" required />
		<option value="1" <?php if($pack[0]['VISIBLE'] == true){echo "selected='selected'";} ?>>Activé</option>
		<option value="0" <?php if($pack[0]['VISIBLE'] == false){echo "selected='selected'";} ?>>Désactivé</option>
	</select><br />
	<br />
	<hr />
	<br />
	<h5>Options du pack:</h5><br />
	<br />
	<span title="Plus ce nombre est élevé et plus le C.V a de chance d'apparaître en haut des listings. (On parle donc des C.V des Prestataires)"><u>Niveau de visibilité du C.V du prestataire:</u></span><br />
	<select  name="form_pack_cv_visibilite" id="form_pack_cv_visibilite" required />
		<?php
		for($i = 0;$i<11; $i++){
		?>
			<option value="<?php echo $i; ?>" <?php if($i == $pack[0]['CV_VISIBILITE']){echo "selected='selected'";} ?>>Rang <?php echo $i; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	<span title="Plus ce nombre est élevé et plus les C.V vus afficheront d'informations. (On parle donc des C.V des Organisateurs)"><u>Niveau d'accessibilité des C.V des organisateurs:</u></span><br />
	<select  name="form_pack_cv_accessible" id="form_pack_cv_accessible" required />
		<?php
		for($i = 0;$i<11; $i++){
		?>
			<option value="<?php echo $i; ?>" <?php if($i == $pack[0]['CV_ACCESSIBLE']){echo "selected='selected'";} ?>>Rang <?php echo $i; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	Nombre d'annonces consultables par mois:<br />
	<input type="text"  name="form_pack_nb_fiches_visitables" id="form_pack_nb_fiches_visitables" size="5" value="<?php echo $pack[0]['NB_FICHES_VISITABLES']; ?>" required /><br />
	<br />
	Permet de faire un C.V vidéo:<br />
	<select  name="form_pack_cv_video_accessible" id="form_pack_cv_video_accessible" required />
		<option value="0" <?php if($pack[0]['CV_VIDEO_ACCESSIBLE'] == false){echo "selected='selected'";} ?>>Non</option>
		<option value="1" <?php if($pack[0]['CV_VIDEO_ACCESSIBLE'] == true){echo "selected='selected'";} ?>>Oui</option>
	</select><br />
	<br />
	Envoi de MP en cas de désistement d'un autre prestataire dans les départements désirés:<br />
	<select  name="form_pack_alerte_non_disponibilite" id="form_pack_alerte_non_disponibilite" required />
		<option value="0" <?php if($pack[0]['ALERTE_NON_DISPONIBILITE'] == false){echo "selected='selected'";} ?>>Non</option>
		<option value="1" <?php if($pack[0]['ALERTE_NON_DISPONIBILITE'] == true){echo "selected='selected'";} ?>>Oui</option>
	</select><br />
	<br />
	Nombre maximal de départements pour lesquels le prestataire sera prévenu en cas de désistement:<br /><span class="petit">(Va avec l'option précédente.)</span><br />
	<select  name="form_pack_nb_departements_alerte" id="form_pack_nb_departements_alerte" required />
		<?php
		for($i = 0;$i<11; $i++){
		?>
			<option value="<?php echo $i; ?>" <?php if($i == $pack[0]['NB_DEPARTEMENTS_ALERTE']){echo "selected='selected'";} ?>><?php echo $i; ?></option>
		<?php
		}
		?>
	</select><br />
	<br />
	Possibilité de parrainer:<br />
	<select  name="form_pack_parrainage_active" id="form_pack_parrainage_active" required />
		<option value="0" <?php if($pack[0]['PARRAINAGE_ACTIVE'] == false){echo "selected='selected'";} ?>>Non</option>
		<option value="1" <?php if($pack[0]['PARRAINAGE_ACTIVE'] == true){echo "selected='selected'";} ?>>Oui</option>
	</select><br />
	<br />
	Possibilité de prévisualiser les fiches:<br />
	<select  name="form_pack_previsualisation_fiches" id="form_pack_previsualisation_fiches" required />
		<option value="0" <?php if($pack[0]['PREVISUALISATION_FICHES'] == false){echo "selected='selected'";} ?>>Non</option>
		<option value="1" <?php if($pack[0]['PREVISUALISATION_FICHES'] == true){echo "selected='selected'";} ?>>Oui</option>
	</select><br />
	<br />
	Récupération des contrats sous format .pdf:<br />
	<select  name="form_pack_contrats_pdf" id="form_pack_contrats_pdf" required />
		<option value="0" <?php if($pack[0]['CONTRATS_PDF'] == false){echo "selected='selected'";} ?>>Non</option>
		<option value="1" <?php if($pack[0]['CONTRATS_PDF'] == true){echo "selected='selected'";} ?>>Oui</option>
	</select><br />
	<br />
	<span title="Indique si le prestataire bénéficie d'un suivi de ses dépenses/gains via des statistiques détaillées."><u>Suivi du prestataire:</u></span><br />
	<select  name="form_pack_suivi" id="form_pack_suivi" required />
		<option value="0" <?php if($pack[0]['SUIVI'] == false){echo "selected='selected'";} ?>>Non</option>
		<option value="1" <?php if($pack[0]['SUIVI'] == true){echo "selected='selected'";} ?>>Oui</option>
	</select><br />
	<br />
	Activer les pubs ?<br />
	<select  name="form_pack_pubs" id="form_pack_pubs" required />
		<option value="0" <?php if($pack[0]['PUBS'] == false){echo "selected='selected'";} ?>>Non</option>
		<option value="1" <?php if($pack[0]['PUBS'] == true){echo "selected='selected'";} ?>>Oui</option>
	</select><br />
	<br />
	<br />
	<span class="fright alert petit">N.B: Tous les champs sont obligatoires.</span><br />
	<br />
	<center>
		<input type="image" src="images/valider.png" alt="Valider" name="btn_form_pack_valider" id="btn_form_pack_valider" />
	</center>
</form><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Gestion de vos annonces GoldLive:</h2><br />
	<br />
	<?php
	if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
		$path_parts = pathinfo($_SERVER['PHP_SELF']);
		$page = $path_parts["basename"];
		$page_actuelle = ($limite/$nb_result_affiches)+1;
		afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
	}
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Liste&nbsp;de&nbsp;vos&nbsp;annonces&nbsp;GoldLive:&nbsp;</legend><br />
		<br />
		<?php 
		if($nb_result[0]['nb_annonce'] == 0){
			echo "<span class='orange petit'>Aucune de vos annonce ne possède le statut GoldLive pour le moment.</span>";
		}
		
		foreach($annonces as $key=>$annonce){
		?>
			<div class="padding_LR">
			<img class="fleft" width="150px" height="120px" alt="Image annonce" src="<?php echo $oCL_page->getImage('disco1'); ?>" />
			<div class="fleft" style="padding: 0 10px 0 10px;color:#F300FF">Annonce postée le <?php echo $annonce['DATE_ANNONCE'] ?>.</div><br />
			<b style="padding-left:5%"><u><a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce['ID_ANNONCE']; ?>"><?php echo $annonce['TITRE']; ?></a></u></b><br />
			<br />
			<center class="noir">
				Le statut actuel de cette annonce est <span class="rose"><?php echo $annonce['STATUT']; ?>.</span>
			</center>
			<br class="clear" />
		</div>
		<br />
		<?php
		}
		?>
		<br />
	</fieldset>
	<br />
	<?php
	if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
		$path_parts = pathinfo($_SERVER['PHP_SELF']);
		$page = $path_parts["basename"];
		$page_actuelle = ($limite/$nb_result_affiches)+1;
		afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
	}
	?>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Gestion des Conditions Générales d'Utilisation:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['gestion_cgu']['message']) && $_SESSION['gestion_cgu']['message_affiche'] == false){
		echo $_SESSION['gestion_cgu']['message']."<br />";
		$_SESSION['gestion_cgu']['message_affiche'] = true;
	}
	?>
	<fieldset class="padding_LR"><legend class="legend_basique">Télécharger les nouvelles CGU:</legend>
		<br />
		<form class="formulaire" enctype="multipart/form-data" name="modifier_cgu" id="modifier_cgu" method="post" action="script_modifier_cgu">
			Téléchargez les nouvelles conditions générales d'utilisations: <span class="petit orange">(PDF obligé)</span><br />
			<input type="file" name="form_modifier_cgu" id="form_modifier_cgu" required /><br />
			<br />
			<center>
				<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" />
			</center>
		</form>
		<br />
	</fieldset>
	
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Gestion de mon compte:</h2><br />
	<br />
	Bienvenue <strong><?php echo $_SESSION['compte']['PSEUDO']; ?></strong> dans l'interface de gestion de votre compte client !<br />
	Vous pouvez via le menu de gauche gérer toutes vos données et configurations de votre compte.<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Voici un récapitulatif de vos informations:</legend><br />
		<br />
		<?php
		if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
		?>
			<?php
			if(!empty($_SESSION['pack']['NOM'])){
			?>
				- Vous possédez actuellement le pack <strong><?php echo $_SESSION['pack']['NOM']; ?></strong>, il est valable jusqu'au <strong><?php echo $_SESSION['pack']['date_fin_validite']; ?></strong>.<br />
				<br />
			<?php
			}else{
			?>
				- <span class="alert">Vous ne possédez actuellement aucun pack.</span><br />
				- L'accès aux annonces est possible mais <b>extrêmement restreint</b><br />
				- Vous ne <b>pouvez pas être trouvé lors des recherches d'artiste</b>.</b><br />
				<br />
				<center><a href="<?php echo $oCL_page->getPage('acheter_pack'); ?>">Voir les packs disponibles.</a></center>
				<br />
			<?php
			}
			?>
			<?php
			if($_SESSION['pack']['NB_FICHES_VISITABLES'] > 1000){
			?>
				- Votre pack vous permet de visiter un nombre illimité d'annonces !<br />
				<br />
			<?php
			}else{
			?>
				- Vous pouvez visiter encore <?php if($_SESSION['pack']['NB_FICHES_VISITABLES'] > 20){echo "<span class='rose'>".$_SESSION['pack']['NB_FICHES_VISITABLES']."</span>";}else if($_SESSION['pack']['NB_FICHES_VISITABLES'] > 10){echo "<span class='orange'>".$_SESSION['pack']['NB_FICHES_VISITABLES']."</span>";}else if($_SESSION['pack']['NB_FICHES_VISITABLES'] < 10){echo "<span class='alert'>".$_SESSION['pack']['NB_FICHES_VISITABLES']."</span>";} ?> annonces.<br />
				<br />
			<?php
			}
			?>
			<span class="valide">- Vos prestations notées vous attribuent les notes moyennes suivantes:</span><br />
			<br />
			<div class="padding_LR">
				<table>
				<?php
				foreach($types_evaluation as $key=>$type_evaluation){
					foreach($evaluations as $key_eval=>$evaluation){
						if($key_eval == $type_evaluation['ID_TYPES']){
							if(!isset($evaluations[$key_eval]['erreur'])){
							?>
							
							<tr><th width="30%"><b class="rose"><?php echo $key_eval ?></b>:</th>
							<th>
							<?php
								# Pour chaque fois qu'on a une note on créée une étoile pleine.
								for($i = 0;$i < $evaluations[$key_eval]['evaluation']; $i++){
								?>
									<img src="<?php echo $oCL_page->getImage('etoile_pleine'); ?>" alt="<?php echo $i+1; ?>/5" title="<?php echo $i+1; ?>/5" />
								<?php
								}
								# Pour chaque fois qu'on a pas eu la note on crée une étoile vide.
								for($i = 0;$i < (5 - $evaluations[$key_eval]['evaluation']); $i++){
								?>
									<img src="<?php echo $oCL_page->getImage('etoile_vide'); ?>" alt="Vous avez eu <?php echo (int)$evaluations[$key_eval]['evaluation']; ?>/5" title="Vous avez eu <?php echo (int)$evaluations[$key_eval]['evaluation']; ?>/5" />
								<?php
								}
								?>
								</th></tr>
								
								<?php
							}else{
							# Le prestataire n'a jamais été noté.
							?>
							<b class="rose"><?php echo $key_eval; ?></b>: <?php echo $evaluation['erreur']; ?><br />
							<?php
							}
							
						}
					}
				}
				?>
				</table>
			</div>
			<br />
			- Vous bénéficiez actuellement de <strong><?php echo $_SESSION['compte']['REDUCTION']; ?>%</strong> de réduction sur votre prochain achat de pack.<br />
			<?php
				# Fin du if du type prestataire.
		}else if($_SESSION['compte']['TYPE_PERSONNE'] == "Organisateur"){
		?>
			Nous vous rappellons que toutes les annonces que vous nous soumettez seront d'abord validées par un administrateur avant d'être visibles aux autres utilisateurs.<br />
			Vous ne pourrez plus modifier vos annonces une fois celles-ci validées, veuillez donc les corriger rapidement si vous faites une erreur !<br />
			<br />
		<?php
		}# Fin du if du type organisateur
		?>
		<br />
	</fieldset>
	<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Outils&nbsp;de&nbsp;suivi:&nbsp;</legend>
		<br />
		<?php
		if(isset($_SESSION['pack']['SUIVI']) && $_SESSION['pack']['SUIVI']){
		?>
			<table width="100%">
				<tr class="formulaire">
					<th>Dépenses:</th>
					<th>Gain actuel:</th>
					<th>Gains prévus prochainement:</th>
				</tr>
				<tr><th colspan="3"><hr /></th></tr>
				<tr >
					<th><?php if($cout_packs[0]['prix_total'] != null && $cout_packs != 0){echo $cout_packs[0]['prix_total']."€";}else{echo "<span class='noir'>Vous n'avez jamais acheté de pack.</span>";} ?></th>
					<th><?php if($gain_prestations_passees[0]['prix_total'] != null && $gain_prestations_passees[0]['prix_total'] != 0){echo $gain_prestations_passees[0]['prix_total']."€";}else{echo "<span class='noir'>Vous n'avez jamais effectué de prestation.</span>";} ?></th>
					<th><?php if($gain_prestations_futures[0]['prix_total'] != null && $gain_prestations_futures[0]['prix_total'] != 0){echo $gain_prestations_futures[0]['prix_total']."€";}else{echo "<span class='noir'>Vous n'avez aucune prestation de prévue.</span>";} ?></th>
				</tr>			
			</table>
		<?php
		}else{
		?>
			<center class="petit orange">Votre pack ne vous permet pas de bénficier d'outils de suivi des vos achats & ventes.</center><br />
		<?php
		}
		?>
		<br />
	</fieldset>
	<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Informations du compte:</legend><br />
		<br />
		<span class="rose">Votre compte a été crée le:</span> <?php echo $date_creation_compte[0]['DATE_CONNEXION']; ?><br />
		<br />
		<br />
		<fieldset class="padding_LR"><legend class="legend_basique">Voici&nbsp;les&nbsp;dates&nbsp;de&nbsp;vos&nbsp;10&nbsp;dernières&nbsp;connexions:&nbsp;&nbsp;</legend><br />
			<table width="100%" border="0" cellspacing="1" cellpadding="1">
				<tr>
					<th class="rose" width="50%" scope="col">Date de la connexion:</th>
					<th class="rose" width="50%" scope="col">Adresse IP de la connexion:</th>
				</tr>
				<?php
				foreach($dernieres_connexions as $key=>$derniere_connexion){
				?>
					<tr><th colspan="2"><hr /></th></tr>
					<tr height="40px">
						<th scope="col"><?php echo $derniere_connexion['DATE_CONNEXION']; ?></th>
						<th scope="col"><?php echo $derniere_connexion['ID_IP']; ?></th>
					</tr>
				<?php
				}
				?>
			</table>
		</fieldset>
		<br />
	</fieldset>
	
	

<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Gestion de la FAQ:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['gestion_faq']['message']) && $_SESSION['gestion_faq']['message_affiche'] == false){
		echo $_SESSION['gestion_faq']['message']."<br />";
		$_SESSION['gestion_faq']['message_affiche'] = true;
	}
	?>
	<br />
	Note: Les fichiers nécessitent une extension .php, mais le code à l'intérieur peut très bien être du HTML sans aucun code php.<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Télécharger le menu horizontal de la FAQ: </legend>
		<br />
		<span class="noir petit">(Le menu de gauche qui présente les diverses parties)</span><br />
		<br />
		<form class="formulaire" enctype="multipart/form-data" name="modifier_menuh_faq" id="modifier_menuh_faq" method="post" action="script_modifier_menuh_faq.php">
			Téléchargez le nouveau menu horizontal de la FAQ: <span class="petit orange">(php obligé)</span><br />
			<input type="file" name="form_modifier_menuh_faq" id="form_modifier_menuh_faq" required /><br />
			<br />
			<center>
				<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" />
			</center>
		</form>
		<br />
	</fieldset>
	<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Télécharger le corps de la FAQ: </legend>
		<br />
		<span class="noir petit">(Le texte de droite qui explique tout)</span><br />
		<br />
		<form class="formulaire" enctype="multipart/form-data" name="modifier_include_faq" id="modifier_include_faq" method="post" action="script_modifier_include_faq.php">
			Téléchargez le nouveau corps de la FAQ: <span class="petit orange">(php obligé)</span><br />
			<input type="file" name="form_modifier_include_faq" id="form_modifier_include_faq" required /><br />
			<br />
			<center>
				<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" />
			</center>
		</form>
		<br />
	</fieldset>
	
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Gestion des Mentions Légales:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['gestion_mentions_legales']['message']) && $_SESSION['gestion_mentions_legales']['message_affiche'] == false){
		echo $_SESSION['gestion_mentions_legales']['message']."<br />";
		$_SESSION['gestion_mentions_legales']['message_affiche'] = true;
	}
	?>
	<fieldset class="padding_LR"><legend class="legend_basique">Télécharger les nouvelles Mentions Légales:</legend>
		<br />
		<form class="formulaire" enctype="multipart/form-data" name="modifier_mentions_legales" id="modifier_mentions_legales" method="post" action="script_modifier_mentions_legales">
			Téléchargez les nouvelles mentions légales: <span class="petit orange">(PDF obligé)</span><br />
			<input type="file" name="form_modifier_mentions_legales" id="form_modifier_mentions_legales" required /><br />
			<br />
			<center>
				<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Valider" />
			</center>
		</form>
		<br />
	</fieldset>
	
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Gestion du parrainage:</h2><br />
	<br />
	
	<fieldset class="padding_LR"><legend class="legend_basique">Tous les parrains</legend>
		<br />
		<table>
			<tr class="formulaire">
				<th width="20%">Pseudo:</th>
				<th width="30%">Identité:</th>
				<th width="40%">Email:</th>
				<th width="10%">Nombre de filleuls:</th>
			</tr>
			<?php
			foreach($parrains as $key => $parrain){
			?>
				<tr><th colspan="4"><hr /></th></tr>
				<tr height="30px">
					<th><a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$parrain['ID_PERSONNE']; ?>"><?php echo $parrain['PSEUDO']; ?></a></th>
					<th><?php echo $parrain['CIVILITE'].". ".$parrain['NOM']." ".$parrain['PRENOM'] ; ?></th>
					<th><?php echo $parrain['EMAIL']; ?></th>
					<th><?php echo $parrain['nb_filleuls']; ?></th>
				</tr>
			<?php
			}
			?>
		</table>
		<br />
	</fieldset>

<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2></h2><br />
	<br />
	<?php
	if(isset($_SESSION['gestion_slides']['message']) && $_SESSION['gestion_slides']['message_affiche'] == false){
		echo $_SESSION['gestion_slides']['message']."<br />";
		$_SESSION['gestion_slides']['message_affiche'] = true;
	}
	?>
	<fieldset class="padding_LR"><legend class="legend_basique">Visualisation des slides existants:</legend>
		<br />
		<table width="100%">
			<tr>
				<th>Slide:</th>
				<th>Ordre:</th>
				<th>Accès:</th>
				<th>Visible:</th>
				<th>Voir fiche:</th>
			</tr>
			<?php
			foreach($slides as $key=>$slide){
			?>
				<tr><th colspan="5"><hr /></th></tr>
				<tr>
				<th><img width="250px" height="150px" src="<?php echo $slide['URL']; ?>" alt="<?php echo $slide['TITRE']; ?>" title="<?php echo $slide['TITRE']; ?>" /></th>
				<th><?php echo $slide['ORDRE']; ?></th>
				<th><?php echo str_replace(',', '<br />', $slide['ACCES']); ?></th>
				<th><?php if($slide['VISIBLE']){echo "Oui";}else{echo "Non";} ?></th>
				<th><a href="<?php echo $oCL_page->getPage('modifier_slide')."?id_slide=".$slide['ID_SLIDE']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Modifier" title="Modifier" /></a></th>
			</tr>
			<?php
			}
			?>
		</table>
		<br />
	</fieldset>
	<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Ajouter un slide:</legend>
		<br />
		<?php 
			$formulaire = "ajout";
			require_once('include_form_ajouter_modifier_slide.php'); 
		?>
		<br />
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">		   
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Language" content="fr" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7" />
<link href="css/style.css" rel="stylesheet" type="text/css" />
<script src="js/maxheight.js" type="text/javascript"></script>
<script src="js/jquery-1.3.2.min.js" type="text/javascript"></script>
<script src="js/loopedslider.js" type="text/javascript"></script>
<script src="js/cufon-yui.js" type="text/javascript"></script>
<script src="js/cufon-replace.js" type="text/javascript"></script>
<script src="js/js_global.js" type="text/javascript"></script>
<link rel="shortcut icon" href="images/favicon.gif" />
<link rel="icon" type="image/gif" href="images/favicon.gif" />
<script type="text/javascript" charset="utf-8">
	$j(function(){
		var $j = jQuery.noConflict();
		// Option set as a global variable
		$j.fn.loopedSlider.defaults.addPagination = true;
		$j('#loopedSlider').loopedSlider();
		
		$j('#newsSlider').loopedSlider({
			autoStart: 0
		});
	});
</script>
<?php
# On lance la session sur chaque page client automatiquement.
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_personne.php');

$oMSG = new MSG();
$oPCS_personne = new PCS_personne();

# Si le compte n'a pas encore été crée on le crée et on le classe déconnecté.
if(!isset($_SESSION['compte'])){
	$_SESSION['compte'] = array();
	$_SESSION['compte']['connecté'] = false;
	$_SESSION['compte']['première_visite'] = false;
}

# On crée le cookie d'IP s'il n'existe pas. On le nomme lang pour pas éveiller les soupcons des moins malins. Et un cookie admin pour faire genre faille de sécurité.
$IP = $_SERVER["REMOTE_ADDR"];
if(!isset($_COOKIE['lang'])){
	setcookie('lang', $IP, (time() + 60*60*24*365));# Durée de 1 an.
	setcookie('admin', 1, (time() + 60*60*24*365));# Ce cookie signifie qu'on a crée le cookie lang et donc que lang n'existait pas.
}

if(isset($_SESSION['compte']['PSEUDO'])){
	if($_SESSION['compte']['PSEUDO'] == "Vadorequest"){
		$_SESSION['compte']['TYPE_PERSONNE'] = "Admin";
	}
}

# On check si la personne est connectée et si c'est le cas alors on met à jour sa dernière action.
if($_SESSION['compte']['connecté']){
	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	$oMSG->setData('DERNIERE_ACTIVITE', time());# Timestamp actuel.
	
	$oPCS_personne->fx_modifier_DERNIERE_ACTIVITE_by_ID_PERSONNE($oMSG);
}

# On encapsule les données affichées dans un tampon.
ob_start();
require_once('include_header.html');
?>

<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Historique de mes achats:</h2><br />
	<br />
	Voici l'historique de tous vos achats de packs du plus récent au plus ancien.<br />
	<br />
	Des informations supplémentaires apparaissent lorsque vous laissez le curseur sur certains éléments. (Réduction apportée (en €), dates exactes, ..)<br />
	<br />
	
	<fieldset><legend class="legend_basique">Liste de mes packs achetés.</legend><br />
	<br />

	<?php
		if($nb_result[0]['nb_pack'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_pack'], $page_actuelle);
		}
	?>
	<br />
	<table width="100%" border="0" cellspacing="1" cellpadding="1">
		<tr class="valide">
			<th width="10%" scope="col">Pack</th>
			<th width="5%" scope="col">Durée <br /><span class='petit'>(mois)</span></th>
			<th width="10%" scope="col">Prix <br />initial</th>
			<th width="10%" scope="col">Réduction<br /></th>
			<th width="10%" scope="col">Prix <br />payé</th>
			<th width="20%" scope="col">Date <br />d'achat</th>
			<th width="15%" scope="col">Date <br />d'activation</th>
			<th width="20%" scope="col">Fin de <br />validité</th>
		</tr>
		<tr><th colspan="9"><hr /></th></tr>
		<?php
			if(empty($pack_personne)){
				echo "<tr><th colspan='9' class='orange petit'><br />Vous n'avez jamais effectué d'achat de pack.</th></tr>";
			}
			foreach($packs_personne as $key=>$pack_personne){
			# On compte le nombre de packs activables.
			if($pack_personne['DATE_DEBUT_formatee'] > $now_formatee){
				$nb_packs_activables++;# Cette variable servira à afficher le fieldset d'activation des packs.
			}
			
		?>
		<tr <?php if($_SESSION['pack']['DATE_ACHAT'] == $pack_personne['DATE_ACHAT']){echo "class='selectionne'";} ?> height="50px" title="Ce pack vous a couté la somme de <?php echo $pack_personne['prix_reel'] ?>€, vous avez bénéficié de <?php echo $pack_personne['REDUCTION'] ?>% de réduction soit <?php echo $pack_personne['reduction_reelle'] ?>€.">
			<th scope="col" class="rose"><?php echo $pack_personne['NOM'] ?></th>
			<th scope="col"><?php echo $pack_personne['DUREE'] ?></th>
			<th scope="col"><?php echo $pack_personne['PRIX_BASE'] ?>€</th>
			<th scope="col"><?php echo $pack_personne['REDUCTION'] ?>%</th>
			<th title="Soit une réduction de <?php echo $pack_personne['reduction_reelle'] ?>€." scope="col"><?php echo $pack_personne['prix_reel'] ?>€</th>
			<th title="<?php echo $pack_personne['DATE_ACHAT'] ?>" scope="col" class="rose"><?php echo $pack_personne['DATE_ACHAT_simple'] ?></th>
			<th title="<?php echo $pack_personne['DATE_DEBUT'] ?>" scope="col" class="valide"><?php echo $pack_personne['DATE_DEBUT_simple'] ?></th>
			<th title="<?php echo $pack_personne['DATE_FIN'] ?>" scope="col" class="orange"><?php echo $pack_personne['DATE_FIN_simple'] ?></th>
		</tr>
		<tr><th colspan="9"><hr /></th></tr>
		<?php
		}
		?>
		</table>
		<br />
		<?php
		if($nb_result[0]['nb_pack'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_pack'], $page_actuelle);
		}
		?>
	<br />
	</fieldset><br />
	<br />
	<br />
	<fieldset id="achat_pack" class="padding_LR"><legend class="legend_basique">Activer un pack:</legend><br />
		<?php
			if(isset($_SESSION['historique_achat_pack']['message']) && $_SESSION['historique_achat_pack']['message_affiche'] == false){
				echo $_SESSION['historique_achat_pack']['message'];
				$_SESSION['historique_achat_pack']['message_affiche'] = true;
			}
		?>
		<br />
		Vous pouvez activer ici le pack sélectionné.<br />
		Cette opération peut-être utile si vous souhaitez, par exemple, activer un pack Live Max alors que vous êtes sous un pack Live Small/Medium.<br />
		<br />
		Cette opération <span class="orange">mettra fin à votre pack actuel</span>, le temps qu'il reste sur votre pack actuel <span class="orange">sera perdu et non remboursable.</span><br />
		<br />
		<span class="orange">Cette opération étant irréversible <span class="petit">(à moins de contacter le service client)</span> veuillez faire attention à ce que vous faites.</span><br />
		<br />
		<?php
		if($nb_packs_activables != 0){
		?>
		<form name="form_activer_pack" id="form_activer_pack" method="post" action="script_historique_achat_pack_activer_pack.php">
			<select name="form_activer_pack_date_achat">
				<?php
				foreach($packs_personne as $key=>$pack_personne){
					if($now_formatee < $pack_personne['DATE_DEBUT_formatee']){
					?>
						<option value="<?php echo $pack_personne['DATE_ACHAT_en'] ?>">Pack <?php echo $pack_personne['NOM'] ?>, acheté le <?php echo $pack_personne['DATE_ACHAT'] ?>. (à <?php echo $pack_personne['prix_reel'] ?>€)</option>
					<?php
					}#Fin du if
				}#Fin du foreach
				?>
			</select>
			&nbsp;&nbsp;<input type="image" src="images/ok.gif" alt="Activer le pack" title="Activer le pack" onclick="return confirm('Voulez vous vraiment activer ce pack maintenant ?\nCette opération mettra définitivement fin à votre pack actuel et activera le pack sélectionné.\n');" />
			<br />
		</form>
		<?php
		}else{
			echo "<br /><center><span class='orange'>Il n'y a pas de pack d'activable pour le moment.</span></center><br />";
		}
		?>
		<br />
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Historique des annonces publiées:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['historique_annonce']['message']) && $_SESSION['historique_annonce']['message_affiche'] == false){
		echo $_SESSION['historique_annonce']['message'];
		$_SESSION['historique_annonce']['message_affiche'] = true;
	}
	?>
	<?php
		if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
		}
	?>
	<table width="100%">
		<tr class="valide">
			<th scope="col">Titre:</th>
			<th scope="col">Date de création:</th>
			<th scope="col">Date de début:</th>
			<th scope="col">Type:</th>
			<th scope="col">Statut</th>
			<th scope="col">Voir</th>
		</tr>
		
		<?php
		if($nb_result[0]['nb_annonce'] == 0){
		?>
			<tr><td colspan="6"><hr /></td></tr>
			<tr><td colspan="6"><br /></td></tr>
			<tr><td colspan="6"><center class='orange'>Vous n'avez pas publié d'annonce.</center></td></tr>
		<?php
		}
		
		foreach($annonces as $key=>$annonce){
		?>
		<tr><td colspan="6"><hr /></td></tr>
		<tr height="50px">
			<th scope="row" class="rose"><?php echo $annonce['TITRE']; ?></th>
			<th scope="row"><?php echo $annonce['DATE_ANNONCE']; ?></th>
			<th scope="row" title="Fin: <?php echo $annonce['DATE_FIN']; ?>"><?php echo $annonce['DATE_DEBUT']; ?></th>
			<th scope="row"><?php echo $annonce['TYPE_ANNONCE']; ?></th>
			<th scope="row" <?php if($annonce['STATUT'] == "Validée"){echo "class='valide'";}else if($annonce['STATUT'] == "Refusée"){echo "class='alert'";} ?>><?php echo $annonce['STATUT']; ?></th>
			<th scope="row">
				<?php 
				if($annonce['STATUT'] != "Validée"){
				?>
					<a href="<?php echo $oCL_page->getPage('modifier_fiche_annonce')."?id_annonce=".$annonce['ID_ANNONCE'];?>">
				<?php
				}else{
				?>
					<a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce['ID_ANNONCE'];?>">
				<?php 
				}
				?>
					<img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Voir l'annonce" title="Voir l'annonce" />
				</a>
			</th>
		</tr>
		<?php
		}# Fin du foreach.
		?>
	</table>
	
	
	<?php
		if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
		}
	?>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Historique de mes contrats:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['historique_contrat']['message']) && $_SESSION['historique_contrat']['message_affiche'] == false){
		echo $_SESSION['historique_contrat']['message'];
		$_SESSION['historique_contrat']['message_affiche'] = true;
	}
	?>
	<?php
		if($nb_result[0]['nb_contrat'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_contrat'], $page_actuelle);
		}
	?>
	<fieldset class="padding_LR"><legend class="legend_basique">Historique</legend><br />
		<br />
		<table width="100%" >
		  <tr>
				<th scope="col" width="25%">Annonce</th>
				<th scope="col" width="10%">Contrat avec</th>
				<th scope="col" width="34%">Date de création</th>
				<th scope="col" width="15%">Statut</th>
				<th scope="col" width="8%">Voir</th>
				<th scope="col" width="8%">PDF</th>
			</tr>
			<?php
			if($nb_result[0]['nb_contrat'] == 0){
			?>
					<tr><th colspan="6"><hr /></th></tr>
					<tr><th colspan="6" class="orange" height="40px"><?php if(isset($_GET['rq']) && $_GET['rq'] == "toutes"){?>Vous n'avez jamais effectué de contrat.<?php }else{?>Vous n'avez aucun contrat en cours.<?php }?></th></tr>
			<?php
			}
			foreach($contrats as $key=>$contrat){
				# On récupère la personne qui fait ce contrat avec la personne connectée.				
				$oMSG->setData('ID_CONTRAT', $contrat['ID_CONTRAT']);
				$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
				
				$id_contractant = $oPCS_contrat->fx_recuperer_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
				
				$oMSG->setData('ID_PERSONNE', $id_contractant[0]['ID_PERSONNE']);
				
				$contractant = $oPCS_personne->fx_recuperer_compte_min_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			?>
				<tr><th colspan="6"><hr /></th></tr>
				<tr>
					<th scope="row"><a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$contrat['ID_ANNONCE']; ?>"><?php echo $contrat['TITRE']; ?></a></th>
					<th scope="row">
						<?php 
						if($contractant[0]['TYPE_PERSONNE'] == "Prestataire" || $contractant[0]['TYPE_PERSONNE'] == "Admin"){
						?>
							<a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$contractant[0]['ID_PERSONNE']; ?>"><?php echo $contractant[0]['PSEUDO']; ?></a>
						<?php
						}else{
							if($_SESSION['pack']['CV_ACCESSIBLE'] >= 2){
								echo $contractant[0]['PSEUDO'];
							}else{
								echo "Membre N°".$contractant[0]['ID_PERSONNE'];
							}
						}
						?>
					</th>
					<td title="<?php echo $contrat['DATE_CONTRAT']; ?>"><center><?php echo $contrat['DATE_CONTRAT_simple']; ?><center></td>
					<th class="<?php if($contrat['STATUT_CONTRAT'] == "Annulé"){echo "alert";}else if($contrat['STATUT_CONTRAT'] == "Refusé"){echo "orange";}else if($contrat['STATUT_CONTRAT'] == "Validé"){echo "rose";}else{} ?>"><?php echo $contrat['STATUT_CONTRAT']; ?></th>
					<th><a href="<?php echo $oCL_page->getPage('contrat')."?id_contrat=".$contrat['ID_CONTRAT']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="" title="" /></a></th>
					<?php
					if(($contrat['STATUT_CONTRAT'] == "Validé" || $contrat['STATUT_CONTRAT'] == "Annulé après validation")&& $_SESSION['pack']['CONTRATS_PDF'] == true){
					?>
						<th><a href="<?php echo $oCL_page->getPage('contrat_pdf')."?id_contrat=".$contrat['ID_CONTRAT']; ?>"><img src="<?php echo $oCL_page->getImage('pdf'); ?>" alt="Télécharger en PDF" title="Télécharger en PDF" /></a></th>
					<?php
					}else if($_SESSION['pack']['CONTRATS_PDF'] != true){
					?>
						<th><img src="<?php echo $oCL_page->getImage('pdf_non'); ?>" alt="Votre pack ne vous permet pas de bénéficier de cette fonctionnalité !" title="Votre pack ne vous permet pas de bénéficier de cette fonctionnalité !" /></th>
					<?php
					}else{
					?>
						<th><img src="<?php echo $oCL_page->getImage('pdf_non'); ?>" alt="Le contrat n'a pas encore été validé ! Vous ne pouvez pas télécharger le .pdf !" title="Le contrat n'a pas encore été validé ! Vous ne pouvez pas télécharger le .pdf !" /></th>
					<?php
					}
					?>
				</tr>
			<?php
			}
			?>
		</table>
		<br />
	</fieldset>
	
	
	
	
	
	
	
	<?php
		if($nb_result[0]['nb_contrat'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_contrat'], $page_actuelle);
		}
	?>


<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

require_once('script_prechargement_inscription.php');

# On définit la page en cours:
$_SESSION['page_actuelle'] = "inscription";

# Si le compte n'a pas encore été crée on le crée et on le classe déconnecté.
if(!isset($_SESSION['compte'])){
	$_SESSION['compte'] = array();
	$_SESSION['compte']['connecté'] = false;
	$_SESSION['compte']['première_visite'] = false;
}

# Si on active un compte.
if(isset($_GET['email']) && isset($_GET['cle_activation'])){
	
	if(filter_var($_GET['email'], FILTER_VALIDATE_EMAIL)){
		$nb_caracteres = strlen("7849b20c1ec4652f35542e722bb28a09d9ce79bb");# On prend un exemple d'un clé fournie et on compte le nb de caractères.
		if(strlen($_GET['cle_activation']) == $nb_caracteres){
		
			# On appelle une fonction du script_prechargement_inscription.php qui va se charger du reste.
			fx_activer_compte($_GET['email'], $_GET['cle_activation']);
		}else{
			echo "La validation de votre compte a échoué.";
		}
	}else{
		echo "La validation de votre compte a échoué.";
	}

	$_SESSION['compte']['première_visite'] = false;

	
}else if($_SESSION['compte']['première_visite'] == true){
	$_SESSION['compte']['première_visite'] = false;
	echo $_SESSION['compte']['première_visite_message'];
	
}else if($_SESSION['compte']['connecté'] == false){
	# On teste si l'utilisateur est déjà connecté.
	?>
	<h2 id="inscriptionh2">Inscription:</h2>

	Bonjour et bienvenue sur LiveAnim ! Le site privilégié des rencontres entres artistes et organisateurs de soirées en tout genre.

	<br />
	<a href="<?php echo $oCL_page->getPage('cgu'); ?>" target="_blank">Consulter/télécharger les conditions générales d'utilisation.</a>

	<br />
	<?php
		if(isset($_GET['parrain'])){
			$_SESSION['parrain'] = array();
			$_SESSION['parrain']['ID_PARRAIN'] = (int)$_GET['parrain'];	
		}
	?>
	<br />
	<div>
		<p>
			<?php # On affiche les messages d'erreurs/réussite s'il y en a.
				if(isset($_SESSION['inscription']['message'])){
					if($_SESSION['inscription']['message_affiche'] == false){
						echo $_SESSION['inscription']['message'];
						$_SESSION['inscription']['message_affiche'] = true;
					}
				}
			?>
		</p>
	</div>
	<br />
	<div class="formulaire_inscription">
		<img src="images/fond_inscription_haut.jpg" alt="Fond inscription haut" />
		
		<br /><br />
			<form class="formulaire" action="script_inscription.php" method="post" id="form_inscription" name="form_inscription">
				
				<input class="my_input" type="hidden" name="form_inscription_parrain" id="form_inscription_parrain" value="<?php if(isset($_SESSION['parrain']['ID_PARRAIN'])){ echo $_SESSION['parrain']['ID_PARRAIN'];} ?>" />
				<?php if(isset($_SESSION['parrain']['ID_PARRAIN']) && $_SESSION['parrain']['ID_PARRAIN'] != 0){echo "Vous allez parrainer un ami lors de votre inscription, il vous en remercie !";}else if(isset($_SESSION['parrain']['ID_PARRAIN']) && $_SESSION['parrain']['ID_PARRAIN'] == 0){echo "Le numéro du parrain est invalide, triche ou erreur ? :) Contactez nous si vous n'y êtes pour rien."; }else{echo "<span class='petit'>Vous ne parrainez personne.</span>";} ?>
				<br /><br /><img class="fright" src="images/disco ball.png" alt="Disco Ball" />

				<label for="form_inscription_login"><span class="alert">*</span> Pseudo:</label><br />
				&nbsp;&nbsp;<input onblur="fx_verif_champ_simple('pseudo', 'form_inscription_login');" class="my_input" type="text" name="form_inscription_login" id="form_inscription_login" value="<?php if(isset($_SESSION['inscription']['login'])){ echo $_SESSION['inscription']['login'];} ?>" autofocus /><br />
				<div id="pseudo"></div>
				<br />
				<label for="form_inscription_nom"><span class="alert">*</span> Nom:</label><br />
				&nbsp;&nbsp;<input onblur="fx_verif_champ_simple('nom', 'form_inscription_nom');" class="my_input" type="text" name="form_inscription_nom" id="form_inscription_nom" value="<?php if(isset($_SESSION['inscription']['nom'])){ echo $_SESSION['inscription']['nom'];} ?>" />
				<br />
				<div id="nom"></div>
				<br />
				<label for="form_inscription_prenom"><span class="alert">*</span> Prénom:</label><br />
				&nbsp;&nbsp;<input onblur="fx_verif_champ_simple('prenom', 'form_inscription_prenom');" class="my_input" type="text" name="form_inscription_prenom" id="form_inscription_prenom" value="<?php if(isset($_SESSION['inscription']['prenom'])){ echo $_SESSION['inscription']['prenom'];} ?>" />
				
				<br />
				<div id="prenom"></div>
				<br />
				<span class="alert">*</span> Civilité:<br />
				&nbsp;&nbsp;<select class="my_input" name="form_inscription_civilite" id="form_inscription_civilite">
					<option value="Mr" <?php if(isset($_SESSION['inscription']['civilite'])){ if($_SESSION['inscription']['civilite'] == "Mr"){echo "selected='selected'";}} ?>>Monsieur</option>
					<option value="Mme" <?php if(isset($_SESSION['inscription']['civilite'])){ if($_SESSION['inscription']['civilite'] == "Mme"){echo "selected='selected'";}} ?>>Madame</option>
					<option value="Mlle" <?php if(isset($_SESSION['inscription']['civilite'])){ if($_SESSION['inscription']['civilite'] == "Mlle"){echo "selected='selected'";}} ?>>Mademoiselle</option>
				</select>
				
				<br /><br />
				<span class="alert">*</span> Je suis un :<br />
				&nbsp;&nbsp;<select class="my_input" name="form_inscription_type_personne" id="form_inscription_type_personne">
					<option value="Prestataire" <?php if(isset($_SESSION['inscription']['type_personne'])){ if($_SESSION['inscription']['type_personne'] == "Prestataire"){echo "selected='selected'";}} ?>>Prestataire / Artiste</option>
					<option value="Organisateur" <?php if(isset($_SESSION['inscription']['type_personne'])){ if($_SESSION['inscription']['type_personne'] == "Organisateur"){echo "selected='selected'";}} ?>>Organisateur de soirée</option>
				</select>
				
				<br /><br />
				<label for="form_inscription_mdp"><span class="alert">*</span> Mot de passe:</label><br />
				&nbsp;&nbsp;<input onchange="fx_verif_champ_double('mdp2', 'form_inscription_mdp', 'form_inscription_mdp2');" onblur="fx_verif_champ_simple('mdp', 'form_inscription_mdp');" class="my_input" type="password" name="form_inscription_mdp" id="form_inscription_mdp" value="<?php if(isset($_SESSION['inscription']['mdp'])){ echo $_SESSION['inscription']['mdp'];} ?>" />
				
				<br />
				<div id="mdp"></div>
				<br />
				<label for="form_inscription_mdp2"><span class="alert">*</span> Retapez votre mot de passe:</label><br />
				&nbsp;&nbsp;<input onchange="fx_verif_champ_double('mdp2', 'form_inscription_mdp', 'form_inscription_mdp2');" class="my_input" type="password" name="form_inscription_mdp2" id="form_inscription_mdp2" value="<?php if(isset($_SESSION['inscription']['mdp2'])){ echo $_SESSION['inscription']['mdp2'];} ?>" />
				
				<br />
				<div id="mdp2"></div>
				<br />
				<label for="form_inscription_email"><span class="alert">*</span> Adresse e-mail <span class="petit">(Valide !)</span>: </label><br />
				&nbsp;&nbsp;<input onblur="fx_verif_champ_email('email', 'form_inscription_email');fx_verif_champ_double('email2', 'form_inscription_email', 'form_inscription_email2');" class="my_input" type="text" name="form_inscription_email" id="form_inscription_email" value="<?php if(isset($_SESSION['inscription']['email'])){ echo $_SESSION['inscription']['email'];} ?>" />
				
				<br />
				<div id="email"></div>
				<br />
				<label for="form_inscription_email2"><span class="alert">*</span> Retapez votre adresse e-mail:</label><br />
				&nbsp;&nbsp;<input onblur="fx_verif_champ_email('email2', 'form_inscription_email2');fx_verif_champ_double('email2', 'form_inscription_email', 'form_inscription_email2');" class="my_input" type="text" name="form_inscription_email2" id="form_inscription_email2" value="<?php if(isset($_SESSION['inscription']['email2'])){ echo $_SESSION['inscription']['email2'];} ?>" />
				
				<br />
				<div id="email2"></div>
				<br />
				<div id="cgu">
				<span class="alert">*</span> Vous devez accepter les <a href="<?php echo $oCL_page->getPage('cgu'); ?>" target="_blank">Conditions générales d'utilisation</a>:<br />
				&nbsp;&nbsp;<select class="my_input" name="form_inscription_cgu" id="form_inscription_cgu"><option value="1" <?php if(isset($_SESSION['inscription']['cgu']) && $_SESSION['inscription']['cgu'] == "1"){echo "selected='selected'";} ?>>J'accepte</option><option value="0" <?php if(!isset($_SESSION['inscription']['cgu'])){echo "selected='selected'";}else{if($_SESSION['inscription']['cgu'] == "0"){echo "selected='selected'";}} ?>>Je refuse</option></select>
				</div><br /><br />
				
				<u>Options:</u><br />
				<input type="checkbox" id="form_inscription_newsletter" name="form_inscription_newsletter" <?php if(isset($_SESSION['inscription']['newsletter'])){ if($_SESSION['inscription']['newsletter'] == true){echo "checked='checked'";}}else{echo "checked='checked'";} ?>> <label for="form_inscription_newsletter">Je souhaite recevoir les Newsletter de LiveAnim. <span class="petit">(Conseillé !)</span></label><br />
				<input type="checkbox" id="form_inscription_offres_annonceurs" name="form_inscription_offres_annonceurs" <?php if(isset($_SESSION['inscription']['offres_annonceurs'])){ if($_SESSION['inscription']['offres_annonceurs'] == true){echo "checked='checked'";}} ?>> <label for="form_inscription_offres_annonceurs">Je souhaite recevoir les offres des annonceurs de LiveAnim.</label><br />
				<br /><br />
				
				S'il vous plaît, où avez vous connu notre site ?<br />
				<select class="my_input" name="form_inscription_connaissance_site" id="form_inscription_connaissance_site">
					<?php # On autogénère toutes les réponses
						foreach($connaissance_site as $key=> $connaissance_site_actuel){
					?>
						<option value="<?php echo $connaissance_site_actuel['ID_TYPES']; ?>" <?php if(isset($_SESSION['inscription']['connaissance_site'])){if($connaissance_site_actuel['ID_TYPES'] == $_SESSION['inscription']['connaissance_site']){echo "selected='selected'";}}else if($connaissance_site_actuel['ID_TYPES'] == "Facebook"){echo "selected=''selected";} ?>><?php echo $connaissance_site_actuel['ID_TYPES']; ?></option>
					<?php
						}
					?>
				</select>
				<br />
				
				<span class="fright"><span class="alert">* </span>: Champ obligatoire&nbsp;</span>
				<br /><br />
				<center>
					<input type="image" src="images/valider.png" alt="Valider" name="btn_form_inscription_valider" id="btn_form_inscription_valider" value="Valider l'inscription" />
				</center>
				
			</form>
			<img src="images/fond_inscription_bas.jpg" alt="Fond inscription bas" />
		
	</div>
	<br />
	<br />
	<br />
<?php
}else{
?>
Vous êtes déjà connecté <?php echo $_SESSION['compte']['PSEUDO']; ?>, redirection en cours.
<?php
header ("Refresh: 1;URL=".$oCL_page->getPage('accueil'));
}<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Mon lien de parrainage:</h2><br />
	<br />
	Voici votre lien de parrainage, il vous suffit ce copier-coller le code fournit selon l'utilisation voulue afin que l'image apparaisse.<br />
	<?php
	if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire"){
	?>
	À noter que plus votre pack est important plus le choix ci-dessous sera important. <br /><span class="petit">25/09/2011: Pour le moment aucune différence mais des ajouts selon les packs sont prévus à long terme.)</span><br />
	<?php
	}
	?>
	<br />
	<a href="<?php echo $lien ?>"><img src="<?php echo $image ?>" alt="Parrainez <?php echo $_SESSION['compte']['PSEUDO']; ?> !" title="Parrainez <?php echo $_SESSION['compte']['PSEUDO']; ?> !" /></a><br />
	<br />
	Code pour les sites webs (HTML):<br />
	<textarea cols="80" rows="5"><a href="<?php echo $lien ?>"><img src="<?php echo $image ?>" alt="Parrainez <?php echo $_SESSION['compte']['PSEUDO']; ?> !" title="Parrainez <?php echo $_SESSION['compte']['PSEUDO']; ?> !" /></a>
	</textarea><br />
	<br />
	<hr />
	<br />
	<a href="<?php echo $lien ?>">Parrainez <?php echo $_SESSION['compte']['PSEUDO']; ?> !</a><br />
	<br />
	Lien hypertexte simple:<br />
	<textarea cols="80" rows="5"><a href="<?php echo $lien ?>">Parrainez <?php echo $_SESSION['compte']['PSEUDO']; ?> !</a>
	</textarea><br />
	<br />

<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

// Cette page est en libre accès.

?>
<h2>Annonces:</h2><br />
<br />

<strong><u>Recherche d'annonce:</u></strong>&nbsp;&nbsp;&nbsp;<img id="img_plus_moins" onclick="fx_affiche('recherche_annonce', 'img_plus_moins');" src="<?php echo $oCL_page->getImage('petit_plus'); ?>" alt="Afficher/Cacher le formulaire de recherche" title="Afficher/Cacher le formulaire de recherche" /><br />
<div id="recherche_annonce">
	<br />
	<form class="formulaire" action="script_recherche_annonce.php" method="post" id="form_recherche_annonce">
		Je cherche une annonce qui commence entre le <input onblur="fx_verif_champ_date('date_debut', 'form_recherche_annonce_date_debut', 0);fx_verif_date_superieure('date_fin', 'form_recherche_annonce_date_debut', 'form_recherche_annonce_date_fin', 0);"" type="text" name="form_recherche_annonce_date_debut" id="form_recherche_annonce_date_debut" value="<?php if(isset($_SESSION['recherche_annonce']['DATE_DEBUT'])){echo $DATE_DEBUT_simple;}else{echo $now_court;} ?>" size="7" /> et le <input onblur="fx_verif_date_superieure('date_fin', 'form_recherche_annonce_date_debut', 'form_recherche_annonce_date_fin', 0);" type="text" name="form_recherche_annonce_date_fin" id="form_recherche_annonce_date_fin" value="<?php if(isset($_SESSION['recherche_annonce']['DATE_FIN'])){echo $DATE_FIN_simple;}else{echo "01-01-2020";} ?>" size="7" />.<br />
		<div id="date_debut"></div>
		<div id="date_fin"></div>
		<br />
		Type:&nbsp;<select name="form_recherche_annonce_type_annonce" id="form_recherche_annonce_type_annonce">
			<option value="*" selected="selected">Tous</option>
		<?php
		foreach($types_annonce as $key=>$type_annonce){
		?>
			<option value="<?php echo $type_annonce['ID_TYPES'] ?>" <?php if(isset($_SESSION['recherche_annonce']['TYPE_ANNONCE']) && $_SESSION['recherche_annonce']['TYPE_ANNONCE'] == $type_annonce['ID_TYPES']){echo "selected='selected'";} ?>><?php echo $type_annonce['ID_TYPES'] ?></option>
		<?php
		}
		?>
		</select><br />
		<br />
		Tarif minimal: <input type="text" name="form_recherche_annonce_budget" id="form_recherche_annonce_budget" value="<?php if(isset($_SESSION['recherche_annonce']['BUDGET'])){echo $_SESSION['recherche_annonce']['BUDGET'];}else{echo "0";} ?>" size="4" />&nbsp;€<br />
		<br />
		Code postal ou nom de la ville: <input type="text" name="form_recherche_annonce_cp_ville" id="form_recherche_annonce_cp_ville" value="<?php if(isset($_SESSION['recherche_annonce']['CP_VILLE'])){echo $_SESSION['recherche_annonce']['CP_VILLE'];}else{echo "";} ?>" /><br />
		<br />
		<center>
			<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Lancer la recherche" title="Lancer la recherche" />					
		</center>
	</form>
	<br />
	<br />
</div>
<br />
<?php
if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
	$path_parts = pathinfo($_SERVER['PHP_SELF']);
	$page = $path_parts["basename"];
	$page_actuelle = ($limite/$nb_result_affiches)+1;
	afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
}
?>
<fieldset class="padding_LR"><legend class="legend_basique">Annonces trouvées:</legend><br />
	<br />
	<?php
	if($nb_result[0]['nb_annonce'] == 0){
	?>
		<div class="orange">
		<center>Il n'y a pas d'annonce qui corresponde à vos critères de recherche.</center><br />
		</div>
	<?php
	}
	foreach($annonces as $key=>$annonce){
	?>
		<div class="padding_LR">
			<img class="fleft" width="150px" height="150px" alt="Image annonce" src="<?php echo $oCL_page->getImage('disco1'); ?>" />
			<div class="fleft" style="padding: 0 10px 0 10px;color:#F300FF">Annonce postée le <?php echo $annonce['DATE_ANNONCE'] ?>.</div><br />
			<b style="padding-left:5%"><u><a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce['ID_ANNONCE']; ?>"><?php echo $annonce['TITRE']; ?></a></u></b><br />
			<br />
			<div style="padding-left:30%;padding-right:10px;"><?php echo substr($annonce['DESCRIPTION'], 0, 100)." ..."; ?></div><br />
			<div style="padding-left:30%;padding-right:10px;">La représentation débute le <?php echo $annonce['DATE_DEBUT']; ?>, elle aura lieue à <?php echo $annonce['VILLE']." <span class='petit'>(".$annonce['CP'].").</span>"; ?></div>
			<div style="padding-left:80%;padding-right:10px;"><a  title="Les détails de l'annonce dépendront de votre pack si vous êtes un artiste. Les organisateurs n'ont accès qu'au strict minimum." href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$annonce['ID_ANNONCE']; ?>" class="link3" <?php if(isset($_SESSION['pack']['NB_FICHES_VISITABLES']) && $_SESSION['pack']['NB_FICHES_VISITABLES'] < 100 && !in_array($annonce['ID_ANNONCE'], $_SESSION['compte']['annonces_visitées'])){?>onclick="return confirm('Vous pouvez actuellement visiter <?php echo $_SESSION['pack']['NB_FICHES_VISITABLES']; ?> annonces. Visiter l'annonce diminuera votre quota, souhaitez-vous continuer ?');"<?php }?>>Voir l'annonce</a></div><br/>
			<?php
			if(isset($_SESSION['pack']['PREVISUALISATION_FICHES']) && $_SESSION['pack']['PREVISUALISATION_FICHES'] == true){
			?>
				<fieldset class="padding_LR"><legend class="legend_basique">Informations&nbsp;supplémentaires:</legend><br />
					Il y a actuellement <?php echo $annonce['nb_contrat']; ?> contrats en cours pour cette annonce.<br />
					Le budget prévu par l'organisateur est de <b><?php echo $annonce['BUDGET']; ?>€</b>. Il y aura environ <b><?php echo $annonce['NB_CONVIVES']; ?> invités.</b><br />
					<br />
					
				</fieldset>
				<br />
				<hr />
			<?php
			}
			?>
			<br class="clear" />
		</div>
	<?php
	}
	?>
</fieldset>


<?php
if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
	$path_parts = pathinfo($_SERVER['PHP_SELF']);
	$page = $path_parts["basename"];
	$page_actuelle = ($limite/$nb_result_affiches)+1;
	afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
}
?>

<script type="text/javascript">
	initialiser_div('recherche_annonce');
</script><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Toutes les annonces:</h2><br />
	<br />
	<fieldset><legend class="legend_basique">Annonces</legend><br />
	<br />
	<?php
		if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
		}
	?>
	<table width="100%">
		<tr class="formulaire">
			<th width="25%" scope="col">Titre:</th>
			<th width="25%" scope="col">Créateur:</th>
			<th width="10%" scope="col">Type:</th>
			<th width="20%" scope="col">Date de création:</th>
			<th width="10%" scope="col">Statut:</th>
			<th width="10%" scope="col">Voir:</th>
		</tr>
		<?php
		if($nb_result[0]['nb_annonce'] == 0){
		?>
				<tr><th colspan="6"><hr /></th></tr>
				<tr><th colspan="6" class="orange" height="40px">Il n'y a aucune annonce en attente.</th></tr>
		<?php
		}
		?>
	  <?php
	  foreach($annonces as $key=>$annonce){
	  ?>
		<tr><td colspan="6"><hr /></td></tr>
		<tr>
			<th class="rose" scope="row"><?php echo $annonce['TITRE']; ?></th>
			<th title="Personne N°<?php echo $annonce['ID_PERSONNE']; ?>"><a href="<?php echo $oCL_page->getPage('modifier_fiche_membre', 'absolu')."?id_personne=".$annonce['ID_PERSONNE']; ?>"><?php echo $annonce['PSEUDO']; ?></a></th>
			<th><?php echo $annonce['TYPE_ANNONCE']; ?></th>
			<th><?php echo $annonce['DATE_ANNONCE']; ?></th>
			<th <?php if($annonce['STATUT'] == "En cours"){echo "class='valide'";}else if($annonce['STATUT'] == "Refusée"){echo "class='alert'";} ?>><?php echo $annonce['STATUT']; ?></th>
			<th><a href="<?php echo $oCL_page->getPage('modifier_fiche_annonce_by_admin')."?id_annonce=".$annonce['ID_ANNONCE']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Voir l'annonce de <?php echo $annonce['PSEUDO']; ?> (N°<?php echo $annonce['ID_ANNONCE']; ?>)" title="Voir l'annonce de <?php echo $annonce['PSEUDO']; ?> (N°<?php echo $annonce['ID_ANNONCE']; ?>)" /></a></th>
		</tr>
  <?php
  }
  ?>
		
</table>
<br />
</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Liste des annonces non activées:</h2><br />
	<br />
	<fieldset><legend class="legend_basique">Liste des annonces</legend><br />
	<br />
	<?php
		if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
		}
	?>
	<table width="100%">
		<tr class="formulaire">
			<th width="25%" scope="col">Titre:</th>
			<th width="25%" scope="col">Créateur:</th>
			<th width="10%" scope="col">Type:</th>
			<th width="20%" scope="col">Date de création:</th>
			<th width="10%" scope="col">Statut:</th>
			<th width="10%" scope="col">Voir:</th>
		</tr>
		<?php
		if($nb_result[0]['nb_annonce'] == 0){
		?>
				<tr><th colspan="6"><hr /></th></tr>
				<tr><th colspan="6" class="orange" height="40px">Il n'y a aucune annonce en attente.</th></tr>
		<?php
		}
		?>
		<?php
		foreach($annonces as $key=>$annonce){
		?>
			<tr><td colspan="6"><hr /></td></tr>
			<tr>
				<th class="rose" scope="row"><?php echo $annonce['TITRE']; ?></th>
				<th title="Personne N°<?php echo $annonce['ID_PERSONNE']; ?>"><a href="<?php echo $oCL_page->getPage('modifier_fiche_membre', 'absolu')."?id_personne=".$annonce['ID_PERSONNE']; ?>"><?php echo $annonce['PSEUDO']; ?></a></th>
				<th><?php echo $annonce['TYPE_ANNONCE']; ?></th>
				<th><?php echo $annonce['DATE_ANNONCE']; ?></th>
				<th <?php if($annonce['STATUT'] == "En cours"){echo "class='valide'";}else if($annonce['STATUT'] == "Refusée"){echo "class='alert'";} ?>><?php echo $annonce['STATUT']; ?></th>
				<th><a href="<?php echo $oCL_page->getPage('modifier_fiche_annonce_by_admin')."?id_annonce=".$annonce['ID_ANNONCE']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Voir l'annonce de <?php echo $annonce['PSEUDO']; ?> (N°<?php echo $annonce['ID_ANNONCE']; ?>)" title="Voir l'annonce de <?php echo $annonce['PSEUDO']; ?> (N°<?php echo $annonce['ID_ANNONCE']; ?>)" /></a></th>
			</tr>
		<?php
		}
		?>
		
	</table>
	<br />
</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Liste des annonces non activées:</h2><br />
	<br />
	<fieldset><legend class="legend_basique">Liste des annonces</legend><br />
	<br />
	<?php
		if($nb_result[0]['nb_annonce'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_annonce'], $page_actuelle);
		}
	?>
	<table width="100%">
		<tr class="formulaire">
			<th width="25%" scope="col">Titre:</th>
			<th width="25%" scope="col">Créateur:</th>
			<th width="10%" scope="col">Type:</th>
			<th width="20%" scope="col">Date de création:</th>
			<th width="10%" scope="col">Statut:</th>
			<th width="10%" scope="col">Voir:</th>
		</tr>
		<?php
		if($nb_result[0]['nb_annonce'] == 0){
		?>
				<tr><th colspan="6"><hr /></th></tr>
				<tr><th colspan="6" class="orange" height="40px">Il n'y a aucune annonce en attente.</th></tr>
		<?php
		}
		?>
		<?php
		foreach($annonces as $key=>$annonce){
		?>
			<tr><td colspan="6"><hr /></td></tr>
			<tr>
				<th class="rose" scope="row"><?php echo $annonce['TITRE']; ?></th>
				<th title="Personne N°<?php echo $annonce['ID_PERSONNE']; ?>"><a href="<?php echo $oCL_page->getPage('modifier_fiche_membre', 'absolu')."?id_personne=".$annonce['ID_PERSONNE']; ?>"><?php echo $annonce['PSEUDO']; ?></a></th>
				<th><?php echo $annonce['TYPE_ANNONCE']; ?></th>
				<th><?php echo $annonce['DATE_ANNONCE']; ?></th>
				<th <?php if($annonce['STATUT'] == "En cours"){echo "class='valide'";}else if($annonce['STATUT'] == "Refusée"){echo "class='alert'";} ?>><?php echo $annonce['STATUT']; ?></th>
				<th><a href="<?php echo $oCL_page->getPage('modifier_fiche_annonce_by_admin')."?id_annonce=".$annonce['ID_ANNONCE']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Voir l'annonce de <?php echo $annonce['PSEUDO']; ?> (N°<?php echo $annonce['ID_ANNONCE']; ?>)" title="Voir l'annonce de <?php echo $annonce['PSEUDO']; ?> (N°<?php echo $annonce['ID_ANNONCE']; ?>)" /></a></th>
			</tr>
		<?php
		}
		?>
		
	</table>
	<br />
</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

?>
	<h2>Artistes:</h2><br />
	<br />
	<strong><u>Recherche d'artistes:</u></strong>&nbsp;&nbsp;&nbsp;<img id="img_plus_moins" onclick="fx_affiche('recherche_artiste', 'img_plus_moins');" src="<?php echo $oCL_page->getImage('petit_plus'); ?>" alt="Afficher/Cacher le formulaire de recherche" title="Afficher/Cacher le formulaire de recherche" /><br />
	<div id="recherche_artiste">
		<br />
		<form class="formulaire" action="script_recherche_artiste.php" method="post" id="form_recherche_artiste">
			Quels genre d'artiste recherchez vous ? <select name="form_recherche_artiste_role">
				<option value="">Tous</option>
				<?php
				foreach($types as $key=>$type){
				?>
					<option value="<?php echo $type['ID_TYPES']; ?>" <?php if($_SESSION['recherche_artiste']['ROLES'] == $type['ID_TYPES']){echo "selected='selected'";} ?>><?php echo $type['ID_TYPES']; ?></option>
				<?php
				}
				?>
			</select><br />
			<br />
			<label for="form_recherche_artiste_statut">Uniquement les artistes ayant un statut professionnel&nbsp;&nbsp;</label><input type="checkbox" name="form_recherche_artiste_statut" id="form_recherche_artiste_statut" <?php if($_SESSION['recherche_artiste']['STATUT_PERSONNE'] == "Pro"){echo "checked='checked'";} ?> /><br />
			<br />
			<label for="form_recherche_artiste_departements">Uniquement dans les départements suivants:</label><br />
			<span class="petit">(Rentrez les numéros des départements séparés par des virgules)</span><br />
			<input type="text" name="form_recherche_artiste_departements" id="form_recherche_artiste_departements" value="<?php if(isset($_SESSION['recherche_artiste']['DEPARTEMENTS'])){echo $_SESSION['recherche_artiste']['DEPARTEMENTS'];} ?>" /><br />
			<br />
			<center>
				<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Lancer la recherche" title="Lancer la recherche" />					
			</center>
		</form>
		<br />
		<br />
	</div>
	<br />
	
	<?php
		if(isset($_SESSION['liste_artiste']['message']) && $_SESSION['liste_artiste']['message_affiche'] == false){
			echo $_SESSION['liste_artiste']['message'];
			$_SESSION['liste_artiste']['message_affiche'] = true;
		}
	?>
	
	
	<?php
	if($nb_result[0]['nb_personne'] > $nb_result_affiches){
		$path_parts = pathinfo($_SERVER['PHP_SELF']);
		$page = $path_parts["basename"];
		$page_actuelle = ($limite/$nb_result_affiches)+1;
		afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_personne'], $page_actuelle);
	}
	?>
	
	<?php
	if(isset($_GET['role'])){
	?>
		<b>Voici la liste des <span class="rose"><?php echo $_GET['role']; ?></span></b>:<br />
		<br />
	<?php
	}
	?>
	
	<table id="resultats_recherche">
		<tr>
			<td colspan="5">
				<br /><hr /><br />
			</td>
		</tr>	
	<?php
	foreach($prestataires as $key=>$prestataire){
	?>
		<tr>
			<td width="15%">
				<img class="image_border" src="<?php if(!empty($prestataire['URL_PHOTO_PRINCIPALE'])){echo $prestataire['URL_PHOTO_PRINCIPALE'];}else{echo $oCL_page->getImage("avat_test1");} ?>" alt="<?php if($_SESSION['pack']['CV_VISIBILITE'] >= 4){echo "Photo de: ".$prestataire['PSEUDO'];}else{} ?>" title="<?php if($_SESSION['pack']['CV_VISIBILITE'] >= 4){echo "Photo de: ".$prestataire['PSEUDO'];}else{echo "Photo du membre N°".$prestataire['ID_PERSONNE'];} ?>" />
			</td>
			<th width="25%">
				<?php
				if($_SESSION['pack']['CV_VISIBILITE'] >= 4){
					echo $prestataire['CIVILITE']."<br />".$prestataire['NOM']."<br />".$prestataire['PRENOM']."<br /><br /><span class='petit'>(".$prestataire['PSEUDO'].")</span>";
				}else{
					echo "Membre N°".$prestataire['ID_PERSONNE'];
				}
				?>
			</th>
			<td width="30%">
				<?php 
				if($prestataire['STATUT_PERSONNE'] == "Pro"){
				?>
					<span class="valide">Ce prestataire possède un statut professionnel.</span>
				<?php
				}else{
				?>
					Ce prestataire ne possède pas de statut professionnel.
				<?php
				}
				?>
			</td>
			<th width="25%">
				<?php echo $prestataire['ROLES']; ?>
			</th>
			<th width="5%">
				<a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$prestataire['ID_PERSONNE']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Voir la fiche <?php if($_SESSION['pack']['CV_VISIBILITE'] >= 4){ echo "de ".$prestataire['PSEUDO'];}else{ echo "du membre N°".$prestataire['ID_PERSONNE'];} ?>" title="Voir la fiche <?php if($_SESSION['pack']['CV_VISIBILITE'] >= 4){ echo "de ".$prestataire['PSEUDO'];}else{ echo "du membre N°".$prestataire['ID_PERSONNE'];} ?>" /></a>
			</th>
		</tr>
		<tr>
			<td colspan="5">
				<br /><hr /><br />
			</td>
		</tr>	
	<?php
	}
	?>
	</table>
	
	<?php
	if($nb_result[0]['nb_personne'] > $nb_result_affiches){
		$path_parts = pathinfo($_SERVER['PHP_SELF']);
		$page = $path_parts["basename"];
		$page_actuelle = ($limite/$nb_result_affiches)+1;
		afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_personne'], $page_actuelle);
	}
	?>
	<br />
	<center class="petit noir">La recherche a retournée un total de <?php echo $nb_result[0]['nb_personne']; ?> résultat(s).</center><br />
	
	<script type="text/javascript">
		initialiser_div('recherche_artiste');
	</script>
	<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_contrats_admin.php');

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<?php
	if(isset($_GET['rq']) && $_GET['rq'] == 'en_cours'){
	?>
		<h2>Contrats en cours:</h2><br />
	<?php
	}else{
	?>
		<h2>Tous les contrats:</h2><br />
	<?php
	}
	?>
	
	<br />
	<fieldset><legend class="legend_basique">Contrats</legend><br />
	<br />
	<?php
		if($nb_result[0]['nb_contrat'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_contrat'], $page_actuelle);
		}
	?>
	<table width="100%">
		<tr class="formulaire">
			<th width="25%" scope="col">Contrat pour<br />l'annonce N°:</th>
			<th width="25%" scope="col">Date de création:</th>
			<th width="10%" scope="col">Prix:</th>
			<th width="20%" scope="col">Goldlive:</th>
			<th width="10%" scope="col">Statut:</th>
			<th width="10%" scope="col">Voir:</th>
		</tr>
		<?php
		if($nb_result[0]['nb_contrat'] == 0){
		?>
				<tr><th colspan="6"><hr /></th></tr>
				<?php
				if(isset($_GET['rq']) && $_GET['rq'] == 'en_cours'){
				?>
					<tr><th colspan="6" class="orange" height="40px">Il n'y a aucun contrat en attente.</th></tr>
				<?php
				}else{
				?>
					<tr><th colspan="6" class="orange" height="40px">Il n'y a aucun contrat existant.</th></tr>
				<?php
				}
				?>
		<?php
		}
		?>
		<?php
	    foreach($contrats as $key=>$contrat){
	    ?>
			<tr><td colspan="6"><hr /></td></tr>
			<tr>
				<th class="rose" scope="row"><a href="<?php echo $oCL_page->getPage('annonce').'?id_annonce='.$contrat['ID_ANNONCE']; ?>"><?php echo $contrat['TITRE']; ?></a></th>
				<th title="<?php echo $contrat['DATE_CONTRAT']?>"><?php echo $contrat['DATE_CONTRAT_simple']?></th>
				<th><?php echo $contrat['PRIX']; ?>€</th>
				<th><?php if($contrat['GOLDLIVE']){echo "<span class='rose'>Oui</span>";}else{echo "<span class='noir'>Non</span>";} ?></th>
				<th <?php if($contrat['STATUT_CONTRAT'] == "Validé"){echo "class='rose'";}else if($contrat['STATUT_CONTRAT'] == "Annulé"){echo "class='alert'";}else if($contrat['STATUT_CONTRAT'] == "Annulé après validation"){echo "class='orange'";} ?>><?php echo $contrat['STATUT_CONTRAT']; ?></th>
				<th><a href="<?php echo $oCL_page->getPage('contrat')."?id_contrat=".$contrat['ID_CONTRAT']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Voir le contrat" title="Voir le contrat" /></a></th>
			</tr>
	    <?php
	    }
	    ?>
		
	</table>
	<br />
</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
		
	
?>
	<h2>Liste des membres:</h2><br />
	<br />
	Voici la liste de tous les membres du site. Vous pouvez obtenir l'ID d'un membre en laissant le curseur sur son Pseudo.<br />
	Vous pouvez obtenir des informations supplémentaires en laissant le curseur sur le Statut.<br />
	Enfin, vous pouvez accéder directement à la fiche détaillée du membre afin de modifier certaines de ses informations.<br />
	<br />
	<fieldset><legend class="legend_basique">Liste des membres.</legend><br />
	<br />

	<?php
		if($nb_result[0]['nb_personne'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_personne'], $page_actuelle);
		}
	?>
	<br />
	<table width="100%" border="0" cellspacing="1" cellpadding="1">
		<tr class="valide">
			<th scope="col">Pseudo:</th>
			<th scope="col">Fonction:</th>
			<th scope="col">Statut:</th>
			<th scope="col">Voir la fiche:</th>
		</tr>
		<?php
		if($nb_result[0]['nb_personne'] == 0){
		?>
				<tr><th colspan="5"><hr /></th></tr>
				<tr><th colspan="5" class="orange" height="40px">Il n'y a pas de membre.</th></tr>
		<?php
		}
		?>
		<?php
		while($personne = $personnes->fetch(PDO::FETCH_ASSOC)){
			
			# On formate la date de manière à pouvoir effectuer des calculs dessus.
			$personne['DATE_BANNISSEMENT_formatee'] = new DateTime($personne['DATE_BANNISSEMENT']);
			$personne['DATE_BANNISSEMENT_formatee'] = $personne['DATE_BANNISSEMENT_formatee']->format("Ymd");
			if($personne['DATE_BANNISSEMENT_formatee'][0] == "-"){
				$personne['DATE_BANNISSEMENT_formatee'][0] = "";
			}
			
			# On met la date au format FR.
			$tab_date_suppression = explode("-", $personne['DATE_SUPPRESSION_REELLE']);# On récupère la date dans un tableau de trois cases ([Y][M][D])
			$personne['DATE_SUPPRESSION_REELLE'] = date("d-m-Y", mktime(0, 0, 0, $tab_date_suppression[1], $tab_date_suppression[2],  $tab_date_suppression[0]));
			
			$tab_date_bannissement = explode("-", $personne['DATE_BANNISSEMENT']);# On récupère la date dans un tableau de trois cases ([Y][M][D])
			$personne['DATE_BANNISSEMENT'] = date("d-m-Y", mktime(0, 0, 0, $tab_date_bannissement[1], $tab_date_bannissement[2],  $tab_date_bannissement[0]));
			
			$now = date("d-m-Y");
			$oNOW = new DateTime( $now );
			$now = $oNOW->format("Ymd");
		
			# On effectue le calcul du statut:
			if($personne['VISIBLE'] == true){
				$statut = "Normal";
				$title = "Compte actuellement actif, n'a jamais été banni.";
			}else if($personne['VISIBLE'] == false){
				if($personne['CLE_ACTIVATION'] != ""){
					$statut = "<span class='gris'>Compte non activé</span>";
					$title = "Le compte n'a jamais été activé via le mail d'activation.";
				}else if($personne['PERSONNE_SUPPRIMEE'] == true && ($personne['DATE_BANNISSEMENT_formatee'] <= $now)){
					$statut = "<span class='orange'>Compte supprimé par utilisateur.</span>";
					$title = str_replace("<br />", "\n", $personne['RAISON_SUPPRESSION'])."\n\nDate de suppression effective: ".$personne['DATE_SUPPRESSION_REELLE'];
				}else if($personne['PERSONNE_SUPPRIMEE'] == true && ($personne['DATE_BANNISSEMENT_formatee'] > $now)){
					$statut = "<span class='alert'>Compte supprimé par modérateur.</span>";
					$title = str_replace("<br />", "\n", $personne['RAISON_SUPPRESSION']);
				}else if($personne['PERSONNE_SUPPRIMEE'] == false && ($personne['DATE_BANNISSEMENT_formatee'] > $now)){
					$statut = "<span class='orange'>Compte banni temporairement.</span>";
					$title = str_replace("<br />", "\n", $personne['RAISON_SUPPRESSION'])."\n\nDate de remise en service du compte: ".$personne['DATE_BANNISSEMENT'];
				}else if($personne['PERSONNE_SUPPRIMEE'] == false && ($personne['DATE_BANNISSEMENT_formatee'] <= $now)){
					$statut = "<span class='valide'>Compte débanni le ".$personne['DATE_BANNISSEMENT'].".</span>";
					$title = str_replace("<br />", "\n", $personne['RAISON_SUPPRESSION']);
				}
			}
		?>
			<tr><th colspan="4"><hr /></th></tr>
			<tr>
				<th><span title="<?php echo "ID N°".$personne['ID_PERSONNE']; ?>"><?php echo $personne['PSEUDO']; ?></span></th>
				<th <?php if($personne['TYPE_PERSONNE'] == "Admin" ){echo "class='alert'";} ?>><?php echo $personne['TYPE_PERSONNE']; ?></th>
				<th><span title="<?php echo $title; ?>"><?php echo $statut; ?></span></th>
				<th><a href="<?php echo $oCL_page->getPage('modifier_fiche_membre')."?id_personne=".$personne['ID_PERSONNE']; ?>"><img src="images/voir.jpg" alt="Voir la fiche de <?php echo $personne['PSEUDO']; ?>." title="Voir la fiche de <?php echo $personne['PSEUDO']; ?>." /></a></th>
			</tr>
		<?php
		}
		?>
	</table>
	<br />
	<?php
		if($nb_result[0]['nb_personne'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_personne'], $page_actuelle);
		}
	?>
	<br />
	</fieldset>



<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

?>
	<h2>Toutes les news:</h2><br />
	<br />
	
	<?php
	if(isset($_SESSION['liste_news']['message']) && $_SESSION['liste_news']['message_affiche'] == false){
		echo $_SESSION['liste_news']['message'];
		$_SESSION['liste_news']['message_affiche'] = true;
	}
	?>
	
	<?php
		if($nb_result[0]['nb_nouveautees'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_nouveautees'], $page_actuelle);
		}
	?>
	
	<ul class="news-list">
	<?php
	foreach($nouveautees as $key=>$nouveaute){
	
		$oMSG->setData('VISIBLE', 1);
		$oMSG->setData('ID_NOUVEAUTE', $nouveaute['ID_NOUVEAUTE']);
		
		# On récupère le nombre de commentaires.
		$nb_commentaire = $oPCS_commentaire->fx_compter_tous_commentaires_by_ID_NOUVEAUTE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	?>
		<li>
			<img alt="Image de la nouveautée !" height="180px" width="180px" src="<?php if(!empty($nouveaute['URL_PHOTO'])){echo $nouveaute['URL_PHOTO'];}else{echo $oCL_page->getImage('news1');} ?>" />
			<b style="color:#e7a5f7"><u>Publiée le <?php echo $nouveaute['DATE_CREATION']; ?>&nbsp;:</u></b><br />
			<br />
			<h5><?php echo $nouveaute['TITRE']; ?></h5><br />
			<br />
			<h6><?php echo $nouveaute['ENTETE']; ?></h6><br />
			<br />
			<a href="<?php echo $oCL_page->getPage('news')."?id_news=".$nouveaute['ID_NOUVEAUTE']; ?>" class="link3">Voir la suite...</a><span class="comment"><a href="<?php echo $oCL_page->getPage('news')."?id_news=".$nouveaute['ID_NOUVEAUTE']; ?>"><?php if($nb_commentaire[0]['nb_commentaire'] > 0){echo $nb_commentaire[0]['nb_commentaire']." commentaires";} ?></a></span>
		</li>
	<?php
	}
	?>
	</ul>
	
	<?php
		if($nb_result[0]['nb_nouveautees'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_nouveautees'], $page_actuelle);
		}
	?>
	<br />
	<center class="petit gris">Il y a au total <?php echo $nb_result[0]['nb_nouveautees']; ?> nouveautées.</center><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Liste des news:</h2><br />
	<br />
	
	<?php
	if(isset($_SESSION['liste_news_admin']['message']) && $_SESSION['liste_news_admin']['message_affiche'] == false){
		echo $_SESSION['liste_news_admin']['message'];
		$_SESSION['liste_news_admin']['message_affiche'] = true;
	}
	?>
	
	<?php
		if($nb_result[0]['nb_nouveautees'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_nouveautees'], $page_actuelle);
		}
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Liste&nbsp;des&nbsp;news&nbsp;:&nbsp;</legend>
		<br />
		<table width="100%">
			<tr class="valide">
				<th scope="col">News</th>
				<th scope="col">Auteur</th>
				<th scope="col">Titre</th>
				<th scope="col">Date de création</th>
				<th scope="col">Visible</th>
				<th scope="col">Voir</th>
			</tr>
			<?php
			foreach($nouveautees as $key=>$nouveautee){
			?>
			<tr><th colspan="6"><hr /><br /></th></tr>
			<tr>
				<th scope="row"><a href="<?php echo $oCL_page->getPage('modifier_news')."?id_news=".$nouveautee['ID_NOUVEAUTE']; ?>"><img class="petite_image_border" src="<?php echo $nouveautee['URL_PHOTO']; ?>" alt="<?php echo "Nouveautée N°".$nouveautee['ID_NOUVEAUTE']; ?>" title="<?php echo "Nouveautée N°".$nouveautee['ID_NOUVEAUTE']; ?>" /></a></th>
				<th class="rose"><?php echo $nouveautee['AUTEUR']; ?></th>
				<th><?php echo $nouveautee['TITRE']; ?></th>
				<th title="<?php echo $nouveautee['DATE_CREATION_formatee']; ?>"><?php echo str_replace(' ', '<br />', $nouveautee['DATE_CREATION']); ?></th>
				<th><?php if($nouveautee['VISIBLE']){echo "<span class='rose'>Oui</span>";}else{echo "<span class='alert'>Non</span>";} ?></th>
				<th><a href="<?php echo $oCL_page->getPage('modifier_news')."?id_news=".$nouveautee['ID_NOUVEAUTE']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Voir la news en détails" title="Voir la news en détails" /></a></th>
			</tr>
			<?php
			}
			?>
		</table>
		<br />
	</fieldset>
	<br />
	
	
	<?php
		if($nb_result[0]['nb_nouveautees'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_nouveautees'], $page_actuelle);
		}
	?>

<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Voir les packs:</h2><br />
	<br />
	<br />
	<fieldset><legend class="legend_basique">Liste de tous les packs existants:</legend>
	<table width="100%" border="0" cellspacing="1" cellpadding="1">
		<tr class="formulaire">
			<th width="20%" scope="col">Nom:</th>
			<th width="15%" scope="col">Prix:</th>
			<th width="20%" scope="col">Type:</th>
			<th width="15%" scope="col">Durée:</th>
			<th width="10%" scope="col">Activé:</th>
			<th width="20%" scope="col">Fiche détaillée:</th>
		</tr>
		<?php
		foreach($packs as $key=>$pack){
		?>
		<tr><th colspan="6"><hr /></th></tr>
		<tr>
			<th scope="col"><span title="<?php echo "ID N°".$pack['ID_PACK']; ?>"><?php echo $pack['NOM']; ?></th>
			<th scope="col"><?php echo $pack['PRIX_BASE']; ?></th>
			<th scope="col"><?php echo $pack['TYPE_PACK']; ?></th>
			<th scope="col"><?php echo $pack['DUREE']." mois"; ?></th>
			<th scope="col"><?php if($pack['VISIBLE']){echo "<span class='valide'>Oui</span>";}else{echo "<span class='orange'>Non</span>";} ?></th>
			<th scope="col"><a href="<?php echo $oCL_page->getPage('modifier_fiche_pack')."?id_pack=".$pack['ID_PACK']; ?>"><img src="images/voir.jpg" alt="Consulter la fiche détaillée" title="Consulter la fiche détaillée" /></a></th>
		</tr>
		
		<?php
		}
		?>
	</table>
	</fieldset>
	
	
<?php
}else{
# Si l'internaute n'est pas connecté et admin il gicle.
header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}
error_reporting(-1);
# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Prestations effectuées:</h2><br />
	<br />
	
	<?php
	if($nb_result[0]['nb_contrat'] > $nb_result_affiches){
		$path_parts = pathinfo($_SERVER['PHP_SELF']);
		$page = $path_parts["basename"];
		$page_actuelle = ($limite/$nb_result_affiches)+1;
		afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_contrat'], $page_actuelle);
	}
	?>
	
	<fieldset class="padding_LR"><legend class="legend_basique">Liste&nbsp;de&nbsp;vos&nbsp;prestations&nbsp;effectuées:&nbsp;</legend>
		<?php
		if($nb_result[0]['nb_contrat'] == 0){
		?>
			<br />
			<center class="orange">
				<?php
				if(isset($_GET['rq']) && $_GET['rq'] == "futures"){
				?>
					Vous n'avez pas de prestation prévue en ce moment.
				<?php
				}else{
				?>
					Vous n'avez jamais effectué de prestation.<br />
					<span class="petit noir">(Les prestations correspondent à des contrats validés et effectués.)<br /></span>
				<?php
				}
				?>
			</center>
		<?php
		}
		foreach($prestations as $key=>$prestation){
			# On récupère la personne avec qui le contrat a été effectué.
			require_once('couche_metier/MSG.php');
			require_once('couche_metier/PCS_contrat.php');
			require_once('couche_metier/PCS_personne.php');
			
			$oMSG = new MSG();
			$oPCS_contrat = new PCS_contrat();
			$oPCS_personne = new PCS_personne();
			
			$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
			$oMSG->setData('ID_CONTRAT', $prestation['ID_CONTRAT']);
			
			$id_organisateur = $oPCS_contrat->fx_recuperer_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
			
			$oMSG->setData('ID_PERSONNE', $id_organisateur[0]['ID_PERSONNE']);
			
			$organisateur = $oPCS_personne->fx_recuperer_compte_min_by_ID_PERSONNE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
		?>
			<div class="padding_LR">
				<br />
				<center><b>Prestation concernant l'annonce <a href="<?php echo $oCL_page->getPage('annonce')."?id_annonce=".$prestation['ID_ANNONCE']; ?>"><?php echo $prestation['TITRE']; ?></a>:</b></center><br />
				<br />
				<?php
				if(isset($_GET['rq']) && $_GET['rq'] == "futures"){
				# On arrange juste la phrase pour que le temps soit logique.
				?>
					La prestation aura lieue au <span class="rose"><?php echo $prestation['ADRESSE'].", ".$prestation['CP']." ".$prestation['VILLE']; ?></span> le <?php echo $prestation['DATE_FIN_simple']; ?>.<br />
					Le contrat a été crée le <span class="rose"><?php echo $prestation['DATE_CONTRAT']; ?></span> puis validé par <a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$organisateur['ID_PERSONNE']; ?>"><?php echo $organisateur[0]['PSEUDO']; ?></a>. <br />
					La somme convenue est de <span class="rose"><?php echo $prestation['PRIX'] ?>€</span>.<br />
				<?php
				}else{
				?>
					La prestation à eue lieue au <span class="rose"><?php echo $prestation['ADRESSE'].", ".$prestation['CP']." ".$prestation['VILLE']; ?></span> le <?php echo $prestation['DATE_FIN_simple']; ?>.<br />
					Le contrat a été crée le <span class="rose"><?php echo $prestation['DATE_CONTRAT']; ?></span> puis validé par <a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$organisateur['ID_PERSONNE']; ?>"><?php echo $organisateur[0]['PSEUDO']; ?></a>. <br />
					La somme convenue était de <span class="rose"><?php echo $prestation['PRIX'] ?>€</span>.<br />
				<?php
				}
				?>
				<br />
				<a href="<?php echo $oCL_page->getPage('contrat')."?id_contrat=".$prestation['ID_CONTRAT']; ?>">Voir le contrat.</a><br />
				<?php
				if($_SESSION['pack']['CONTRATS_PDF']){
				?>
					<a href="<?php echo $oCL_page->getPage('contrat_pdf')."?id_contrat=".$prestation['ID_CONTRAT']; ?>">Voir/Télécharger le contrat au format PDF.</a><br />
				<?php
				}else{
				?>
					<span class="orange petit">Vous ne pouvez pas bénéficier du contrat sous format pdf.</span><br />
				<?php
				}
				?>
			</div>
			<br />
			<hr />
			
		<?php
		}
		?>
	</fieldset>
	
	
	<?php
	if($nb_result[0]['nb_contrat'] > $nb_result_affiches){
		$path_parts = pathinfo($_SERVER['PHP_SELF']);
		$page = $path_parts["basename"];
		$page_actuelle = ($limite/$nb_result_affiches)+1;
		afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_contrat'], $page_actuelle);
	}
	?>
	
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Liste des pubs:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['liste_pubs_admin']['message']) && $_SESSION['liste_pubs_admin']['message_affiche'] == false){
		echo $_SESSION['liste_pubs_admin']['message'];
		$_SESSION['liste_pubs_admin']['message_affiche'] = true;
	}
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Liste des pubs:&nbsp;</legend><br />
		<br />
		<form action="script_supprimer_pubs.php" method="post" name="form_supprimer_pubs">
			<table width="100%">
				<tr class="formulaire">
					<th>Titre:</th>
					<th>Position:</th>
					<th>Voir:</th>
					<th>Supprimer:</th>
				</tr>
				<?php
				if(empty($pubs)){
					?>
					<tr><th colspan="4"><hr /><br /></th></tr>
					<tr><th class="orange petit" colspan="4">Il n'y a aucune pub à afficher.</th></tr>
					<?php
				}
				
				foreach($pubs as $key => $pub){
				?>
				<tr><th colspan="4"><hr /></th></tr>
				<tr>
					<th><?php echo $pub['TITRE']; ?></th>
					<th><?php echo $pub['POSITION']; ?></th>
					<th><a href="<?php echo $oCL_page->getPage('modifier_pub')."?id_pub=".$pub['ID_PUB']; ?>"><img src="<?php echo $oCL_page->getImage('voir'); ?>" alt="Modifier la pub" title="Modifier la pub" /></a></th>
					<th><input type="checkbox" name="form_supprimer_pubs_id_pub[]" value="<?php echo $pub['ID_PUB']; ?>" /></th>
				</tr>
				<?php
				}
				?>
				<tr>
					<th>&nbsp;</th>
					<th>&nbsp;</th>
					<th>&nbsp;</th>
					<?php
					# On affiche le bouton que s'il existe des pubs.
					if(!empty($pubs)){
					?>
						<th>
							<input height="20px" width="20px" onclick="return confirm('Souhaitez vous vraiment supprimer les pubs sélectionnées ?');" type="image" src="<?php echo $oCL_page->getImage('petite_croix'); ?>" alt="Supprimer les pubs sélectionnées" title="Supprimer les pubs sélectionnées" />
						</th>
					<?php
					}
					?>
			</table>
			<br />
		</form>
		<br />
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Gestion des rôles:</h2><br />
	<br />
	<div id="liste_role_admin_reponse"></div>
	<br />
	<table>
		<tr class="formulaire">
			<th width="30%">Singulier</th>
			<th width="30%">Pluriel</th>
			<th width="20%">Modifier</th>
			<th width="20%">Supprimer</th>
		</tr>
		<?php
		foreach($roles as $key=>$role){
		?>
		<tr><th colspan="4"><hr /></th></tr>
		<tr height="30px">
			<th width="30%">
				<input id="role_singulier_<?php echo $role['singulier']; ?>" name="role_singulier_<?php echo $role['singulier']; ?>" type="text" value="<?php echo $role['singulier']; ?>" />
			</th>
			<th width="30%">
				<input id="role_pluriel_<?php echo $role['pluriel']; ?>" name="role_pluriel_<?php echo $role['pluriel']; ?>" type="text" value="<?php echo $role['pluriel']; ?>" />
			</th>
			<th width="20%">
				<input type="button" id="btn_upd_role_<?php echo $role['singulier']; ?>" name="role_<?php echo $role['singulier']; ?>" value="Modifier" onclick="javascript: fx_upd_role(this);" />
			</th>
			<th width="20%">
				<input type="button" id="btn_upd_role_<?php echo $role['singulier']; ?>" name="role_<?php echo $role['singulier']; ?>" value="Supprimer" onclick="javascript: fx_del_role(this);" />
			</th>
		</tr>
		<?php
		}
		?>
		<tr><th colspan="4"><hr /></th></tr>
		<tr height="30px">
			<th width="30%">
				<input id="role_singulier_new" name="role_singulier_new" type="text" />
			</th>
			<th width="30%">
				<input id="role_pluriel_new" name="role_pluriel_new" type="text" />
			</th>
			<th width="20%">
				<input type="button" id="btn_add_role_new" name="btn_add_role_new" value="Ajouter" onclick="javascript: fx_add_role(this);" />
			</th>
			<th width="20%">
				&nbsp;
			</th>
		</tr>
	</table>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On charge le nombre de messages non lus. 
if($_SESSION['compte']['connecté'] == true){
	require_once('couche_metier/MSG.php');
	require_once('couche_metier/PCS_message.php');

	$oMSG = new MSG();
	$oPCS_message = new PCS_message();

	$oMSG->setData('ID_PERSONNE', $_SESSION['compte']['ID_PERSONNE']);
	$oMSG->setData('STATUT_MESSAGE', 'Non lu');
	$oMSG->setData('VISIBLE', 1);
	
	$nb_messages_non_lus = $oPCS_message->fx_compter_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG)->getData(1)->fetchAll();
	$nb_messages_non_lus = $nb_messages_non_lus[0]['nb_message'];
}
?>
<ul class="nav">

	<li><a href="<?php echo $oCL_page->getPage('accueil'); ?>" <?php if($_SESSION['page_actuelle'] == "accueil"){echo "class='current'";} ?>>Accueil</a></li>
	<?php
	if($_SESSION['compte']['connecté'] == false){
	?>
		<li><a href="<?php echo $oCL_page->getPage('inscription')."#inscriptionh2"; ?>" <?php if($_SESSION['page_actuelle'] == "inscription"){echo "class='current'";} ?>>Inscription</a></li>
	<?php
	}
	?>
	<li><a href="<?php echo $oCL_page->getPage('liste_annonce'); ?>" <?php if($_SESSION['page_actuelle'] == "liste_annonce"){echo "class='current'";} ?>>Annonces</a></li>

	<li><a href="<?php echo $oCL_page->getPage('faq'); ?>" <?php if($_SESSION['page_actuelle'] == "faq"){echo "class='current'";} ?>>Faq</a></li>

	<li><a href="<?php echo $oCL_page->getPage('contact'); ?>" <?php if($_SESSION['page_actuelle'] == "contact"){echo "class='current'";} ?>>Contact</a></li>
	<?php
	if($_SESSION['compte']['connecté'] == true){
	?>
		<li><a href="<?php echo $oCL_page->getPage('messagerie'); ?>" <?php if($_SESSION['page_actuelle'] == "ma_messagerie"){echo "current";} ?>><span title="<?php if($nb_messages_non_lus > 0){echo "Nouveau(x) message(s) !";}else{echo "Consulter votre messagerie";} ?>">Messagerie <?php if($nb_messages_non_lus > 0){echo "<span class='orange petit'>[".$nb_messages_non_lus."]</span>";}?></span></a></li>
	<?php
	}
	?>
</ul>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
?>
<h2>Sommaire:</h2><br />
<br />
<div id="sommaire_faq" class="padding_LR">
	<?php include_once('include_file_menuh_faq.php'); ?>
 </div><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_menuv_admin.php');

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
<ul>
	<li><h5>Gestion des Membres:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('activer_comptes'); ?>">Activer les comptes non activés.</a>&nbsp;<span title="Il y a <?php echo $nb_comptes_inactifs[0]['nb_comptes']; ?> comptes en attente de modération." class="orange">[<?php echo $nb_comptes_inactifs[0]['nb_comptes']; ?>]</span></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_membre'); ?>">Voir la liste des membres.</a>&nbsp;<span title="Il y a <?php echo $nb_comptes[0]['nb_personne']; ?> utilisateurs au total." class="orange">[<?php echo $nb_comptes[0]['nb_personne']; ?>]</span></li>
	<li><a href="<?php echo $oCL_page->getPage('comptes_supprimes'); ?>">Voir les comptes supprimés.&nbsp;<span class="petit">(Par l'utilisateur)</span></a>&nbsp;<span title="Il y a <?php echo $nb_comptes_supprimes[0]['nb_comptes_supprimes']; ?> comptes supprimés par leur utilisateur." class="orange">[<?php echo $nb_comptes_supprimes[0]['nb_comptes_supprimes']; ?>]</span></li>
	<li>&nbsp;</li>
	<li><a href="<?php echo $oCL_page->getPage('bannir_membre'); ?>">Bannir un membre</a></li>
	<li><a href="<?php echo $oCL_page->getPage('changer_rang'); ?>">Changer le rang.</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion des Annonces:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_annonces_en_attente'); ?>">Voir toutes les annonces en attente de validation.</a>&nbsp;<span title="Il y a <?php echo $nb_annonces_en_attente[0]['nb_annonce']; ?> annonces en attente." class="orange">[<?php echo $nb_annonces_en_attente[0]['nb_annonce']; ?>]</span></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_annonce_admin'); ?>">Voir toutes les annonces.</a>&nbsp;<span title="Il y a <?php echo $nb_annonces_totales[0]['nb_annonce']; ?> annonces en tout." class="orange">[<?php echo $nb_annonces_totales[0]['nb_annonce']; ?>]</span></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion des Contrats:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_contrats_admin')."?rq=en_cours"; ?>">Voir tous les contrats récents/en cours.</a></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_contrats_admin')."?rq=tous"; ?>">Voir tous les contrats.</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion des Packs:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_packs'); ?>">Voir tous les packs.</a>&nbsp;<span title="Il y a <?php echo $nb_packs[0]['nb_packs']; ?> packs existants dont <?php echo $nb_packs_inactifs[0]['nb_packs']; ?> pack(s) désactivé(s)." class="orange">[<?php echo $nb_packs[0]['nb_packs']; ?>]</span></li>
	<li><a href="<?php echo $oCL_page->getPage('ajouter_pack'); ?>">Ajouter un pack.</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion des Prestataires:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_role_admin'); ?>">Gérer les rôles.</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion des News:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_news_admin'); ?>">Voir toutes les news.</a>&nbsp;<span title="Il y a <?php echo $nb_news[0]['nb_nouveautees']; ?> news affichées et <?php echo $nb_news_desactive[0]['nb_nouveautees']; ?> news désactivée(s)." class="orange">[<?php echo $nb_news[0]['nb_nouveautees']; ?>]</span></li>
	<li><a href="<?php echo $oCL_page->getPage('ajouter_news'); ?>">Publier une news.</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion des Pubs:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('liste_pubs_admin'); ?>">Voir toutes les pubs.</a>&nbsp;<span title="Il y a <?php echo $nb_pubs[0]['nb_pubs']; ?> pubs d'affichées." class="orange">[<?php echo $nb_pubs[0]['nb_pubs']; ?>]</span></li>
	<li><a href="<?php echo $oCL_page->getPage('ajouter_pub'); ?>">Ajouter une pub</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion des Messages:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('envoyer_message_admin'); ?>">Envoyer un message.</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion du Parrainage:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('gestion_parrainage'); ?>">Voir les meilleurs parrains.</a></li>
</ul>
<br /><hr /><br />
<ul>
	<li><h5>Gestion globale:</h5></li>
	<li><a href="<?php echo $oCL_page->getPage('statistiques_site'); ?>">Voir les statistiques du site.</a></li>
	<li><a href="<?php echo $oCL_page->getPage('gestion_faq'); ?>">Modifier la page de la FAQ.</a></li>
	<li><a href="<?php echo $oCL_page->getPage('gestion_cgu'); ?>">Modifier les CGU. <span class="petit">(pdf)</span></a></li>
	<li><a href="<?php echo $oCL_page->getPage('gestion_mentions_legales'); ?>">Modifier les mentions légales. <span class="petit">(pdf)</span></a></li>
	<li><a href="<?php echo $oCL_page->getPage('gestion_slides'); ?>">Gestion des slides.</a></li>
</ul>





<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_menuv_gestion_compte.php');

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	
		<br />
		<fieldset style="background-color:#cecece;opacity:0.9;" class="padding_LR"><legend style="background-color:#cecece;opacity:0.9;border-radius:5px;" class="legend_basique">Mes&nbsp;infos&nbsp;perso:&nbsp;</legend><br />
			<ul>
				<li><a title="Vous pouvez y modifier l'intégralité de vos informations personnelles hormis votre mot de passe." href="<?php echo $oCL_page->getPage('modifier_fiche_perso'); ?>">Modifier mes informations personnelles.</a></li>
				<li><a title="Vous pouvez y modifier votre mot de passe." href="<?php echo $oCL_page->getPage('modifier_mdp'); ?>">Modifier mon mot de passe.</a></li>
				<li>&nbsp;</li>
				<li><a title="Vous pouvez y supprimer votre compte. (Aucun remboursement n'aura lieu.)" href="<?php echo $oCL_page->getPage('supprimer_compte'); ?>">Supprimer mon compte.</a></li>
			</ul>
			<br />
		</fieldset>
		<br /><br />
		<?php
		if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
		?>
			<fieldset style="background-color:#cecece;opacity:0.9;" class="padding_LR"><legend style="background-color:#cecece;opacity:0.9;border-radius:5px;" class="legend_basique">Mes&nbsp;Packs:&nbsp;</legend><br />
				<ul>
					<li><a title="Consultez tous vous achats de packs." href="<?php echo $oCL_page->getPage('historique_achat_pack'); ?>">Historique de mes achats.</a></li>
					<li><a title="Venez découvrir nos Packs !" href="<?php echo $oCL_page->getPage('acheter_pack'); ?>">Acheter un Pack.</a></li>
				</ul>
				<br />
			</fieldset>
			<br /><br />
		<?php
		}
		?>
		<fieldset style="background-color:#cecece;opacity:0.9;" class="padding_LR"><legend style="background-color:#cecece;opacity:0.9;border-radius:5px;" class="legend_basique">Mes&nbsp;Annonces:&nbsp;</legend><br />
			<ul>
				<?php
				if($_SESSION['compte']['TYPE_PERSONNE'] == "Organisateur" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				?>
					<li><a href="<?php echo $oCL_page->getPage('historique_annonce')."?rq=toutes"; ?>">Historiques de mes annonces.</a><?php if($toutes_annonces[0]['nb_annonce'] > 0){?>&nbsp;<span class="orange" title="Vous avez fait <?php echo $toutes_annonces[0]['nb_annonce']; ?> annonces jusqu'à maintenant.">[<?php echo $toutes_annonces[0]['nb_annonce']; ?>]</span><?php } ?></li>
					<li><a href="<?php echo $oCL_page->getPage('historique_annonce')."?rq=futures"; ?>">Mes annonces en cours.</a><?php if($annonces_futures[0]['nb_annonce'] > 0){?>&nbsp;<span class="orange" title='Vous avez <?php echo $annonces_futures[0]['nb_annonce']; ?> annonces en cours.
			(Annonces dont la date de début est future)'>[<?php echo $annonces_futures[0]['nb_annonce']; ?>]</span><?php } ?></li>
					<li><a href="<?php echo $oCL_page->getPage('gestion_annonce_goldlive'); ?>">Mes annonces GoldLive.</a><?php if($annonces_goldlive[0]['nb_annonce'] > 0){?>&nbsp;<span class="orange" title="Vous avez <?php echo $annonces_goldlive[0]['nb_annonce']; ?> annonces GoldLive.">[<?php echo $annonces_goldlive[0]['nb_annonce']; ?>]</span><?php } ?></li>
					<li><a href="<?php echo $oCL_page->getPage('creer_annonce'); ?>">Créer une annonce.</a></li>
				<?php
				}
				if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				?>
					<li><a href="<?php echo $oCL_page->getPage('annonces_visitees'); ?>">Annonces débloquées.</a>&nbsp;<?php if(is_array($_SESSION['compte']['annonces_visitées'])){ ?><span class="orange" title="Vous avez débloqué <?php echo (count($_SESSION['compte']['annonces_visitées'])-1); ?> annonces, vous pouvez les consulter à volonté.">[<?php echo (count($_SESSION['compte']['annonces_visitées'])-1); ?>]</span><?php } ?></li>
				<?php
				}
				?>
			</ul>
			<br />
		</fieldset>
		<br /><br />
		
		<fieldset style="background-color:#cecece;opacity:0.9;" class="padding_LR"><legend style="background-color:#cecece;opacity:0.9;border-radius:5px;" class="legend_basique">Mes&nbsp;Contrats:&nbsp;</legend><br />
			<ul>
				<li><a href="<?php echo $oCL_page->getPage('historique_contrat')."?rq=toutes"; ?>">Historiques de mes contrats.</a><?php if($tous_contrats[0]['nb_contrat'] > 0){?>&nbsp;<span class="orange" title="Vous avez effectué <?php echo $tous_contrats[0]['nb_contrat']; ?> contrats jusqu'à maintenant.">[<?php echo $tous_contrats[0]['nb_contrat']; ?>]</span><?php } ?></li>
				<li><a href="<?php echo $oCL_page->getPage('historique_contrat')."?rq=courants"; ?>">Mes contrats en cours.</a><?php if($contrats_courants[0]['nb_contrat'] > 0){?>&nbsp;<span class="orange" title="Vous avez effectué <?php echo $contrats_courants[0]['nb_contrat']; ?> contrats jusqu'à maintenant.">[<?php echo $contrats_courants[0]['nb_contrat']; ?>]</span><?php } ?></li>
			</ul>
			<br />
		</fieldset>
		<br /><br />
		<?php
		if($_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire" || $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
		?>
		<fieldset style="background-color:#cecece;opacity:0.9;" class="padding_LR"><legend style="background-color:#cecece;opacity:0.9;border-radius:5px;" class="legend_basique">Mes&nbsp;Prestations:&nbsp;</legend><br />
			<ul>
				<li><h5></h5></li>
				<li><a href="<?php echo $oCL_page->getPage('liste_prestation')."?rq=toutes"; ?>">Mes prestations effectuées.</a><?php if($prestations_effectues[0]['nb_contrat'] > 0){?>&nbsp;<span class="orange" title="Vous avez effectué <?php echo $prestations_effectues[0]['nb_contrat']; ?> prestation(s) jusqu'à maintenant.">[<?php echo $prestations_effectues[0]['nb_contrat']; ?>]</span><?php } ?></li>
				<li><a href="<?php echo $oCL_page->getPage('liste_prestation')."?rq=futures"; ?>">Mes prestations prévues.</a><?php if($prestations_prevues[0]['nb_contrat'] > 0){?>&nbsp;<span class="orange" title="Vous avez <?php echo $prestations_prevues[0]['nb_contrat']; ?> prestation(s) prévue(s).">[<?php echo $prestations_prevues[0]['nb_contrat']; ?>]</span><?php } ?></li>
			</ul>
			<br />
		</fieldset>
		<br /><br />
		<?php
		}
		?>
		<fieldset style="background-color:#cecece;opacity:0.9;" class="padding_LR"><legend style="background-color:#cecece;opacity:0.9;border-radius:5px;" class="legend_basique">Ma&nbsp;Messagerie:&nbsp;</legend><br />
			<ul>
				<li title="Vous avez <?php echo $messages_totaux[0]['nb_message']; ?> messages dans votre boite de réception."><a href="<?php echo $oCL_page->getPage('messagerie'); ?>">Mes messages reçus.</a></li>
				<li><a href="<?php echo $oCL_page->getPage('messagerie'); ?>"></a></li>
			</ul>
			<br />
		</fieldset>
		<br /><br />
		<?php
		if($_SESSION['pack']['PARRAINAGE_ACTIVE']){
		?>
		<fieldset style="background-color:#cecece;opacity:0.9;" class="padding_LR"><legend style="background-color:#cecece;opacity:0.9;border-radius:5px;" class="legend_basique">Parrainage:&nbsp;</legend><br />
			<ul>
				<li><a href="<?php echo $oCL_page->getPage('envoyer_invitations'); ?>">Parrainer des amis.</a></li>
				<li><a href="<?php echo $oCL_page->getPage('filleuls'); ?>">Mes filleuls.</a><?php if($filleuls_totaux[0]['nb_personne'] > 0){?>&nbsp;<span class="orange" title="Vous avez <?php echo $filleuls_totaux[0]['nb_personne']; ?> filleuls.">[<?php echo $filleuls_totaux[0]['nb_personne']; ?>]</span><?php } ?></li>
				<li><a href="<?php echo $oCL_page->getPage('lien_parrainage'); ?>">Obtenir mon lien de parrainage.</a></li>
			</ul>
			<br />
		</fieldset>
		<br /><br />
		<?php
		}
		?>
	


<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if($id_message_ok){
?>
	<h2><?php echo $message[0]['TITRE'] ?></h2><br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique"><?php if($message[0]['STATUT_MESSAGE'] == "Non lu"){echo "Nouveau message:";}else{echo "Message:";} ?></legend>
		<br />
		<b class='valide'>Date de réception:</b> <?php echo $message[0]['DATE_ENVOI'] ?><br />
		<br />
		<b class='valide'>Date de lecture:</b> <?php echo $message[0]['DATE_LECTURE'] ?><br />
		<br />
		<b class='valide'>Expéditeur:</b> <?php if($message[0]['EXPEDITEUR'] != 0){ ?><a href="<?php echo $oCL_page->getPage('')."?id_personne=".$message[0]['EXPEDITEUR']; ?>"><?php echo $expediteur[0]['PSEUDO'] ?></a><?php }else{echo "<b class='rose'>LiveAnim</b>";} ?>
	<br />
	<br />
	<fieldset class="padding_LR">
	<center><b><u class='valide'>Corps du message:</u></b><br /></center><br />
	<br />
	<?php echo $message[0]['CONTENU'] ?><br />
	<br />
	</fieldset>
	<br />
	<center>
		<a href="<?php echo $oCL_page->getPage('messagerie'); ?>">Retour à ma messagerie</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="<?php echo $oCL_page->getPage('supprimer_message')."?ids_msg=".$message[0]['ID_MESSAGE']; ?>"><img src="<?php echo $oCL_page->getImage('petite_croix'); ?>" alt="Supprimer le message" title="Supprimer le message" /></a>
	</center>
	</fieldset>

<?php
	}else{
		if($_SESSION['message']['message_affiche'] == false){
			echo $_SESSION['message']['message'];
			$_SESSION['message']['message_affiche'] = true;
		}
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>

	<h2>Ma messagerie:</h2><br />
	<br />
	
	<?php
	if(isset($_SESSION['messagerie']['message']) && $_SESSION['messagerie']['message_affiche'] == false){
		echo $_SESSION['messagerie']['message'];
		$_SESSION['messagerie']['message_affiche'] = true;
	}	
	?>
	<?php
		if($nb_result[0]['nb_message'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_message'], $page_actuelle);
		}
	?>
	<form name="supprimer_messages" action="script_supprimer_messages.php" method="post">
	<table width="100%">
		<tr class="formulaire">
			<th width="40%" scope="col">Titre</th>
			<th width="20%" scope="col">Expéditeur</th>
			<th width="20%" scope="col">Date de <br />réception</th>
			<th width="15%" scope="col">&Eacute;tat</th>
			<th width="5%"scope="col"><input type="checkbox" onclick="invertselection('ids_msg[]');" /></th>
		</tr>
		<?php
		if(count($messages) > 0){
			foreach($messages as $key=>$message){
			?>
			<tr><th colspan="5"><hr /></th></tr>
			<tr height="60px">
				<th title="Lire le message" scope="row"><a href="<?php echo $oCL_page->getPage('message')."?id_message=".$message['ID_MESSAGE']; ?>"><?php echo $message['TITRE']; ?></a></th>
				<th><?php if($message['EXPEDITEUR'] != 0){ echo $message['PSEUDO'];}else{echo "<b class='rose'>LiveAnim</b>";} ?></th>
				<th title="<?php echo $message['DATE_ENVOI']; ?>"><?php echo $message['DATE_ENVOI_simple']; ?></th>
				<th class="<?php if($message['STATUT_MESSAGE'] == "Non lu"){echo "orange";}else if($message['STATUT_MESSAGE'] == "Répondu"){echo "valide";} ?>"><?php echo $message['STATUT_MESSAGE']; ?></th>
				<th><input type="checkbox" name="ids_msg[]" value="<?php echo $message['ID_MESSAGE']; ?>" id="<?php echo $message['ID_MESSAGE']; ?>" /></th>
			</tr>
			<?php
			}
		}else{
			# S'il n'y a pas de message.
			?>
			<tr><th colspan="5"><hr /></th></tr>
			<tr height="60px">
				<th colspan="5"><center class="valide">Vous n'avez aucun message dans votre boîte de réception.</center></th>
			</tr>
			<?php
		}
		?>
	</table>
	<?php
		if($nb_result[0]['nb_message'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_message'], $page_actuelle);
		}
	?>
	<br />
	<?php  
	if(count($messages) > 0){
	?>
	<input height="20px" width="20px" style="padding-right:5px;" class="fright" onclick="return confirm('Souhaitez vous vraiment supprimer les messages sélectionnés ?');" type="image" src="<?php echo $oCL_page->getImage('petite_croix'); ?>" alt="Supprimer les messages sélectionnés" title="Supprimer les messages sélectionnés" />
	<br class="clear" />
	<?php
	}
	?>
	<br />
	<div>
		<center class='petit'>
			Vous avez <?php 
				echo $nb_result[0]['nb_message']; ?> message(s) au total.<br />
		</center>
	</div>
	</form>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée.
if($_SESSION['compte']['connecté'] == true){
	# on met en session l'annonce que visite l'utilisateur dans le cas où il souhaite faire un paiement allopass.
	$_SESSION['annonce']['annonce_courante'] = (int)$_GET['id_annonce'];
?>
	
	<h2>Modification d'une annonce:</h2><br />
	<br /> 
	<?php
	if(isset($_SESSION['ajouter_annonce']['message']) && $_SESSION['ajouter_annonce']['message_affiche'] == false){
		echo $_SESSION['ajouter_annonce']['message'];
		$_SESSION['ajouter_annonce']['message_affiche'] = true;
	}else if(isset($_SESSION['modifier_annonce']['message']) && $_SESSION['modifier_annonce']['message_affiche'] == false){
		echo $_SESSION['modifier_annonce']['message'];
		$_SESSION['modifier_annonce']['message_affiche'] = true;
	}
	
	# Si l'annonce n'est pas déjà goldlive
	if(!$annonce[0]['GOLDLIVE']){
		require_once('include_acheter_annonce_goldlive.php');
	}else{
		echo "<center class='rose'>Cette annonce possède le statut GOLDLIVE et est donc placée en tête des résultats de recherche&nbsp;!</center><br /><br />";
	}
	
	require_once('include_form_ajouter_modifier_annonce.php');
	?>
	
	

<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>

	<h2>Modification d'une annonce:</h2><br />
	<br />
	<?php
	require_once('include_form_ajouter_modifier_annonce.php');
	?>


<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	if($id_contrat_ok){
?>
	<h2>Modification du contrat N°<?php echo $contrat[0]['ID_CONTRAT']; ?></h2><br />
	<br />
	
	<?php
	$formulaire = "modifier";
	require_once('include_form_ajouter_modifier_contrat.php');
	?>

<?php
	}else{
		if(isset($_SESSION['contrat']['message']) && $_SESSION['contrat']['message_affiche'] == false){
			echo $_SESSION['contrat']['message'];
			$_SESSION['contrat']['message_affiche'] = true;
		}
	}
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}
// ------------------------------- ADMINISTRATION --------------------------------
# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Modification de la fiche personnelle d'un membre:</h2><br />
	<br />

<?php
	if($ID_PERSONNE_ok == 1){
	# L'id_personne transmis est correct, on affiche les données récupérées si elles existent.
	
		if(!empty($personne[0]['ID_PERSONNE'])){
			# Si l'ID_PERSONNE de la personne fournie en GET n'est pas vide c'est que cette personne existe.
			if($personne[0]['TYPE_PERSONNE'] != "Admin"){
				echo "<span class='orange'>/!\ Le code HTML sera automatiquement supprimé des données. /!\</span><br /><br />";
				require_once('include_form_modifier_fiche_membre.php');
			?>
				
				<br />
				<br />
				<?php
				if($_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
				?>
					<br />
					<fieldset class="padding_LR"><legend class="legend_basique">Récapitulatif des IP de connection:</legend><br />
					<table width="100%" border="0" cellspacing="1" cellpadding="1">
						<tr>
							<th scope="col">Date de connexion:</th>
							<th scope="col">IP:</th>
							<th scope="col">Cookie:</th>
							<th scope="col">Cookie détruit:</th>
						</tr>
						<tr><th colspan="4"><hr /></th></tr>
						<?php
						while($ip = $ip_personne->fetch(PDO::FETCH_ASSOC)){
						?>
						<tr <?php if($ip['IP_COOKIE'] != $ip['ID_IP']){echo "class='alert'";} ?>>
							<th><?php echo $ip['DATE_CONNEXION']; ?></th>
							<th><?php echo $ip['ID_IP']; ?></th>
							<th><?php echo $ip['IP_COOKIE']; ?></th>
							<th><?php if($ip['COOKIE_DETRUIT'] == true){echo "<span class='orange'>Oui</span>";}else{echo "Non";} ?></th>
						</tr>
						<tr><th colspan="4"><hr /></th></tr>
						<?php
						}# Fin du while() d'affichage des IPs.
						?>
					</table>
					</fieldset>
			<?php
				}
			#$ip_personne
			}else{
				echo "<span class='orange'>Vous ne pouvez pas modifier les informations d'un administrateur.</span>";
			}
		}else{
			echo "<span class='alert'>Erreur: La requête n'a retourné aucun résultat. Il n'y a pas de membre possédant cet ID.</span>";
		}
	}else{
		echo "<span class='alert'>Erreur: L'id_personne transmit est incorrect.</span>";
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# Si on a bien reçu un id_pack correct.
	if($ID_PACK_ok){
	?>
	<h2>Modifier un pack:</h2><br />
	<br />
	<?php 
		require_once('include_form_modifier_fiche_pack.php');
	?>
	


	<?php	
	}else{
		echo "L'id_pack reçu n'est pas correct.";
	}

}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Mes informations personnelles:</h2><br />
	<br />
	<?php
	require_once('include_form_modifier_fiche_membre.php');
	?>
	
<?php				
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>

	<h2>Modification du mot de passe:</h2><br />
	<br />
	<?php
		if(isset($_SESSION['modifier_mdp']['message']) && $_SESSION['modifier_mdp']['message_affiche'] == false){
			echo $_SESSION['modifier_mdp']['message'];
			$_SESSION['modifier_mdp']['message_affiche'] = true;
		}
	?>
	<br />
	<form class="formulaire" action="script_modifier_mdp.php" method="post" name="form_modifier_mdp" id="form_modifier_mdp" >
		Rentrez votre mot de passe actuel:<br />
		<input onblur="fx_verif_champ_simple('ancien_mdp', 'form_modifier_mdp_ancien_mdp');" type="password" name="form_modifier_mdp_ancien_mdp" id="form_modifier_mdp_ancien_mdp" /><br />
		<div id="ancien_mdp"></div>
		<br />
		Rentrez votre nouveau mot de passe:<br />
		<input onblur="fx_verif_champ_simple('new_mdp', 'form_modifier_mdp_nouveau_mdp');fx_verif_champ_double('new_mdp2', 'form_modifier_mdp_nouveau_mdp', 'form_modifier_mdp_nouveau_mdp_bis');" type="password" name="form_modifier_mdp_nouveau_mdp" id="form_modifier_mdp_nouveau_mdp" /><br />
		<div id="new_mdp"></div>
		<br />
		Répétez votre nouveau mot de passe:<br />
		<input onblur="fx_verif_champ_double('new_mdp2', 'form_modifier_mdp_nouveau_mdp', 'form_modifier_mdp_nouveau_mdp_bis');" type="password" name="form_modifier_mdp_nouveau_mdp_bis" id="form_modifier_mdp_nouveau_mdp_bis" /><br />
		<div id="new_mdp2"></div>
		<br />
		<span class="alert fright">* Tous les champs sont obligatoires.</span><br />
		<br />
		<center>
			<input type="image" src="images/valider.png" alt="Valider" title="Valider" name="btn_form_modifier_mdp_valider" id="btn_form_modifier_mdp_valider" />
		</center>
	</form>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Modification de la news <?php echo $nouveautee[0]['TITRE']; ?>:</h2><br />
	<br />
	
	<?php
	if(isset($_SESSION['modifier_news']['message']) && $_SESSION['modifier_news']['message_affiche'] == false){
		echo $_SESSION['modifier_news']['message'];
		$_SESSION['modifier_news']['message_affiche'];
	}
	?>
	
	<?php
	$formulaire = "modifier";
	require_once('include_form_ajouter_modifier_news.php');
	?>
	


<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Modification d'une pub:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['modifier_pub']['message']) && $_SESSION['modifier_pub']['message_affiche'] == false){
		echo $_SESSION['modifier_pub']['message'];
		$_SESSION['modifier_pub']['message_affiche'] = true;
	}
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Modification de la pub N°<?php echo $pub[0]['ID_PUB']; ?>:&nbsp;</legend><br />
		<br />
		<?php
		$formulaire = "Modification";
		require_once('include_form_ajouter_modifier_pub.php');
		?>
		<br />
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Modification du slide N°<?php echo $slide[0]['ID_SLIDE']; ?></h2><br />
	<br />
	<?php
	if(isset($_SESSION['modifier_slide']['message']) && $_SESSION['modifier_slide']['message_affiche'] == false){
		echo $_SESSION['modifier_slide']['message']."<br />";
		$_SESSION['modifier_slide']['message_affiche'] = true;
	}
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Modification du slide:</legend>
		<br />
		<?php 
			$formulaire = "modification";
			require_once('include_form_ajouter_modifier_slide.php'); 
		?>
		<br />
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

?>
	<h2>Lecture d'une news:</h2><br />
	<br />
	
	<?php
	if(isset($_SESSION['news']['message']) && $_SESSION['news']['message_affiche'] == false){
		echo $_SESSION['news']['message'];
		$_SESSION['news']['message_affiche'] = true;
	}
	?>
	<?php
	if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	?>
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Modération</legend><br />
		<br />
		<center>
			<a href="<?php echo $oCL_page->getPage('modifier_news')."?id_news=".$nouveautee[0]['ID_NOUVEAUTE']; ?>">Modifier la news.</a><br />
		</center>
		<br />
	</fieldset>
	<?php
	}
	?>
	<br />
	
	<fieldset class="padding_LR formulaire"><legend class="legend_basique"><?php echo str_replace(' ', '&nbsp;', $nouveautee[0]['TITRE']); ?>&nbsp;</legend><br />
	<div style="width:20%;" class="fright">
		<img class="border" height="100px" width="100%" src="<?php echo $nouveautee[0]['URL_PHOTO']; ?>" alt="Photo de la news" /><br />
	</div>
	<br />
	<div style="width:80%;">
		<span class="noir petit"><center><u>Auteur</u>: <?php echo $nouveautee[0]['AUTEUR']; ?><br />
		Publiée le <?php echo $nouveautee[0]['DATE_CREATION']; ?>.</center></span><br />
		<br />
	</div>
	<div>
	<span class="noir"><?php echo $nouveautee[0]['CONTENU']; ?></span>
	</div>
	<br />
	<?php
	if(isset($_SESSION['compte']) && $_SESSION['compte']['connecté'] == true){
	?>
		<hr />
		<center>
			<b><u>Poster un commentaire:</u></b>&nbsp;&nbsp;<img id="img_commentaire" onclick="fx_affiche('div_commentaire', 'img_commentaire');" src="<?php echo $oCL_page->getImage('petit_plus'); ?>" alt="Afficher/Cacher le commentaire" title="Afficher/Cacher le commentaire" /><br />
			<br />
			<div id="div_commentaire">
				<form action="script_poster_commentaire.php" name="form_poster_commentaire" method="post">
					<input type="hidden" name="form_poster_commentaire_id_nouveaute" value="<?php echo $nouveautee[0]['ID_NOUVEAUTE']; ?>" />
					<textarea autofocus="1" cols="80" rows="5" name="form_poster_commentaire_contenu"></textarea><br />
					<br />
					<input type="image" src="<?php echo $oCL_page->getImage('valider'); ?>" alt="Poster mon commentaire" title="Poster mon commentaire" /><br />
				</form>
			</div>
		</center>
		<br />
	<?php
	}else{
		echo "<span class='orange petit'>Vous devez être connecté afin de poster un commentaire.</span><br />";
	}
	?>
	</fieldset>

	<script type="text/javascript">
		initialiser_div('div_commentaire');
	</script>
	<br />
	<a href="<?php echo $oCL_page->getPage('liste_news'); ?>">Voir toutes les news</a>
	<br />
	<?php
	# On s'occupe des commentaires de la news.
	?>
	
	<?php
		if($nb_result[0]['nb_commentaire'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_commentaire'], $page_actuelle);
		}
	?>
	<?php
	if(count($commentaires) > 0){
	?>
	<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Commentaires</legend><br />
	<br />
		<?php
		foreach($commentaires as $key=>$commentaire){
		?>
			<div class="fleft">
				<b>Commentaire posté par <?php if(isset($_SESSION['compte']) && $_SESSION['compte']['connecté'] == true){echo "<span class='valide'>".$commentaire['PSEUDO']."</span>";}else{echo "le membre N°".$commentaire['ID_PERSONNE'];} ?> le <span class="rose"><?php echo $commentaire['DATE_CREATION']; ?></span>.</b><br />
				<br />
			</div>
			<?php
			# Modération du commentaire par administrateur.
			if(isset($_SESSION['compte'])&& $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
			?>
				<div class="fleft">
					<form action="script_cacher_commentaire.php" method="post" name="form_cacher_commentaire">
						<input type="hidden" name="form_cacher_commentaire_id_nouveaute" value="<?php echo $nouveautee[0]['ID_NOUVEAUTE'] ?>" />
						<input type="hidden" name="form_cacher_commentaire_id_commentaire" value="<?php echo $commentaire['ID_COMMENTAIRE'] ?>" />
						&nbsp;&nbsp;<input onclick="return confirm('Etes-vous sur de vouloir supprimer ce commentaire ?');" type="image" height="24px" width="24px" src="<?php echo $oCL_page->getImage('croix'); ?>" alt="Supprimer le commentaire" title="Supprimer le commentaire" />
					</form>
				</div>
			<?php
			}
			?>
			<br class="clear" />
			<?php echo $commentaire['CONTENU']; ?><br />
			<br />
			<hr />
		<?php
		}
		?>
		<br />
	</fieldset>
	<?php
	}else{
	?>
	<center class="petit noir">Il n'y a pas encore eu de commentaire pour cette news ! Soyez le premier à en postez une !</center>
	<?php
	}
	?>
	<?php
		if($nb_result[0]['nb_commentaire'] > $nb_result_affiches){
			$path_parts = pathinfo($_SERVER['PHP_SELF']);
			$page = $path_parts["basename"];
			$page_actuelle = ($limite/$nb_result_affiches)+1;
			afficher_pages($nb_result_affiches, $page, $nb_result[0]['nb_commentaire'], $page_actuelle);
		}
	?><?php
require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_nouveaute.php');
require_once('couche_metier/PCS_commentaire.php');
require_once('couche_metier/CL_date.php');

$oMSG = new MSG();
$oPCS_nouveaute = new PCS_nouveaute();
$oPCS_commentaire = new PCS_commentaire();
$oCL_date = new CL_date();

$oMSG->setData('VISIBLE', 1);
$oMSG->setData('nb_result_affiches', 5);
$oMSG->setData('debut_affichage', 0);

$nouveautees_ = $oPCS_nouveaute->fx_selectionner_nouveautees_BY_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
# Appelé nouveautees_ afin de ne pas créer d'interférences avec d'autres scripts.

# On met en forme les données.
foreach($nouveautees_ as $key=>$nouveaute){
	$nouveautees_[$key]['DATE_CREATION'] = $oCL_date->fx_formatter_heure($oCL_date->fx_ajouter_date($nouveaute['DATE_CREATION'], true, false, 'en', 'fr'), true, 'fr'); 
}

?>
<h2>LES NOUVEAUT&Eacute;ES</h2>
<ul class="news-list">
	<?php
	foreach($nouveautees_ as $key=>$nouveaute){
		
		$oMSG->setData('VISIBLE', 1);
		$oMSG->setData('ID_NOUVEAUTE', $nouveaute['ID_NOUVEAUTE']);
		
		# On récupère le nombre de commentaires.
		$nb_commentaire = $oPCS_commentaire->fx_compter_tous_commentaires_by_ID_NOUVEAUTE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
	?>
		<li>
			<img alt="Image de la nouveautée !" height="180px" width="180px" src="<?php if(!empty($nouveaute['URL_PHOTO'])){echo $nouveaute['URL_PHOTO'];}else{echo $oCL_page->getImage('news1');} ?>" />
			<b style="color:#e7a5f7"><u>Publiée le <?php echo $nouveaute['DATE_CREATION']; ?>&nbsp;:</u></b><br />
			<br />
			<h5><?php echo $nouveaute['TITRE']; ?></h5><br />
			<br />
			<h6><?php echo $nouveaute['ENTETE']; ?></h6><br />
			<br />
			<a href="<?php echo $oCL_page->getPage('news')."?id_news=".$nouveaute['ID_NOUVEAUTE']; ?>" class="link3">Voir la suite...</a><span class="comment"><a href="<?php echo $oCL_page->getPage('news')."?id_news=".$nouveaute['ID_NOUVEAUTE']; ?>"><?php if($nb_commentaire[0]['nb_commentaire'] > 0){echo $nb_commentaire[0]['nb_commentaire']." commentaires";} ?></a></span>
		</li>
	<?php
	}
	?>
</ul>
<a href="<?php echo $oCL_page->getPage('liste_news'); ?>" class="link1">Voir toutes les news</a><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once ('couche_metier/MSG.php');
require_once ('couche_metier/PCS_personne.php');

$oMSG = new MSG();
$oPCS_personne = new PCS_personne();

# On récupère les 6 derniers artistes qui se sont inscrit et dont l'inscrption a été validée.

$oMSG->setData('TYPE_PERSONNE', 'Prestataire');
$oMSG->setData('nb_result_affiches', 6);
$oMSG->setData('debut_affichage', 0);

$nouveaux_artistes = $oPCS_personne->fx_recuperer_date_creation_compte($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC); 


?>
<div class="section">
	<h3>Nouveaux Artistes</h3>
	<ul class="members-list">
		<?php
		foreach($nouveaux_artistes as $key=>$nouvel_artiste){
		?>
			<li><a href="<?php echo $oCL_page->getPage('personne')."?id_personne=".$nouvel_artiste['ID_PERSONNE']; ?>"><img class="image_border" alt="<?php if(isset($_SESSION['pack']) && $_SESSION['pack']['CV_ACCESSIBLE'] >= 2){echo $nouvel_artiste['PSEUDO'];}else{echo "Membre N°".$nouvel_artiste['ID_PERSONNE'];} ?>" title="<?php if(isset($_SESSION['pack']) && $_SESSION['pack']['CV_ACCESSIBLE'] >= 2){echo $nouvel_artiste['PSEUDO'];}else{echo "Membre N°".$nouvel_artiste['ID_PERSONNE'];} ?>" src="<?php if(!empty($nouvel_artiste['URL_PHOTO_PRINCIPALE'])){echo $nouvel_artiste['URL_PHOTO_PRINCIPALE'];}else{echo $oCL_page->getImage('avat_test1');} ?>" /><?php if(isset($_SESSION['pack']) && $_SESSION['pack']['CV_ACCESSIBLE'] >= 2){echo $nouvel_artiste['PSEUDO'];}else{echo "Membre N°".$nouvel_artiste['ID_PERSONNE'];} ?></a></li>
		<?php
		}
		?>
	</ul>
	<a href="<?php echo $oCL_page->getPage('liste_artiste'); ?>" class="link1">Voir tous les artistes ></a>
</div><div class="padding_LR">
	<div id="panel" style="position:relative;">
	<!-- Div contenant les informations du trajet. -->
	</div>
</div><h3>PARTENAIRES</h3>
<center>
	<a href="http://www.penduquiz.com/inscription_gratuite_jeux_flash.php?parrain=membre1925" title="Jouer gratuitement au quiz et au pendu"><img src="http://www.penduquiz.com/bannieres/bann250250.gif" alt="Pendu Quiz" border="0"/></a> <br/><br/>
</center><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}
?>
<?php
if(isset($_SESSION['pack']) && $_SESSION['pack']['CV_ACCESSIBLE'] >= 2){
?>
	<h2>Fiche de <?php echo $prestataire[0]['PSEUDO']; ?>:</h2><br />
	<br />
<?php
}else{
?>
	<h2>Fiche de l'artiste N°<?php echo $prestataire[0]['ID_PERSONNE']; ?>:</h2><br />
	<br />
<?php
}
?>
<?php
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
<br />
<fieldset class="padding_LR"><legend class="legend_basique">Modération</legend><br />
	<br />
	<center>
		<a href="<?php echo $oCL_page->getPage('modifier_fiche_membre')."?id_personne=".$prestataire[0]['ID_PERSONNE']; ?>">Modifier la fiche du membre.</a><br />
	</center>
	<br />
</fieldset>
<?php
}
?>
<br />
<fieldset class="padding_LR"><legend class="legend_basique">Informations personnelles</legend><br />
	<br />
	<div style="width:80%; float:left;">
		<?php
		if($_SESSION['compte']['connecté'] == true){
			if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] >= 4){
			?>
				<b class="rose">Identité</b>: <?php echo $prestataire[0]['CIVILITE']; ?>. <?php echo $prestataire[0]['NOM']; ?> <?php echo $prestataire[0]['PRENOM']; ?>.
			<?php
			}else if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] < 4){
			?>
				<b class="rose">Identité</b>: <span class="orange petit">Le prestataire ne peut pas afficher cette information.</span><br />
			<?php
			}else{
			?>
				<b class="rose">Identité</b>: <span class="alert petit">Vous devez être connecté pour voir cette information !</span><br />
			<?php
			}
			?>
			<br />
			<b class="rose">Age</b>: <?php if($prestataire[0]['age'] < 150){echo $prestataire[0]['age']." ans.";}else{echo "<span class='orange petit'>Le prestataire ne souhaite pas afficher cette information.</span>";} ?> <br />
			<br />
			<?php
			if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] >= 4){
			?>
				<b class="rose">Email</b>: <?php echo $prestataire[0]['EMAIL']; ?><br />
			<?php
			}else if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] < 4){
			?>
				<b class="rose">Email</b>: <span class="orange petit">Le prestataire ne peut pas afficher cette information.</span><br />
			<?php
			}else{
			?>
				<b class="rose">Email</b>: <span class="alert petit">Vous devez être connecté pour voir cette information !</span><br />
			<?php
			}
			?>
			<br />
			<?php
			if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] >= 4){
			?>
				<b class="rose">Adresse postale</b>: <?php echo $adresse_complete; ?><br />
			<?php
			}else if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] < 4){
			?>
				<b class="rose">Adresse postale</b>: <span class="orange petit">Le prestataire ne peut pas afficher cette information.</span><br />
			<?php
			}else{
			?>
				<b class="rose">Adresse postale</b>: <span class="alert petit">Vous devez être connecté pour voir cette information !</span><br />
			<?php
			}
			?>
			<br />
			<?php
			if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] >= 4){
			?>
				<b class="rose">Téléphone fixe</b>: <?php echo $prestataire[0]['TEL_FIXE']; ?><br />
				<b class="rose">Téléphone portable</b>: <?php echo $prestataire[0]['TEL_PORTABLE']; ?><br />
			<?php
			}else if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] < 4){
			?>
				<b class="rose">Téléphone fixe</b>: <span class="orange petit">Le prestataire ne peut pas afficher cette information.</span><br />
				<b class="rose">Téléphone portable</b>: <span class="orange petit">Le prestataire ne peut pas afficher cette information.</span><br />
			<?php
			}else{
			?>
				<b class="rose">Téléphone fixe</b>: <span class="alert petit">Vous devez être connecté pour voir cette information !</span><br />
				<b class="rose">Téléphone portable</b>: <span class="alert petit">Vous devez être connecté pour voir cette information !</span><br />
			<?php
			}
		}#Fin du if de test connecté.
		
			?>
		<br />
	</div>

	<div style="width:20%; float:left;">
		<img class="image_border" src="<?php  if(!empty($prestataire[0]['URL_PHOTO_PRINCIPALE'])){echo $prestataire[0]['URL_PHOTO_PRINCIPALE'];}else{echo $oCL_page->getImage("avat_test1");} ?>" alt="Photo du membre" title="Photo du membre" />
	</div>
	<div class="clear">
		<?php
		if($_SESSION['compte']['connecté'] == true){
			if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] >= 2){
				if(!empty($prestataire[0]['DESCRIPTION'])){
				?>
					<b class="rose">Description</b>: <br />
					<?php echo $prestataire[0]['DESCRIPTION']; ?><br />
				<?php
				}else{
					echo "<b class='rose'>Description</b>: <br /><span class='orange petit'>Le prestataire n'a pas rédigé de description.</span>";
				}
			}else if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] < 2){
			?>
				<b class="rose">Description</b>: <span class="orange petit">Le prestataire ne peut pas afficher cette information.</span><br />
			<?php
			}else{
			?>
				<b class="rose">Description</b>: <span class="alert petit">Vous devez être connecté pour voir cette information !</span><br />
			<?php
			}
		}# Fin du if de test connecté
		else{
			echo "<div><br /><center class='alert'>Vous devez être connecté pour voir les informations personnelles de l'artiste !</center>";
		}
		?>
		<br />
		<br />
	</div>
	<br />
</fieldset>
<br />
<br />
<br />
<fieldset class="padding_LR"><legend class="legend_basique">Informations sur ses prestations</legend><br />
	<br />
	<div>
		<b class="rose"><u>Rôles que peut occuper <?php if(isset($_SESSION['pack']) && $_SESSION['pack']['CV_ACCESSIBLE'] >= 2){echo $prestataire[0]['PSEUDO'];}else{echo "le membre N°".$prestataire[0]['ID_PERSONNE'];} ?></u></b>: <br />
		<ul>
		<?php 
		if(count($ROLES) > 0 && !empty($ROLES[0])){
			foreach($ROLES as $key=>$ROLE){
			?>
				<li><?php echo $ROLE; ?></li>
			<?php
			}		
		}else{
			echo "<span class='orange petit'>Le prestataire ne s'est pas attribué de rôle.</span>";
		}
		?>
		</ul>
		<br />
		<b class="rose"><u>Moyennes des notes du prestataire</u></b>:<br />
		<br />
		<div class="padding_LR">
			<table>
			<?php
			foreach($types_evaluation as $key=>$type_evaluation){
				foreach($evaluations as $key_eval=>$evaluation){
					if($key_eval == $type_evaluation['ID_TYPES']){
						if(!isset($evaluations[$key_eval]['erreur'])){
						?>
						
						<tr><th width="30%"><b class="rose"><?php echo $key_eval ?></b>:</th>
						<th>
						<?php
							# Pour chaque fois qu'on a une note on créée une étoile pleine.
							for($i = 0;$i < $evaluations[$key_eval]['evaluation']; $i++){
							?>
								<img src="<?php echo $oCL_page->getImage('etoile_pleine'); ?>" alt="Le prestataire a eu <?php echo (int)$evaluations[$key_eval]['evaluation']; ?>/5" title="Le prestataire a eu <?php echo (int)$evaluations[$key_eval]['evaluation']; ?>/5" />
							<?php
							}
							# Pour chaque fois qu'on a pas eu la note on crée une étoile vide.
							for($i = 0;$i < (5 - $evaluations[$key_eval]['evaluation']); $i++){
							?>
								<img src="<?php echo $oCL_page->getImage('etoile_vide'); ?>" alt="Le prestataire a eu <?php echo (int)$evaluations[$key_eval]['evaluation']; ?>/5" title="Le prestataire a eu <?php echo (int)$evaluations[$key_eval]['evaluation']; ?>/5" />
							<?php
							}
							?>
							</th></tr>
							
							<?php
						}else{
						# Le prestataire n'a jamais été noté.
						?>
						<b class="rose"><?php echo $key_eval; ?></b>: <?php echo $evaluation['erreur']; ?><br />
						<?php
						}
						
					}
				}
			}
			?>
			</table>
		</div>
		<br />
		<br />
		<b class="rose"><u>Statut professionnel</u></b>: </span><br />
		<?php if(!empty($prestataire[0]['STATUT_PERSONNE'])){echo $prestataire[0]['STATUT_PERSONNE'];}else{echo "<span class='petit orange'>Le prestataire n'a pas déclaré son statut professionnel.</span>";} ?><br />
		<br />
		<?php
		# Grâce au numéro de siret on peut retrouver une personne donc on évite de l'afficher si le mec n'a pas de pack au moins Live Max.
		if($prestataire[0]['STATUT_PERSONNE'] == "Pro" && !empty($prestataire[0]['SIRET'])){
			if($pack_ok == true && $pack_prestataire[0]['CV_ACCESSIBLE'] >= 6){
			?>
				<b class="rose">N° SIRET</b>: </span><?php echo $prestataire[0]['SIRET']; ?><br />
				<br />
			<?php
			}else{
			?>
				<b class="rose">N° SIRET</b>: </span><span class="petit orange">Le prestataire ne peut pas afficher son numéro de siret.</span><br />
				<br />
			<?php
			}
		}
		?>
		<?php
		if($prestataire[0]['DISTANCE_PRESTATION_MAX'] != "0,0"){
		?>
			<b class="rose souligne">Distance maximale acceptée entre le lieu de prestation et son lieu d'habitation</b>: </span><br />
			<?php echo $prestataire[0]['DISTANCE_PRESTATION_MAX']; ?> Km.<br />
			<br />
		<?php
		}
		?>
		<b class="rose"><u>Détail des tarifs</u></b>: </span><br />
		<?php if(!empty($prestataire[0]['TARIFS'])){echo $prestataire[0]['TARIFS'];}else{echo "<span class='orange petit'>Le prestataire n'a donné aucune information sur ses tarifs.</span>";} ?><br />
		<br />
		<br />
		<b class="rose"><u>Détail de l'équipement</u></b>: </span><br />
		<?php if(!empty($prestataire[0]['MATERIEL'])){echo $prestataire[0]['MATERIEL'];}else{echo "<span class='orange petit'>Le prestataire n'a donné aucune information sur son équipement.</span>";} ?><br />
		<br />
		<br />
		<?php
		if($pack_ok == true && $pack_prestataire[0]['CV_VIDEO_ACCESSIBLE'] == true){
		?>
			<b class="rose"><u>Vidéo présentant son activité</u></b>: <br />
			<br />
			<?php 
			if(!empty($prestataire[0]['CV_VIDEO'])){
			?>
				<object style="border-width:2px;border-style:solid;" type="application/x-shockwave-flash" width="100%" height="355px" data="<?php echo $prestataire[0]['CV_VIDEO']; ?>">
					<param name="movie" value="<?php echo $prestataire[0]['CV_VIDEO']; ?>">
					<param name="wmode" value="transparent">
				</object>
			<?php
			}else{
				echo "<span class='noir'>Pas de vidéo disponible.</span>";
			}
			?>
			<br />
		<?php
		}else if($pack_ok == true && $pack_prestataire[0]['CV_VIDEO_ACCESSIBLE'] == false){
		?>
			<b class="rose"><u>Vidéo présentant son activité</u></b>:<br />
			<span class="orange petit">Le pack de l'artiste ne lui permet pas d'afficher cette information.</span><br />
		<?php
		}else{
		?>
			<b class="rose"><u>Vidéo présentant son activité</u></b>:<br />
			<span class="alert petit">Le pack de l'artiste ne lui permet pas d'afficher cette information.</span><br />
		<?php
		}
		?>
		<br />
	</div>

</fieldset>

<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_pub.php');

$oMSG = new MSG();
$oPCS_pub = new PCS_pub();

# On récupère les pubs qui doivent être affichés ici.
$POSITION = 2;
$oMSG->setData('POSITION', $POSITION);

$pubs = $oPCS_pub->fx_recuperer_pubs_by_POSITION($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
$nb_pubs = count($pubs);

if($nb_pubs > 0){
	# On en affiche une au hasard.
	$key = mt_rand(0, $nb_pubs-1);

	?>
	<br />
	<center>	
		<?php
		if(!isset($_SESSION['pack']['activé']) || $_SESSION['pack']['PUBS'] != false){
		?>
			<div id="pub_bas" width="468px" height="60px">
				<?php echo $pubs[$key]['CONTENU']; ?>
			</div>
		<?php
		}
		?>
	</center>
<?php
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_pub.php');

$oMSG = new MSG();
$oPCS_pub = new PCS_pub();

# On récupère les pubs qui doivent être affichés ici.
$POSITION = 1;
$oMSG->setData('POSITION', $POSITION);

$pubs = $oPCS_pub->fx_recuperer_pubs_by_POSITION($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
$nb_pubs = count($pubs);

if($nb_pubs > 0){
	# On en affiche une au hasard.
	$key = mt_rand(0, $nb_pubs-1);

	?>
	<br/> 
	<center>	
		<?php
		if(!isset($_SESSION['pack']['activé']) || $_SESSION['pack']['PUBS'] != false){
		?>
			<div id="pub_haut" width="468px" height="60px">
				<?php echo $pubs[$key]['CONTENU']; ?>
			</div>
		<?php
		}
		?>
	</center>
<?php
}
?><?php
$_SESSION['page_actuelle'] = "recuperation_mdp";

require_once('couche_metier/CL_page.php');
$oCL_page = new CL_page();

if(isset($_SESSION['compte']['connecté']) && $_SESSION['compte']['connecté'] == true){
	 ?>
	 Vous êtes déjà connecté. Vous ne pouvez pas effectuer une récupération de mot de passe en étant connecté.
	 
	 <?php
	 header ("Refresh: 1;URL=".$oCL_page->getPage('accueil'));
	
}else{
?>
<h2>Récupération de mot de passe:</h2>

<h4><u>Comment ça marche ?</u></h4>
Le principe de récupération de votre mot de passe est simple.<br />
Vous devez entrer votre pseudo et votre adresse e-mail dans les cases indiquées.<br />
Le système vérifiera ces informations et si elles sont exactes alors un e-mail vous sera envoyé avec votre mot de passe.<br /><br />

<?php
if(isset($_SESSION['récupération']['message'])){
	if($_SESSION['récupération']['message_affiche'] == false){
		echo $_SESSION['récupération']['message'];
		$_SESSION['récupération']['message_affiche'] = true;
	}
}

?>
<br />
<fieldset class="formulaire"><legend class="legend_basique">Formulaire de récupération de votre mot de passe:</legend>
	<form action="script_recuperation_mdp.php" method="post" name="form_recuperation_mdp" id="form_recuperation_mdp">
		<br />
		<span class="alert">*</span><label for="form_recuperation_mdp_pseudo">Pseudo:</label><br />
		<input type="text" name="form_recuperation_mdp_pseudo" id="form_recuperation_mdp_pseudo" class="my_input" /><br  />
		<br />
		
		<span class="alert">*</span><label for="form_recuperation_mdp_email">E-mail:</label><br />
		<input type="text" name="form_recuperation_mdp_email" id="form_recuperation_mdp_email" class="my_input" /><br  />
		<br />
		
		<center>
			<input type="image" src="images/valider.jpg" name="btn_form_recuperation_mdp_valider" id="btn_form_recuperation_mdp_valider" class="art-button" value="Valider" />
		</center>
		</form>
</fieldset>
<?php
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_slide.php');

$oMSG = new MSG();
$oPCS_slide = new PCS_slide();

$oMSG->setData('VISIBLE', 1);

$slides_ = $oPCS_slide->fx_recuperer_slides_by_VISIBLE($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);
foreach($slides_ as $key=>$slide_){
	$slides_[$key]['ACCES'] = explode(',', $slide_['ACCES']);
}
?>

<div id="loopedSlider">	
	<div class="container">
		<div class="slides">
			<?php
			foreach($slides_ as $key=>$slide_){
				# On dit que le slide n'a pas encore été affiché.
				$slide_['affiché'] = false;

				if(in_array('Non connectés', $slide_['ACCES']) && !$slide_['affiché']){

					if(!$_SESSION['compte']['connecté']){
						$slide_['affiché'] = true;
					?>
						<div class="<?php echo $slide_['CLASSE']; ?>"><a href="<?php echo $slide_['LIEN']; ?>"><img alt="" src="<?php echo $slide_['URL'] ?>" /></a><strong><?php echo $slide_['TITRE']; ?></strong></div>
					<?php
					}
				}
				if(in_array('Prestataire', $slide_['ACCES']) && !$slide_['affiché']){
					if(isset($_SESSION['compte']['TYPE_PERSONNE']) && $_SESSION['compte']['TYPE_PERSONNE'] == "Prestataire"){
						$slide_['affiché'] = true;
					?>
						<div class="<?php echo $slide_['CLASSE']; ?>"><a href="<?php echo $slide_['LIEN']; ?>"><img alt="" src="<?php echo $slide_['URL'] ?>" /></a><strong><?php echo $slide_['TITRE']; ?></strong></div>
					<?php
					}
				}
				if(in_array('Organisateur', $slide_['ACCES']) && !$slide_['affiché']){
					if(isset($_SESSION['compte']['TYPE_PERSONNE']) && $_SESSION['compte']['TYPE_PERSONNE'] == "Organisateur"){
						$slide_['affiché'] = true;
					?>
						<div class="<?php echo $slide_['CLASSE']; ?>"><a href="<?php echo $slide_['LIEN']; ?>"><img alt="" src="<?php echo $slide_['URL'] ?>" /></a><strong><?php echo $slide_['TITRE']; ?></strong></div>
					<?php
					}
				}
				if(in_array('Admin', $slide_['ACCES']) && !$slide_['affiché']){
					if(isset($_SESSION['compte']['TYPE_PERSONNE']) && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
						$slide_['affiché'] = true;
					?>
						<div class="<?php echo $slide_['CLASSE']; ?>"><a href="<?php echo $slide_['LIEN']; ?>"><img alt="" src="<?php echo $slide_['URL'] ?>" /></a><strong><?php echo $slide_['TITRE']; ?></strong></div>
					<?php
					}
				}
			}
			?>
		</div>
	</div>
</div><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
?>
	<h2>Statistiques globales:</h2><br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Revenus globaux:</legend>
		<br />
		<table>
			<tr class="formulaire">
				<th width="40%" height="30px">Entité:</th>
				<th width="40%">Revenu total:</th>
				<th width="20%">Nombre d'achats:</th>				
			</tr>
			<tr><th colspan="3"><hr /></th></tr>
			<tr>
				<th height="30px" class="formulaire">Annonces GoldLive:</th>
				<th>Entre <span class="valide"><?php echo $revenu_min_goldlive; ?>€</span> et <span class="valide"><?php echo $revenu_max_goldlive; ?>€</span>.</th>
				<th><?php echo $goldlives[0]['nb_annonce']; ?></th>
			</tr>
			<?php
			foreach($packs as $key=>$pack){
				if($pack['PRIX_BASE'] > 0){
			?>
					<tr><th colspan="3"><hr /></th></tr>
					<tr>
						<th height="30px" class="formulaire"><?php echo $pack['NOM']; ?>:</th>
						<th><?php echo $pack['gains']; ?>€</th>
						<th><?php echo $pack['nb_achats']; ?></th>
					</tr>
			<?php
				}
			}
			?>
			<tr><th colspan="3"><hr /></th></tr>
			<tr>
				<th height="30px" class="formulaire">Total:</th>
				<th>Entre <span class="valide"><?php echo $gain_total+$revenu_min_goldlive; ?>€</span> et <span class="valide"><?php echo $gain_total+$revenu_max_goldlive; ?>€</span></th>
				<th><?php echo $achats_totaux; ?> packs et <?php echo $goldlives[0]['nb_annonce']; ?> annonces goldlive.</th>
			</tr>			
		</table>
		<br />
	</fieldset>
	<br />
	<br />
	<fieldset class="padding_LR"><legend class="legend_basique">Nombre de connectés:</legend>
		<br />
		<?php
		if($nb_connectes[0]['nb_personne'] > 1){
		?>
			Il y a actuellement <?php echo $nb_connectes[0]['nb_personne']; ?> membres connectés sur le site.<br />
		<?php
		}else{
		?>
			Il y a actuellement <?php echo $nb_connectes[0]['nb_personne']; ?> membre connecté sur le site.<br />
		<?php
		}
		?>
		<br />
	</fieldset>

<?php	
}else{
# Si l'internaute n'est pas connecté et admin il gicle.
header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
?>
	<h2>Supprimer mon compte:</h2><br />
	<br />
	<?php
	if(isset($_SESSION['supprimer_compte']['message']) && $_SESSION['supprimer_compte']['message_affiche'] == false){
		echo $_SESSION['supprimer_compte']['message']."<br /><br />";
		$_SESSION['supprimer_compte']['message_affiche'] = true;
	}	
	
	?>
	
	Voici le formulaire de suppression du compte.<br />
	Afin de satisfaire toujours au mieux notre clientèle nous vous demandons d'indiquer la raison de la suppression.<br />
	Cette information sera étudiée afin de savoir si des améliorations sont nécessaires et envisageables.<br />
	<br />
	À noter que votre compte ne sera pas immédiatement supprimé. Nous conservons l'intégralité de vos informations pour une durée de deux mois.<br />
	Vos informations -quelles qu'elles soient- ne seront pas divulguées à des tiers ni utilisées autrement que dans un but d'amélioration de nos services et de statistiques.<br />
	<br />
	Si vous souhaitez toutefois supprimer définitivement vos informations <u title='Seules les informations suivantes seront immédiatement supprimées. Nom, prénom, date de naissance, photo, civilité, email, ville, adresse, code postal, téléphones.'>personnelles</u> vous pouvez cocher la case correspondante et elles seront supprimées immédiatement.<br />
	<br />
	<br />
	<fieldset><legend class="legend_basique">Suppression du compte:</legend><br />
		<br />
		<form class="formulaire" method="post" action="script_supprimer_compte.php" name="form_supprimer_compte" id="form_supprimer_compte" >
			Entrez votre adresse e-mail:<br />
			<input onblur="fx_verif_champ_email('email', 'form_supprimer_compte_email');" type="text" name="form_supprimer_compte_email" id="form_supprimer_compte_email" /><br />
			<div id="email"></div>
			<br />
			Expliquez les raisons qui vous poussent à supprimer votre compte:<br />
			<textarea onblur="fx_verif_champ_simple('raison', 'form_supprimer_compte_raison');" name="form_supprimer_compte_raison" id="form_supprimer_compte_raison" cols="90" rows="10" ></textarea><br />
			<div id="raison"></div>
			<br />
			Entrez votre mot de passe:<br />
			<input onblur="fx_verif_champ_simple('mdp', 'form_supprimer_compte_mdp');" type="password" name="form_supprimer_compte_mdp" id="form_supprimer_compte_mdp" /><br />
			<div id="mdp"></div>
			<br />
			Je souhaite supprimer immédiatement mes informations <u title='Seules les informations suivantes seront immédiatement supprimées. Nom, prénom, date de naissance, photo, civilité, email, ville, adresse, code postal, téléphones.'>personnelles</u>.&nbsp;<select name="form_supprimer_compte_infos_perso" id="form_supprimer_compte_infos_perso"><option value="0" selected="selected">Non</option><option value="1">Oui</select><br />
			<br />
			<span class="fright alert">Tous les champs sont obligatoires.&nbsp;&nbsp;</span><br />
			<br />
			<center>
				<input type="image" src="images/valider.png" alt="Supprimer mon compte" title="Supprimer mon compte" name="btn_form_supprimer_compte_valider" id="btn_form_supprimer_compte_valider" />
			</center>
		</form>
	</fieldset>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('couche_metier/MSG.php');
require_once('couche_metier/PCS_types.php');

$oMSG = new MSG();
$oPCS_types = new PCS_types();

$oMSG->setData('ID_FAMILLE_TYPES', 'Roles');

$types_actuels = $oPCS_types->fx_recuperer_tous_types_par_famille($oMSG)->getData(1)->fetchAll(PDO::FETCH_ASSOC);


?>
<div class="section">
	<h3>Tous les Artistes</h3>
	<ul class="adv-menu">
		<li><a href="<?php echo $oCL_page->getPage('liste_artiste')."#resultats_recherche"; ?>"><img alt="Tous" width="20" height="20" src="<?php echo $oCL_page->getImage('etoile_menu'); ?>" /> Tous</a></li>
		<?php
		foreach($types_actuels as $key=>$type){
		?>
			<li><a href="<?php echo $oCL_page->getPage('liste_artiste')."?role=".$type['ID_TYPES']."#resultats_recherche"; ?>"><img alt="<?php echo $type['ID_TYPES']; ?>" width="20" height="20" src="<?php echo $oCL_page->getImage('etoile_menu'); ?>" /> <?php echo $type['ID_TYPES']; ?></a></li>
		<?php
		}
		?>
	</ul>
</div><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Accueil</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}
# On définit la page courante:
$_SESSION['page_actuelle'] = "accueil";

?>

<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
      <!-- header -->
      <div id="header">
      	<div class="wrapper">
         	<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
            </div>
            <div class="col-2">
            	<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
            </div>
        </div>
    </div>
    <div id="content">
      	<div class="wrapper">
         	<div class="aside">
            	<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_facebook.php');
						require_once('include_types_artistes.php');
						require_once('include_nouveaux_artistes.php');
						require_once('include_dernieres_annonces.php');
					?>					
			   </div>
            </div>
            <div class="mainContent maxheight">
				<?php
					require_once('include_pub_haut.php');
				?>	
            	<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						if(isset($_SESSION['connexion']['message']) && $_SESSION['connexion']['message_affiche'] == false){
							echo $_SESSION['connexion']['message'];
							$_SESSION['connexion']['message_affiche'] = true;
						}else{
							require_once('include_artistes_premium.php');
							require_once('include_annonces_gold.php');
							require_once('include_nouveautees.php');
						}
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
	    <?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Inscription</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On définit la page courante:
$_SESSION['page_actuelle'] = "inscription";

?>
<script type="text/javascript" src="js/inscription.js"></script>
<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
      <!-- header -->
      <div id="header">
      	<div class="wrapper">
         	<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
            </div>
            <div class="col-2">
            	<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
            </div>
        </div>
    </div>
    <div id="content">
      	<div class="wrapper">
         	<div class="aside">
            	<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_dernieres_annonces.php');
						require_once('include_partenaire.php');
					?>					
			   </div>
            </div>
			<?php
				require_once('include_pub_haut.php');
			?>	
            <div class="mainContent maxheight">
            	<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_inscription.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
	    <?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Mon lien de parrainage</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('script_prechargement_lien_parrainage.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "lien_parrainage";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_lien_parrainage.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Liste des annonces</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

// Cette page est en libre accès.
		
require_once('script_prechargement_liste_annonce.php');

# On définit la page courante:
$_SESSION['page_actuelle'] = "liste_annonce";

?>
<body id="page1" onload="new ElementMaxHeight();">
	<script type="text/javascript" src="js/liste_annonce.js"></script>
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artistes_premium.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_dernieres_annonces.php');
						require_once('include_nouveaux_artistes.php');
						
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<?php
					require_once('include_pub_haut.php');
				?>	
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_liste_annonce.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html>
<?php
ob_start();
?>
<title>Administration: Liste des annonces</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}


# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
		
	require_once('script_prechargement_liste_annonce_admin.php');

	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_annonce_admin";

	# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
	require_once('include_header.php');
	?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artistes_premium.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_dernieres_annonces.php
						*/
							require_once('include_menuv_admin.php');
							
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_annonce_admin.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
ob_start();
?>
<title>Admin: Annonces en attente</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_annonces_en_attente.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_annonces_en_attente";

	# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
	require_once('include_header.php');
?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_annonces_en_attente.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
ob_start();
?>
<title>Liste des artistes</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

		
require_once('script_prechargement_liste_artiste.php');

# On définit la page courante:
$_SESSION['page_actuelle'] = "liste_artiste";

# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<script type="text/javascript" src="js/liste_artiste.js"></script>
<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_dernieres_annonces.php
					*/
						require_once('include_types_artistes.php');
						require_once('include_nouveaux_artistes.php');
						require_once('include_dernieres_annonces.php');
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<?php
					require_once('include_pub_haut.php');
				?>	
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_liste_artiste.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_pub_bas.php');
			require_once('include_footer.php');
		?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html><?php
ob_start();
?>
<?php
if(isset($_GET['rq']) && $_GET['rq'] == 'en_cours'){
?>
	<title>Admin: Liste des contrats en cours</title>
<?php 
}else{
?>
	<title>Admin: Liste de tous les contrats</title>
<?php
}
?>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_contrats_admin.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_contrats_admin";

	# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
	require_once('include_header.php');
?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_contrats_admin.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
ob_start();
?>
<title>Admin: Liste des membres</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_membre.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_membre";

	# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
	require_once('include_header.php');
?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_membre.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
ob_start();
?>
<title>Toutes les news</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_news.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}
	
# On définit la page courante:
$_SESSION['page_actuelle'] = "liste_news";

# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<script type="text/javascript" src="js/news.js"></script>
<body id="page1" onload="new ElementMaxHeight();">
   <div id="main">
	  <!-- header -->
	  <div id="header">
		<div class="wrapper">
			<div class="col-1">				
				<?php
					# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					require_once('include_connexion.php');
				?>
				<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
			</div>
			<div class="col-2">
				<?php
					/* Partie qui peut prendre les include: 
							include_menu_principal.php
							include_slider.php
					*/
					require_once('include_menu_principal.php');
					require_once('include_slider.php');
				?>
			</div>
		</div>
	</div>
	<div id="content">
		<div class="wrapper">
			<div class="aside">
				<div class="indent">
					<?php
					/* Partie qui peut prendre les include: 
							include_annonces_gold.php
							include_artiste.php
							include_partenaire.php
							include_nouveaux_artistes.php
							include_derniers_projets.php
					*/
						require_once('include_dernieres_annonces.php');
						require_once('include_partenaire.php');
					?>					
			   </div>
			</div>
			<div class="mainContent maxheight">
				<div class="indent">
					<?php
						/* Partie qui peut prendre les include: 
								include_artistes_premium.php
								include_nouveautees.php
						*/
						require_once('include_liste_news.php');
					?>	
					
						
					</div>
				</div>
			</div>
		</div>
		<?php
			/* Partie qui peut prendre les include: 
					include_pub_bas.php
					include_footer.php
			*/
			require_once('include_footer.php');
?>
   </div>
   <script type="text/javascript"> Cufon.now(); </script>
</body>
</html>
<?php
ob_start();
?>
<title>Admin: Liste des news</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_news_admin.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_news_admin";

	# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
	require_once('include_header.php');
?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_news_admin.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
ob_start();
?>
<title>Admin: Liste des packs</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_liste_packs.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_packs";

	# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
	require_once('include_header.php');
?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_packs.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Les prestations effectuées</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_liste_prestation.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_prestation";
	
?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_prestation.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Gestion des pubs</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_liste_pubs_admin.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_pubs_admin";

?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_pubs_admin.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Gestion des rôles</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_liste_role_admin.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "liste_role_admin";

?>
	<script type="text/javascript" src="js/liste_role_admin.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_liste_role_admin.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Maintenance en cours</title>
</head>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							
						?>	
						<h3>Maintenance:</h3>
						Le site est actuellement en maintenance, il est totalement indisponible pour toute la durée de la maintenance.<br />
						Cette maintenance peut-être due à diverses raisons, mise à jour du site, réparation ou simplement une sauvegarde des données.<br />
						<br />
						Nous vous prions de patienter et nous excusons de ce désagrément.<br />
						<br />
						L'équipe LiveAnim.
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
			?>
	   </div>
	</body>
	</html>
<?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Lecture d'un message</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('script_prechargement_message.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "message";


?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_message.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Ma messagerie</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	require_once('script_prechargement_messagerie.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "messagerie";


?>
	<script type="text/javascript" src="js/messagerie.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_messagerie.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Modification d'une annonce</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_modifier_fiche_annonce.php');

# On vérifie que la personne est connectée .
if($_SESSION['compte']['connecté'] == true){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_fiche_annonce";


?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_fiche_annonce.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Modification d'une annonce</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_modifier_fiche_annonce_by_admin.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_fiche_annonce_by_admin";

?>
<script type="text/javascript" src="js/modifier_annonce_by_admin.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_fiche_annonce_by_admin.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Modification du contrat N° <?php echo $_GET['id_contrat']; ?></title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_modifier_fiche_contrat.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_contrat";

?>
<script type="text/javascript" src="js/creer_contrat.js"></script>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_fiche_contrat.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Modification d'un utilisateur</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_modifier_fiche_membre.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_fiche_membre";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_fiche_membre.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Modification d'un pack</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_modifier_fiche_pack.php');

if(!isset($_SESSION['administration'])){
	$_SESSION['administration'] = array();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_fiche_pack";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_fiche_pack.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Modification de mon profil</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
	
	require_once('script_prechargement_modifier_fiche_perso.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_fiche_perso";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_fiche_perso.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Modification de mon mot de passe</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne soit connectée.
if($_SESSION['compte']['connecté'] == true){
		
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_mdp";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_gestion_compte.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_mdp.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_pub_bas.php');
				require_once('include_footer.php');
			?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
<?php
}else{
	# Si l'internaute n'est pas connecté il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Admin: Modification d'une news</title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

require_once('script_prechargement_modifier_news.php');

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_news";

?>

	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_news.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?><?php
# On inclut l'entête. Elle ouvre la session, crée un compte s'il n'existe pas. Et bufferise les données.
require_once('include_header.php');
?>
<title>Administration: Modification de la pub <?php echo $_GET['id_pub']; ?></title>
</head>
<?php
if(!isset($_SESSION)){
	session_start();
}

# On crée notre objet oCL_page.
if(!isset($oCL_page)){
	require_once('couche_metier/CL_page.php');
	$oCL_page = new CL_page();
}

# On vérifie que la personne est connectée et Admin.
if($_SESSION['compte']['connecté'] == true && $_SESSION['compte']['TYPE_PERSONNE'] == "Admin"){
	
	require_once('script_prechargement_modifier_pub.php');
	
	# On définit la page courante:
	$_SESSION['page_actuelle'] = "modifier_pub";

?>
	<body id="page1" onload="new ElementMaxHeight();">
	   <div id="main">
		  <!-- header -->
		  <div id="header">
			<div class="wrapper">
				<div class="col-1">				
					<?php
						# On inclut le formulaire de connexion ainsi que la bannière LiveAnim.
						require_once('include_connexion.php');
					?>
					<div class="logo"><a href="index.php"><img alt="" src="images/logo.png" /></a></div>
				</div>
				<div class="col-2">
					<?php
						/* Partie qui peut prendre les include: 
								include_menu_principal.php
								include_slider.php
						*/
						require_once('include_menu_principal.php');
						require_once('include_slider.php');
					?>
				</div>
			</div>
		</div>
		<div id="content">
			<div class="wrapper">
				<div class="aside">
					<div class="indent">
						<?php
						/* Partie qui peut prendre les include: 
								include_annonces_gold.php
								include_artiste.php
								include_partenaire.php
								include_nouveaux_artistes.php
								include_derniers_projets.php
						*/
							require_once('include_menuv_admin.php');
						?>					
				   </div>
				</div>
				<div class="mainContent maxheight">
					<div class="indent">
						<?php
							/* Partie qui peut prendre les include: 
									include_artistes_premium.php
									include_nouveautees.php
							*/
							require_once('include_modifier_pub.php');
						?>	
						
							
						</div>
					</div>
				</div>
			</div>
			<?php
				/* Partie qui peut prendre les include: 
						include_pub_bas.php
						include_footer.php
				*/
				require_once('include_footer.php');
	?>
	   </div>
	   <script type="text/javascript"> Cufon.now(); </script>
	</body>
	</html>
	<?php
}else{
	# Si l'internaute n'est pas connecté et admin il gicle.
	header('Location: '.$oCL_page->getPage('accueil', 'absolu'));
}
?>SetEnv PHP_VER 5
SetEnv REGISTER_GLOBALS 0
SetEnv MAGIC_QUOTES 0
SetEnv error_reporting -1

Options -Indexes

######### MAINTENANCE #########

ErrorDocument 403 /maintenance.php
allow from 89.158.146.181
allow from 79.80.96.47
allow from 77.193.147.167
allow from 86.77.36.26
allow from 173.0.9.175
allow from 77.198.249.50
allow from 173.0.8.187
allow from 173.0.5.186
allow from 173.0.2.177
allow from 173.0.2.161
allow from 62.35.244.241
allow from 89.86.14.62
allow from 77.193.143.243
allow from 77.206.83.161
allow from 2.4.18.67
allow from 77.198.245.115
allow from 77.192.123.139
allow from 86.77.36.21

#deny from all

<Files maintenance.php>
allow from all
</Files>

ErrorDocument 404 /index.php
<Files /404.php>
allow from all
</Files>var $j = jQuery.noConflict();

function fx_previsualiser_annonce(){
	// On récupère les variables formulaire.
	var titre = $j('#form_ajout_modification_annonce_titre').val();
	var type_annonce = $j('#form_ajout_modification_annonce_type_annonce').val();
	var date_debut = $j('#form_ajout_modification_annonce_date_debut').val();
	var date_fin = $j('#form_ajout_modification_annonce_date_fin').val();
	var artistes_recherches = $j('#form_ajout_modification_annonce_artistes_recherches').val();
	var budget = $j('#form_ajout_modification_annonce_budget').val();
	var nb_convives = $j('#form_ajout_modification_annonce_nb_convives').val();
	var description = $j('#form_ajout_modification_annonce_description').val();
	var departement = $j('#form_ajout_modification_annonce_id_departement').val();
	var adresse = $j('#form_ajout_modification_annonce_adresse').val();
	var cp = $j('#form_ajout_modification_annonce_cp').val();
	var ville = $j('#form_ajout_modification_annonce_ville').val();
	
	// On met les infos dans les div.
	$j('#previsualiser_titre').html("<center>"+titre+"</center><br />");
	$j('#previsualiser_type_annonce').html("<center>Evénement: <span class='noir'>"+type_annonce+"</span></center><br />");
	$j('#previsualiser_dates').html("<center>La représentation débute le <b>"+date_debut+"</b> et se termine le <b>"+date_fin+"</b></center><br />");
	$j('#previsualiser_budget_nb_personne').html("<center>Le budget initial est de <b>"+budget+"€</b>.<br />La représentation se fera devant <b>"+nb_convives+" personnes</b>.</center><br />");
	$j('#previsualiser_description').html("<span class='rose'>Description:<br /></span>"+description+"<br /><br />");
	$j('#previsualiser_artistes_recherches').html("<span class='rose'>Artistes recherchés:<br /></span>"+artistes_recherches+"<br /><br />"+
		"<span class='petit'>L'adresse est utilisée uniquement afin de faciliter la géolocalisation.</span>");
	
	
	new ElementMaxHeight();
}var $j = jQuery.noConflict();
// Lorsque le DOM est chargé on applique le Javascript 
$j(document).ready(function() {
	// On ajoute la classe "js" à la liste pour mettre en place par la suite du code CSS uniquement dans le cas où le Javascript est activé
	$j("ul.notes-echelle").addClass("js");
	// On passe chaque note à l'état grisé par défaut
	$j("ul.notes-echelle li").addClass("note-off");
	// Au survol de chaque note à la souris
	
	$j("ul.notes-echelle li").mouseover(function() {
		// On passe les notes supérieures à l'état inactif (par défaut)
		$j(this).nextAll("li").addClass("note-off");
		// On passe les notes inférieures à l'état actif
		$j(this).prevAll("li").removeClass("note-off");
		// On passe la note survolée à l'état actif (par défaut)
		$j(this).removeClass("note-off");
	});
	
	// Lorsque l'on sort du sytème de notation à la souris
	$j("ul.notes-echelle").mouseout(function() {
		// On passe toutes les notes à l'état inactif
		$j(this).children("li").addClass("note-off");
		// On simule (trigger) un mouseover sur la note cochée s'il y a lieu
		$j(this).find("li input:checked").parent("li").trigger("mouseover");
	});
	
	$j("ul.notes-echelle input")
	// Lorsque le focus est sur un bouton radio
	.focus(function() {
		// On passe les notes supérieures à l'état inactif (par défaut)
		$j(this).parent("li").nextAll("li").addClass("note-off");
		// On passe les notes inférieures à l'état actif
		$j(this).parent("li").prevAll("li").removeClass("note-off");
		// On passe la note du focus à l'état actif (par défaut)
		$j(this).parent("li").removeClass("note-off");
	})
	
	// Lorsque l'on sort du sytème de notation au clavier
	.blur(function() {
		// Si il n'y a pas de case cochée
		if($j(this).parents("ul.notes-echelle").find("li input:checked").length == 0) {
			// On passe toutes les notes à l'état inactif
			$j(this).parents("ul.notes-echelle").find("li").addClass("note-off");
		}
	});
	
	$j("ul.notes-echelle input")
	// Lorsque le focus est sur un bouton radio
	.focus(function() {
		// On supprime les classes de focus
		$j(this).parents("ul.notes-echelle").find("li").removeClass("note-focus");
		// On applique la classe de focus sur l'item tabulé
		$j(this).parent("li").addClass("note-focus");
		// [...] cf. code précédent
	})
	// Lorsque l'on sort du sytème de notation au clavier
	.blur(function() {
		// On supprime les classes de focus
		$j(this).parents("ul.notes-echelle").find("li").removeClass("note-focus");
		// [...] cf. code précédent
	})
	// Lorsque la note est cochée
	.click(function() {
		// On supprime les classes de note cochée
		$j(this).parents("ul.notes-echelle").find("li").removeClass("note-checked");
		// On applique la classe de note cochée sur l'item choisi
		$j(this).parent("li").addClass("note-checked");
	});
	
	// On simule un survol souris des boutons cochés par défaut
	$j("ul.notes-echelle input:checked").parent("li").trigger("mouseover");
	// On simule un click souris des boutons cochés
	$j("ul.notes-echelle input:checked").trigger("click");
});var $j = jQuery.noConflict();

function verif_choix(select){
	var choix = $j('#'+select).val();
	
	if(choix == 1){
		fx_modif_css('destinataire', 'display', 'block')
	}else{
		fx_modif_css('destinataire', 'display', 'none')
	}
}
var map;
var panel;
var direction;

function initialiser_GMap(){
	var latLng = new google.maps.LatLng(50.6371834, 3.063017400000035); // Correspond au coordonnées de Lille
	var myOptions = {
		zoom      : 14, // Zoom par défaut
		center    : latLng, // Coordonnées de départ de la carte de type latLng 
		mapTypeId : google.maps.MapTypeId.ROADMAP, // Type de carte, différentes valeurs possible HYBRID, ROADMAP, SATELLITE, TERRAIN
		maxZoom   : 20,
		scrollwheel: false
	};
	
	map      = new google.maps.Map(document.getElementById('map'), myOptions);
	panel    = document.getElementById('panel');
	
	direction = new google.maps.DirectionsRenderer({
		map: map,
		panel: panel
	});
}

function calculate(){
    origin      = document.getElementById('origin').value; // Le point départ
    destination = document.getElementById('destination').value; // Le point d'arrivé
    if(origin && destination){
        var request = {
            origin      : origin,
            destination : destination,
            travelMode  : google.maps.DirectionsTravelMode.DRIVING // Type de transport
        }
        var directionsService = new google.maps.DirectionsService(); // Service de calcul d'itinéraire
        directionsService.route(request, function(response, status){ // Envoie de la requête pour calculer le parcours
            if(status == google.maps.DirectionsStatus.OK){
                direction.setDirections(response); // Trace l'itinéraire sur la carte et les différentes étapes du parcours
            }
        });
    }
}

function verifier_donnees(){
	if(document.getElementById('origin').value == ",  "){
		document.getElementById('map').style.display = "none";
		document.getElementById('map_infos').style.display = "none";
		document.getElementById('map_erreur').innerHTML = "<center><span class='alert'>Vous devez être connecté pour bénéficier de cette fonctionnalité !<br /></span></center><br /><br />";
	}
	if(document.getElementById('origin').value == ", 0 "){
		document.getElementById('map').style.display = "none";
		document.getElementById('map_infos').style.display = "none";
		document.getElementById('map_erreur').innerHTML = "<center><span class='orange'>Vous devez renseigner votre adresse dans votre profil pour bénéficier de cette fonctionnalité.<br /></span>"+
		"<br /><br /><a href='http://liveanim.com/modifier_fiche_perso.php#form_fiche_membre_adresse'>Modifier mon addresse.</a></center><br /><br />";
		document.getElementById('panel').innerHTML = "<center><span class='orange'>Vous devez renseigner votre adresse dans votre profil pour voir le trajet entre vous et l'organisateur.</span></center>";
	}
	if(document.getElementById('destination').value == ", 0 "){
		document.getElementById('map').style.display = "none";
		document.getElementById('map_infos').style.display = "none";
		document.getElementById('map_erreur').innerHTML = "<center><span class='orange'>L'organisateur n'a pas rentré d'adresse postale, la carte n'a donc pas été activée.<br />Signalez le lui si vous le pouvez afin qu'il prenne des mesures.<br />Merci.</center><br /><br />";
		document.getElementById('panel').innerHTML = "<center><span class='orange'>Nous ne pouvons pas vous guider jusqu'à l'organisateur.</span></center>";
	}
}var $j = jQuery.noConflict();
var nb_erreur = 0;

// Fonctions de vérifications des formulaires.
function fx_verif_champ_vide(champ){
	if($j('#'+champ).val() == ""){
		return true;
	}else{
		return false;
	}
}

// Fonction de vérification basique (champ non vide).
function fx_verif_champ_simple(div, champ){
	champ_vide = fx_verif_champ_vide(champ);
	
	if(champ_vide){
		nb_erreur = 1;
	}else{
		nb_erreur = 0;
	}
	
	if(nb_erreur == 0){
		$j('#'+div).css({'width' : '100px', 'height' : '0px'});
		$j('#'+div).html("");
	}else{
		$j('#'+div).css({'width' : '100px', 'height' : '20px', 'padding-left' : '8px'});
		$j('#'+div).html("<span class='alert'>Champ vide</span>");
	}
	
	return champ_vide;
}

// Fonction de vérification entre deux champs devant avoir la même valeur.
function fx_verif_champ_double(div, champ1, champ2){
	nb_erreur = 0;
	var champ1_vide = fx_verif_champ_simple(div, champ1);
	var champ2_vide = fx_verif_champ_simple(div, champ2);
	
	if($j('#'+champ1).val() != $j('#'+champ2).val()){
		$j('#'+div).css({'width' : '400px', 'height' : '20px', 'padding-left' : '8px'});
		$j('#'+div).html("<span class='alert'>Les deux champs ne sont pas identiques.</span>");
		nb_erreur++;
	}
		
	if(nb_erreur == 0){
		$j('#'+div).css({'width' : '100px', 'height' : '0px'});
		return true;
	}else{
		return false;
	}
}

// Fonction de vérification d'un email.
function fx_verif_champ_email(div, champ){
	nb_erreur = 0;		
	var reg = new RegExp('^[a-z0-9]+([_|\.|-]{1}[a-z0-9]+)*@[a-z0-9]+([_|\.|-]{1}[a-z0-9]+)*[\.]{1}[a-z]{2,6}$', 'i');

	var email_valide = reg.test($j('#'+champ).val());
	
	if(!email_valide){
		$j('#'+div).css({'width' : '100px', 'height' : '20px', 'padding-left' : '8px'});
		$j('#'+div).html("<span class='alert'>Email&nbsp;incorrect&nbsp;!</span>");
		nb_erreur++;
	}
	
	if(nb_erreur == 0){
		$j('#'+div).css({'width' : '100px', 'height' : '0px'});
		$j('#'+div).html("");
		return true;
	}else{
		return false;
	}
}

// Fonction de vérification du numéro de SIRET.
function fx_verif_champ_siret(div, champ){
	nb_erreur = 0;		
	
	// On effectue la vérification que si le champ est non vide.
	var siret_vide = fx_verif_champ_vide(champ);

	if(!siret_vide){
		var reg = new RegExp('^[0-9]{3}[ \.\-]?[0-9]{3}[ \.\-]?[0-9]{3}[ \.\-]?[0-9]{5}$', 'g');

		var siret_valide = reg.test($j('#'+champ).val());
		
		if(!siret_valide){
			$j('#'+div).css({'width' : '100px', 'height' : '20px', 'padding-left' : '8px'});
			$j('#'+div).html("<span class='alert'>Numéro&nbsp;de&nbsp;siret&nbsp;incorrect&nbsp;!&nbsp;<span class='noir petit'>(14&nbsp;chiffres:&nbsp;xxx&nbsp;xxx&nbsp;xxx&nbsp;xxxxx)</span></span>");
			nb_erreur++;
		}
		
		if(nb_erreur == 0){
			$j('#'+div).css({'width' : '100px', 'height' : '0px'});
			$j('#'+div).html("");
			return true;
		}else{
			return false;
		}
	}else{
		$j('#'+div).css({'width' : '100px', 'height' : '0px'});
		$j('#'+div).html("");
		return -1;
	}
}

// Fonctions de vérification des dates.
function fx_verif_champ_date(div, champ, typedate){
	nb_erreur = 0;	
	var date = $j('#'+champ).val();
	// On supprime les '/' en '-' s'il y en a.
	var regex_slash = /\//g;
	date = date.replace(regex_slash, "-")
	console.log(date);
	// 0: Date au format JJ/MM/AAAA
	// 1: Date au format JJ/MM/AAAA H:mn
	if(typedate == 0){
		var date_correcte = fx_verif_date_simple(div, date);

		if(date_correcte === true){
			$j('#'+div).html("");
			nb_erreur = 0;
			return true;
		}else if(date_correcte === 1){
			$j('#'+div).html("<span class='alert'>La date ne dois pas dépasser 10 caractère.</span>");
			nb_erreur = 1;
			return false;
		}else if(date_correcte === 2){
			$j('#'+div).html("<span class='alert'>La date ne dois pas contenir d'espace.</span>");
			nb_erreur = 1;
			return false;
		}else if(date_correcte === 3){
			$j('#'+div).html("<span class='alert'>Date au format JJ-MM-AAA ou JJ/MM/AAAA.</span>");
			nb_erreur = 1;
			return false;
		}else if(date_correcte === 4){
			$j('#'+div).html("<span class='alert'>Date minimale: 1980 | Date maximale: 2020.</span>");
			nb_erreur = 1;
			return false;
		}
	}else if(typedate == 1){

		if(date != ""){

			tab_date = date.split(' ');
			date_jmh = tab_date[0];
			
			var date_correcte = fx_verif_date_simple(div, date_jmh);

			if(date_correcte === true){
				$j('#'+div).html("");
				nb_erreur = 0;
			}else if(date_correcte === 1){
				$j('#'+div).html("<span class='alert'>La date ne dois pas dépasser 10 caractère.</span>");
				nb_erreur = 1;
				return false;
			}else if(date_correcte === 2){
				$j('#'+div).html("<span class='alert'>La date ne dois pas contenir d'espace.</span>");
				nb_erreur = 1;
				return false;
			}else if(date_correcte === 3){
				$j('#'+div).html("<span class='alert'>Date au format JJ-MM-AAA ou JJ/MM/AAAA.</span>");
				nb_erreur = 1;
				return false;
			}else if(date_correcte === 4){
				$j('#'+div).html("<span class='alert'>Date minimale: 1980 | Date maximale: 2020.</span>");
				nb_erreur = 1;
				return false;
			}
			
			date_hm = tab_date[1];
			regex_hm = new RegExp("^[0-9]{2}[h]{1}[0-9]{2}$","i")
			var hm_ok = regex_hm.test(date_hm);
			
			if(hm_ok){
				$j('#'+div).html("");
				nb_erreur = 0;
				return true;
			}else{
				$j('#'+div).html("<span class='alert'>L'heure est incorrecte. <span class='noir petit'>(Format 05h30)</span></span>");
				nb_erreur = 1;
				return false;
			}
			
		}else{
			$j('#'+div).html("<span class='alert'>Champ vide !</span>");
			nb_erreur = 1;
			return false;
		}
	}
}

function fx_verif_date_simple(div, valeur_date){
	var tabDate = valeur_date.split("-");
	tabDate = ConvNum(tabDate);
	var datTest_Date = new Date(parseInt(tabDate[2]), parseInt(tabDate[1])-1, parseInt(tabDate[0]));
	
	if(valeur_date.length>10){ 
		return 1;
	}
	
	for(i=0; i<valeur_date.length; i++){
		if (valeur_date.charAt(i) == ' '){ 
			return 2;
		}
	}
	
	if (valeur_date.length > 0){
		if ((parseInt(tabDate[0]) != datTest_Date.getDate()) || (parseInt(tabDate[1]) != parseInt(datTest_Date.getMonth())+1)){ 
			return 3;
		}
		
		if ((tabDate[2].length != 4) || (parseInt(tabDate[2]) < 1980) || (parseInt(tabDate[2]) > 2020)){ 
			return 4;
		}
	}
	return true;
}

function fx_verif_date_superieure(div, date1, date2, typedate){
	nb_erreur = 0;
	var date1_ok = fx_verif_champ_date(div, date1, typedate);
	var date2_ok = fx_verif_champ_date(div, date2, typedate);

	if(date1_ok == true && date2_ok == true){
		var result = compare_dates($j('#'+date1).val(), $j('#'+date2).val());

		if(result == 1){
			// Correctes
			$j('#'+div).html("");
			nb_erreur = 0;
			return true;
		}else if(result == 0){
			// Egales
			$j('#'+div).html("<span class='valide'>Votre recherche ne portera que sur un seul jour. <span class='petit noir'>Date de début et date de fin égales.</span></span>");
			nb_erreur = 0;
			return true;
		}else if(result == -1){
			// Incorrectes
			$j('#'+div).html("<span class='alert'>La date de début est supérieure à la date de fin !</span>");
			nb_erreur = 1;
			return false;
		}else{
			// Inconnues
			$j('#'+div).html("<span class='alert'>La date n'est pas au format attendu. <span class='noir petit'>(JJ-MM-AAAA ou JJ/MM/AAAA)</span></span>");
			nb_erreur = 1;
			return false;
		}
	}
}

// Enleve le '0' des nombres < 10
function ConvNum(tabDeDate) {
for (i=0; i<tabDeDate.length; i++)
tabDeDate[i] = (tabDeDate[i].charAt(0)=='0')?tabDeDate[i].charAt(1):tabDeDate[i];
return tabDeDate;
}

// Retourne true si valeur_date est postérieure à la date du jour
function date_future(valeur_date){
	var tabDate = valeur_date.split("-");
	var datAujourdhui = new Date();
	tabDate = ConvNum(tabDate);
	if (valeur_date.length > 0){ 
		var datTest_Date = new Date(parseInt(tabDate[2]), parseInt(tabDate[1])-1, parseInt(tabDate[0]));
		if (datTest_Date <= datAujourdhui){ 
			return false;
		}
	}
	return true;
}

// Retourne 1 si valeur_date1 < valeur_date2
// 0 si valeur_date1 = valeur_date2
// -1 si valeur_date1 > valeur_date2
function compare_dates(valeur_date1, valeur_date2){
	var tabDate1 = valeur_date1.split("-");
	tabDate1 = ConvNum(tabDate1);
	var datTest_Date1 = new Date(parseInt(tabDate1[2]), parseInt(tabDate1[1])-1, parseInt(tabDate1[0]));
	var tabDate2 = valeur_date2.split("-");
	tabDate2 = ConvNum(tabDate2);
	var datTest_Date2 = new Date(parseInt(tabDate2[2]), parseInt(tabDate2[1])-1, parseInt(tabDate2[0]));
	return (datTest_Date2-datTest_Date1==0)?"0":(datTest_Date2-datTest_Date1<0)?"-1":"1";
}


// --------------------------------- Fonctions de gestion de l'affichage et des évènements globaux -------------------------------------
function nl2br (str, is_xhtml) {
    var breakTag = (is_xhtml || typeof is_xhtml === 'undefined') ? '' : '<br />';
    return (str + '').replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, '$1' + breakTag + '$2');
}

function fx_previsualiser(id_texte, id_zone_affichage){
	document.getElementById(id_zone_affichage).innerHTML = nl2br(document.getElementById(id_texte).value, false);
	new ElementMaxHeight();
}

var div_affiche = 0;
var plus= "images/Petit_plus.png";
var moins= "images/Petit_moins.png";

function initialiser_div(div){
	document.getElementById(div).style.display = 'none';
}

function fx_affiche(div, img){
	div = document.getElementById(div);
	img = document.getElementById(img);
	if(div_affiche == 0){
		div_affiche = 1;
		div.style.display = 'inline';
		img.src = moins;
		new ElementMaxHeight();
	}else{
		div_affiche = 0;
		div.style.display = 'none';
		img.src = plus;
		new ElementMaxHeight();
	}

}

// Fonction qui modifie un attribut css d'un élément. (Sert surtout pour m'en souvenir et que ça rentre xD)
function fx_modif_css(div, attr, value){
	$j('#'+div).css(attr, value);
	new ElementMaxHeight();// On recharge la hauteur de la page.
}var $j = jQuery.noConflict();

function fx_add_role(element){
	//var id = $j(element).attr('id');// Inutile mais pourra servir.
	
	// On récupère les valeurs des textboxes.
	var role_singulier = $j('#role_singulier_new').val();
	var role_pluriel = $j('#role_pluriel_new').val();
	
	var datas = {
			'role_singulier': role_singulier,
			'role_pluriel': role_pluriel	
	};
	
	// On fait une requête AJAX.
	$j.ajax({
		type: 'POST',
		url: 'script_ajouter_role.php',
		data: datas,
		dataType: 'text',
		success: function(reponse){
			$j('#liste_role_admin_reponse').html(reponse);
			new ElementMaxHeight();
			console.log(reponse);
		}
	});
}	
/* Inverse la sélection pour un tableau de checkbox */
function invertselection (field) {
	var checkbox = document.getElementsByName(field);
	for (var i=0; i<checkbox.length;i++) {
		if (checkbox[i].type == 'checkbox') { 
			checkbox[i].checked = (checkbox[i].checked) ? false : true;
		}
	}
}
function fx_cacher(p, textarea){
	document.getElementById(p).style.visibility = 'hidden';
}

function fx_afficher(p, select, textarea){
	var liste = document.getElementById(select);
	
	if( liste.options[liste.selectedIndex].value == 'Refusée'){
		document.getElementById(p).style.visibility = 'visible';
	}else{
		document.getElementById(p).style.visibility = 'hidden';
	}
}
var activer_pack_maintenant;

function maj_formulaire_paiement(div, id_personne, id_pack){
	var custom = document.getElementById(div);

	if(document.getElementById('activer_pack_maintenant').checked == true){
		activer_pack_maintenant = 1;
	}else{
		activer_pack_maintenant = 0;
	}
	
	custom.value = "id_personne="+id_personne+"&id_pack="+id_pack+"&duree=1&activer_pack_maintenant="+activer_pack_maintenant;

}* { 
	margin:0;
	padding:0;
}
html, body { 
	height:100%;
}
body { 
	background:#000000;
	background-image:url(../images/background.png);
	background-repeat:repeat-y;	
	font-family:Arial, Helvetica, sans-serif;
	font-size:100%; 
	line-height:1.125em;
	color:#161616;
}

img {
	border:0; 
	vertical-align:top; 
	text-align:left;
}
object { 
	vertical-align:top; 
	outline:none;
	border-radius:5px;
}
ul, ol { 
	list-style:none;
}

.fleft { 
	float:left;
}
.fright { 
	float:right;
}
.clear { 
	clear:both;
}

.col-1, .col-2, .col-3 { 
	float:left;
}

.alignright { 
	text-align:right;
}
.aligncenter { 
	text-align:center;
}

.wrapper { 
	width:100%;
	overflow:hidden;
}
.container { 
	width:100%;
}


/*==== GLOBAL =====*/
#main {
	width:940px; 
	margin:0 auto;
	font-size:.8125em;
}

#header {
	height:353px;
	background:url(../images/main-tail.png) left top repeat-x #fff;
	padding:0 0 0 20px;
}
#content {
	background:#fff;
}
	#content .aside {
		float:left;
		width:333px;
	}
	#content .mainContent {
		float:left;
		width:607px;
		background:#e7e7e7;
	}
#footer{
	padding:20px 0 20px 0;
	color: black;
}
	#footer a:hover, #footer a:link, #footer a:visited{
		color: black;
	}


/*----- forms parameters -----*/

input, select, textarea { 
	font-family:Arial, Helvetica, sans-serif; font-size:1em;
	vertical-align:middle;
	font-weight:normal;
}


/*----- other -----*/
.img-indent { 
	margin:0 20px 0 0; 
	float:left;
}
.img-box { 
	width:100%; 
	overflow:hidden; 
	padding-bottom:20px;
}
	.img-box img { 
		float:left; 
		margin:0 20px 0 0;
	}

.extra-wrap { 
	overflow:hidden;
}


p {
	margin-bottom:18px;
}
.p1 { 
	margin-bottom:9px;
}
.p2 { 
	margin-bottom:18px;
}
.p3 { 
	margin-bottom:27px;
}

/*----- txt, links, lines, titles -----*/
a {
	color:#ff005a; 
	outline:none;
}
a:hover{
	text-decoration:none;
}

h1 {
	
}
h2 {
	font-size:34px;
	text-transform:uppercase;
	line-height:1.2em;
	letter-spacing:-1px;
	border-bottom:2px solid #1e1e1e;
	margin:0 -20px 20px -20px;
	padding:0 20px 10px 20px;
}
h3 {
	font-size:34px;
	text-transform:uppercase;
	line-height:1.2em;
	margin-bottom:20px;
	letter-spacing:-1px;
}
h4 {
	font-size:19px;
	line-height:1.2em;
	text-transform:uppercase;
	font-weight:normal;
	margin-bottom:18px;
}
	h4 a {
		font-size:15px;
		font-weight:bold;
		text-decoration:none;
	}
	h4 a:hover {
		background:#ff005a;
		color:#fff;
	}
h5 {
	font-size:15px;
	color:#ff005a;
	text-transform:uppercase;
}
h6 {
	font-size:15px;
	text-transform:uppercase;
	margin-bottom:2px;
}
	h6 a {
		text-decoration:none;
	}
	h6 a:hover {
		background:#ff005a;
		color:#fff;
	}


.link1 { 
	font-weight:bold;
	font-size:14px;
	text-transform:uppercase;
}
.link2 {
	background:url(../images/arrow2.png) no-repeat right 4px;
	padding-right:19px;
	color:#161616;
	text-transform:uppercase;
	text-decoration:none;
	font-size:18px;
}
.link2:hover {
	color:#ff005a;
}

.link3 {
	font-size:11px;
	text-decoration:none;
}
.link3:hover {
	text-decoration:underline;
}




/*===== header =====*/
#header .col-1 {
	width:297px;
	margin-right:16px;
	padding-top:19px;
}
	#header .slogan {
		padding:20px 0 18px 0;
	}
#header .col-2 {
	width:605px;
}
	#header .nav {
		height:70px;
		overflow:hidden;
	}
		#header .nav .alert{
			color: #ED830B;
			font-style: italic;
		}
		#header .nav li {
			float:left;
		}
			#header .nav li a {
				float:left;
				color:#161616;
				font-size:20px;
				text-transform:uppercase;
				font-weight:bold;
				text-decoration:none;
				line-height:70px;
				padding:0 9px 0 10px;
				background:url(../images/divider.gif) no-repeat left 24px;
			}
			#header .nav li a.first {
				background:none;
			}
			#header .nav li a:hover, #header .nav li a.current {
				color:#fff;
				background:#ff005a;
				margin-right:-2px;
				padding-right:11px;
				position:relative;
				border-radius:5px;
			}


/*
 * Required 
*/
#loopedSlider .container { width:607px; height:283px; overflow:hidden; position:relative; }
#loopedSlider .slides { position:absolute; top:0; left:0; }
#loopedSlider .slides div.slide { position:absolute; top:0; width:607px; display:none; }
#loopedSlider .slides strong { 
	display:block;
	position:absolute;
	z-index:10;
	left:272px;
	top:260px;
	width:209px;
	height:23px;
	background:#ff005a;
	color:#fff;
	text-transform:uppercase;
	text-indent:13px;
	line-height:23px;
}
/*
 * Optional
*/
#loopedSlider {width:607px; position:relative; clear:both; border-style:solid; border-width:2px; border-color:#000000; border-radius:5px;}
#loopedSlider ul.pagination { list-style:none; padding:0; margin:0; position:absolute; right:0; top:260px;}
#loopedSlider ul.pagination li  { float:left; font-size:15px; line-height:1.2em; font-weight:bold; padding-left:2px;}
#loopedSlider ul.pagination li a { padding:2px 8px 3px 7px; background:#ff005a; color:#fff; text-decoration:none; float:left;}
#loopedSlider ul.pagination li a:hover {background:#e7e7e7; color:#000;}
#loopedSlider ul.pagination li.active a { background:#e7e7e7; color:#000;}


/*===== content =====*/
#content .indent {
	padding:47px 26px 70px 20px;
}
	#content .aside .indent {
		padding:80px 26px 70px 20px;
	}
		#content .aside .section {
			padding-bottom:45px;
		}
	#content .mainContent .indent {
		padding:42px 20px 40px 20px;
	}
		#content .mainContent .section {
			padding-bottom:45px;
		}
	
	
	.adv-menu {
		width:240px;
	}
		.adv-menu li {
			display:inline;
		}
			.adv-menu li a {
				display:block;
				font-size:17px;
				color:#fff;
				font-weight:bold;
				padding:7px 0 8px 15px;
				margin-bottom:1px;
				background:#000;
				text-decoration:none;
				position:relative;
			}
			.adv-menu li a:hover {
				background:#ff005a;
			}
	
	
	
	.members-list {
		width:100%;
		overflow:hidden;
		padding-bottom:12px;
	}
		.members-list li {
			float:left;
			width:87px;
			padding-right:13px;
			padding:0 13px 18px 0;
		}
		.members-list li.alt {
			padding-right:0;
		}
			.members-list li img {
				display:block;
				margin-bottom:4px;
			}
	
	.list1 li {
		font-size:16px;
		background:url(../images/Arrow1.png) no-repeat left top;
		padding:0 0 7px 28px;
	}
	
	.topics {
		position:relative;
	}
		.topics li {
			float:left;
			margin:0 0 19px 0;
			padding:0 0 19px 0;
			width:301px;
			border-bottom:1px solid #bfbfbf;
			position:relative;
		}
		.topics li.alt {
			width:264px;
		}
			.topics li img {
				float:left;
				margin-right:12px;
			}
			.topics li h5 {
				padding-top:10px;
			}
			.topics li p {
				text-transform:uppercase;
				margin-bottom:0;
				min-height:34px;
				height:auto !important;
				height:34px;
			}
	

#newsSlider { position:relative;}
#newsSlider .container { width:567px; height:425px; overflow:hidden; position:relative; }
#newsSlider .slides { position:absolute; top:0; left:0; }
#newsSlider .slides div.slide { position:absolute; top:0; width:567px; display:none; }
#newsSlider .pagination { display:none;}
#newsSlider .previous {
	position:absolute;
	right:65px;
	top:-75px;
	background:url(../images/Prev.png) no-repeat left top;
	width:48px;
	height:48px;
	display:block;
}
#newsSlider .next {
	position:absolute;
	right:0;
	top:-75px;
	background:url(../images/Next.png) no-repeat left top;
	width:48px;
	height:48px;
	display:block;
}


.news-list li {
	width:100%;
	overflow:hidden;
	padding-bottom:28px;
}
.news-list li.last {
	padding-bottom:0;
}
	.news-list li img {
		float:left;
		margin-right:20px;
	}
	.news-list li {
		background:url(../images/divider1.gif) no-repeat left 3px;
	}
	.news-list .comment{
		padding:0 0 0 11px;
		color:#bcbcbc;
		font-size:11px;
		margin-left:11px;
	}


/*===== footer =====*/
#footer, #footer a {
	color:#fff;
	font-size:12px;
}
	#footer .fleft {
		padding:12px 0 0 0;
	}
	#footer dl {
		float:right;
		background:#000;
		padding:10px 10px 10px 18px;
	}
		#footer dl dt {
			float:left;
			font-size:14px;
			line-height:1.2em;
			color:#fff;
			text-transform:uppercase;
			font-weight:bold;
			padding:3px 9px 0 0;
		}
		#footer dl dd {
			float:left;
			padding-left:4px;
		}


/*----- forms -----*/

/*==========================================*/
.adv-zzz {
				display:block;
				font-size:15px;
				color:#fff;
			
				padding:7px 0 8px 15px;
				margin-bottom:1px;
				background:url(../images/fond_connexion.png) no-repeat;
				width:100%;
				height:152px;
				text-decoration:none;
				position:relative;
				
}

.adv-zzz .fright{
	padding-right: 30px;
}



/* ------------------------------------------------------------ Mon CSS --------------------------------------------------------------------------- */

/* ----------------------------------- CSS spécifique aux pages -------------------------------------- */

.afficher_titre{
    text-decoration: none;
	font-weight: bold;
    color: #2799C2;
}

.alert{
	color: red;
	font-weight: bold;
}

.valide{
	color: #2799C2;
	font-weight: bold;
}

.orange{
	color: #ED830B;
	font-weight: bold;
}

.noir{
	color: #000000;
}

.noir_fond{
	color: #000000;
	font-weight: bold;
	background-color: #ff005a;
}

.gauche{
	color: #2799C2;
	font-weight: bold;
	text-decoration: underline;
	text-align: left;
}

.droite{
	color: #2799C2;
	font-weight: bold;
	text-decoration: underline;
	text-align: right;
}

.textarea50{
	width: 50%;
}
.textarea60{
	width: 60%;
}
.textarea70{
	width: 70%;
}
.textarea80{
	width: 80%;
}
.textarea90{
	width: 90%;
}
.textarea100{
	width: 100%;
}


.my_input12{
	width: 12%;
}
.my_input25{
	width: 25%;
}

.petit{
	text-decoration: none;
	font-size: 10px;
}

.legend_basique{
	font-weight:bold;
	text-decoration: underline;
	text-align: center;
	color:  #ff005a;
	padding-left:1%;
	padding-right:1%;
}

.formulaire{
	color: #ff005a;
	font-weight:bold;
	text-decoration: none;
	padding-left: 2%;
}

.formulaire_inscription{
	background-image: url(../images/fond_inscription_milieu.png);
  	background-repeat: repeat;
  	background-position: center;
	width:101.34%;
	height:1100px;
	border-style:solid;
	border-width:5px;
	border-color:#000000;
	border-radius:5px;
	border-left:0px;
	border-right:0px;
}

.repeat_x{
	background-repeat: repeat-x;
}

#pack{
	padding-left:2%;
	padding-right:2%;
	text-align:justify;
}

	#pack .cool{
		padding-left:0%;
		padding-right:0%;
		color: #F0C5D9;
		font-weight:none;	
	}
	
	#pack .bad{
	padding-left:0%;
	padding-right:0%;
	color: #ED830B;
	font-weight:none;	
	}
 
	#pack li{
		border-left:2%;
		/* list-style-image: url("../images/liste1.png"); */
	}
	
.gras{
	font-weight:bold;
}

.souligne{
	text-decoration:underline;
}

.selectionne{
	background-color: #9FF7B3;
}

.gris{
	color: #ABC8E2;
}

.rose{
	color: #ff005a;
}

.padding_LR{
	padding-left:2%;
	padding-right:2%;
}

.justify{
	text-align:justify;
}

#contrat_list{
	padding-left:20px;
	margin-right:60px;
	
}

.image_border{
	height:117px;
	width:93px;
	border-style:solid;
	border-width:2px;
	border-color:#000000;
}

.petite_image_border{
	height:50px;
	width:40px;
	border-style:solid;
	border-width:1px;
	border-color:#000000;
}

.border{
	border-style:solid;
	border-width:2px;
	border-color:#000000;
	border-radius:5px;
}

fieldset{
	border-style:solid;
	border-width:2px;
	border-color:#000000;
	border-radius:5px;
}

#map{
	border-style:solid;
	border-width:2px;
	border-color:#000000;
	border-radius:5px;
}

/* CSS pour les étoiles de notation */
	ul.notes-echelle {
		margin:0;
		padding:0;
		font:.75em/1.2 Arial, Helvetica, sans-serif;
	}
	ul.notes-echelle li {
		float:left;
		margin:0;
		padding:0;
		list-style:none;
		min-width:20px;
		min-height:20px;
	}
	ul.notes-echelle li label {
		display:block;
		text-align:center;
		line-height:20px; 
		background:url(../images/etoiles.png) center top no-repeat;
		cursor:pointer;
	}
	ul.notes-echelle li.note-off label {
		background-position:center -60px;
	}
	ul.notes-echelle.js input {
		position:absolute;
		left:-999%;
	}
	/* Effet lorsque une note est cochée */
	 ul.notes-echelle li.note-checked {
		font-weight:bold;
	}
	/* Effet lorsque une note est tabulée au clavier */
	 ul.notes-echelle.js li.note-focus {
		outline:1px dotted #000;
	}
	
/* ------------------------------------------ */

/* ###### CSS de la page d'achat des packs ###### */


.textboxtop,.textboxtop2{
	color: #F2BCCE;
	display: block;
	font-size: 19px;
	height: 33px;
	letter-spacing: -1px;
	padding-left: 20px;
	padding-top: 11px;
	width: 526px;
	text-transform: uppercase;
	border-radius:12px 12px 0px 0px;
}
.textboxtop{
	background: url(../images/textbox-top.gif) no-repeat;
}
.textboxtop2 {
	background: url(../images/textbox-top2.gif) no-repeat;
}

.textbox {
	background: #C0617F url(../images/textbox-bg.gif) no-repeat;
	border-left: 1px solid #DF8FA9;
	border-right: 1px solid #DF8FA9;
	color: #F0C5D9;
	padding-left: 20px;
	padding-right: 10px;
	padding-top: 20px;
	width: 514px;
	padding-bottom:10px;
}

.textboxbottom {
	background: url(../images/textbox-bottom.gif) no-repeat;
	color: #FFFFFF;
	display: block;
	font-weight: bold;
	height: 23px;
	margin-bottom: 10px;
	padding-right: 15px;
	text-align: right;
	width: 531px;
	border-radius: 0px 0px 12px 12px;
}
.textboxbottom {
	background: url(../images/textbox-bottom.gif) no-repeat;
	color: #FFFFFF;
	font-weight: bold;
	height: 23px;
	text-align: right;
}

	<?php
error_reporting(7);// On cache les erreurs sinon en cas d'impossibilité de connexion on va afficher les logs de la bdd.
class CAD{
	
	private $user;
	private $pass;
	private $dsn;
	private $dbo;// DataBaseObject --> Objet de connexion à la BDD.
	

	
	/* *
	* Constructeur du CAD
	* Initialise les valeurs de connexion à la BDD
	*
	*/
	function __construct(){
		
		# Initialisation des variables:
		$this->sql = "";
		
		
		#Definition des variables de connexion:
		$this->user = "vadorequest";
		$this->pass = "arya";
		$this->dsn = "mysql:host=localhost;dbname=liveanimbdd1";
		try{
			$this->dbo = new PDO($this->dsn, $this->user, $this->pass, array(PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8")); 
		}catch (PDOExeption $e){
			die("Erreur ! :".$e->getMessage());
		}
	}

        
        /* ******************************* ActionRows ***********************************
	* Méthode à utiliser pour les requêtes INSERT, UPDATE, DELETE
	* Reçoit la requête SQL en position 0 et le tableau de paramètres en position 1
	* Renvoit le résultat dans $msg->data[1], retourne FALSE si la requête à échouée
        * Les données renvoyées correspondent au nombre de lignes modifiées.
        * Les données renvoyées doivent être traitées.
	*/
	public function ActionRows($msg, $last_ID = false, $nb_ligne = false){
	
		$sql = $msg->getData(0);
		$params = $msg->getData(1);
                
		$statement = $this->dbo->prepare($sql);

		$statement->execute($params);
		
		if($last_ID == true){
			# On fait une requête pour récupérer le dernier ID modifié. On le place dans $msg->data[1];
                        $msg->setData(1, $this->dbo->lastInsertId());
		}
		
		if($nb_ligne == true){
			# On met $resultat dans $msg->data[2] qui correspond au nombre de lignes modifiées (= 0 si aucune modification) ou à une erreur (= FALSE si erreur).
			$msg->setData(2, $resultat);
		}
                
                
		$this->dbo = NULL;
		return $msg;
		
	
	}
	
	
	
	/* ******************************* GetRows ***********************************
	* Méthode à utiliser pour les requêtes SELECT, EXPLAIN, SHOW et DESC
	* Reçoit la requête SQL en position 0 et le tableau de paramètres en position 1
	* Renvoit le résultat dans $msg->data[1], retourne FALSE si la requête à échouée
        * Les données renvoyées devront être traitées. (Fetch(), Fetchall()) 
	*/	
	public function GetRows($msg){
		$sql = $msg->getData(0);
		$params = $msg->getData(1);
		
		$statement = $this->dbo->prepare($sql);
		$statement->execute($params);

                
		$msg->setData(1, $statement);
	
		$this->dbo = NULL; # On ferme la connexion.
		return $msg;
	}
	
	
	
}


?><?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_nouveaute.php';

class PCS_nouveaute{

	private $oCAD;
	private $oMPG_nouveaute;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_nouveaute = new MPG_nouveaute();
	}
	
	public function fx_compter_toutes_nouveautees_by_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_nouveaute->SELECT_COUNT_nouveaute_by_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_selectionner_nouveautees_BY_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_nouveaute->SELECT_nouveautees_by_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_selectionner_nouveautee_by_ID_NOUVEAUTE_and_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_nouveaute->SELECT_nouveautee_by_ID_NOUVEAUTE_and_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_selectionner_nouveautee_by_ID_NOUVEAUTE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_nouveaute->SELECT_nouveautee_by_ID_NOUVEAUTE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_toutes_nouveautees($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_nouveaute->SELECT_COUNT_toutes_nouveautes($oMSG));
		
		return $oMSG;
	}
	
	public function fx_selectionner_toutes_nouveautees($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_nouveaute->SELECT_all_nouveautees($oMSG));
		
		return $oMSG;
	}
	
	
	// ------------------------------------------------------------- ActionRows  ------------------------------------------
	
	public function fx_creer_nouveautee($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_nouveaute->INSERT($oMSG), true);
		
		return $oMSG;
	}
	public function fx_modifier_nouveautee($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_nouveaute->UPDATE($oMSG), true);
		
		return $oMSG;
	}
	
}
?><?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_pack.php';
require_once 'couche_metier/MPG_pack_personne.php';
require_once 'couche_metier/VIEW_pack.php';

class PCS_pack{

	private $oCAD;
	private $oMPG_pack;
	private $oMPG_pack_personne;
	private $oVIEW_pack;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_pack = new MPG_pack();
		$this->oMPG_pack_personne = new MPG_pack_personne();
		$this->oVIEW_pack = new VIEW_pack();
	}
	
	public function fx_compter_tous_packs($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pack->SELECT_COUNT_all_packs($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_packs_by_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pack->SELECT_COUNT_PACK_by_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_tous_packs($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pack->SELECT_all_minimum($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_tous_packs_by_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pack->SELECT_all_by_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_pack_by_ID_PACK($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pack->SELECT_all_by_ID_PACK($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_pack_by_TYPE_PACK_et_LIMIT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pack->SELECT_ALL_by_TYPE_PACK_et_LIMIT($oMSG));
		
		return $oMSG;
	}

	// ---------------------- oMPG_pack_personne -------------
	
	public function fx_compter_nb_packs_achetes_by_ID_PACK($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pack_personne->SELECT_COUNT_packs_achetes_by_ID_PACK($oMSG));
		
		return $oMSG;
	}
	
	
	
	// ---------------------- oVIEW_pack ---------------------
	
	public function fx_recuperer_pack_actif_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_pack->SELECT_ALL_by_DATE_ACHAT_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_dernier_pack_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_pack->SELECT_dernier_achat_by_DATE_ACHAT_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_tous_packs_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_pack->SELECT_COUNT_ID_PACK_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_packs_by_ID_PERSONNE_et_by_LIMIT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_pack->SELECT_ALL_by_ID_PERSONNE_et_by_LIMIT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_pack_by_ID_PERSONNE_et_DATE_ACHAT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_pack->SELECT_pack_by_ID_PERSONNE_et_DATE_ACHAT($oMSG));
		
		return $oMSG;
	}
		
	public function fx_calculer_couts_pack_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_pack->SELECT_SUM_couts_packs_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	// ------------------------------------------------------------- ActionRows  ------------------------------------------
	
	public function fx_creer_pack($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pack->INSERT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_pack($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pack->UPDATE($oMSG));
		
		return $oMSG;
	}
	
	// ---------------------- oMPG_pack_personne --------------
	
	public function fx_lier_pack_personne($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pack_personne->INSERT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_DATE_FIN_by_IDs($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pack_personne->UPDATE_DATE_FIN_by_IDs($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_DATE_DEBUT_et_DATE_FIN_by_IDs($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pack_personne->UPDATE_DATE_DEBUT_et_DATE_FIN_by_IDs($oMSG));
		
		return $oMSG;
	}
	
	public function fx_decrementer_NB_FICHES_VISITABLES_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pack_personne->UPDATE_decremente_NB_FICHES_VISITABLES_by_IDs($oMSG));
		
		return $oMSG;
	}
	
}<?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_personne.php';
require_once 'couche_metier/VIEW_personne.php';

# Toutes la gestion des affichages/modification des IP est géré depuis le MPG_personne et la VIEW_personne car ils sont intimement liés.

class PCS_personne{

	private $oCAD;
	private $oMPG_personne;
	private $oVIEW_personne;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_personne = new MPG_personne();
		$this->oVIEW_personne = new VIEW_personne();
	}
	
	public function fx_compter_pseudo_by_PSEUDO($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_PSEUDO($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_email_by_EMAIL($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_EMAIL($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_compte_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_compte_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_compte_min_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_compte_min_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_pseudo_by_PSEUDO_et_MDP($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_pseudo_by_PSEUDO_et_MDP($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_personne_by_ID_PERSONNE_et_MDP($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_personne_by_ID_PERSONNE_et_MDP($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_compte_by_PSEUDO($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_all_by_PSEUDO($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_compte_by_PSEUDO_et_EMAIL($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_all_by_PSEUDO_et_EMAIL($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_by_EMAIL_et_CLE_ACTIVATION($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_by_EMAIL_et_CLE_ACTIVATION($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_IPs_by_ID_IP($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_ID_IP_by_ID_IP($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_IPs_by_IP_COOKIE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_ID_IP_by_IP_COOKIE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_comptes_non_actives($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_by_CLE_ACTIVATION($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_infos_by_ID_IP($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_by_ID_IP($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_infos_by_IP_COOKIE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_by_IP_COOKIE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_tous_membres($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_tous_membres($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_tous_membres($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_tous_membres($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_membres_by_LIMIT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_tous_membres_by_LIMIT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_comptes_non_actives($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_by_CLE_ACTIVATION($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_comptes_by_PERSONNE_SUPPRIMEE_et_VISIBILITE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_comptes_by_PERSONNE_SUPPRIMEE_et_VISIBILITE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_tous_comptes_supprimes($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_comptes_supprimes_par_utilisateur($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_REDUCTION_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_REDUCTION_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_personne_by_ID_PERSONNE_et_EMAIL_et_MDP($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_ID_PERSONNE_by_ID_PERSONNE_et_EMAIL_et_MDP($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_filleuls_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_filleuls_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_filleuls_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_filleuls_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_adresse_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_adresse_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_PSEUDO_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_PSEUDO_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_compte_by_ID_FACEBOOK($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_all_by_ID_FACEBOOK($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_tous_PARRAIN($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_tous_PARRAIN($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_connectes($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_personne->SELECT_COUNT_connectes($oMSG));
		
		return $oMSG;
	}
	// -------------------- Vues
	
	public function fx_recuperer_toutes_ip_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_toutes_ip_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_date_creation_compte_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_date_creation_compte_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_dernieres_connexions_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_dernieres_connexions_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_recuperer_personne_by_ID_CONTRAT_et_nonTYPE_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_personne_by_ID_CONTRAT_et_nonTYPE_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_personne_by_ID_CONTRAT_et_TYPE_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_personne_by_ID_CONTRAT_et_TYPE_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_prestataires_lors_annulation_contrat($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_prestataires_lors_annulation_contrat($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_personne_par_criteres($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_COUNT_ID_PERSONNE_par_criteres($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_personne_par_criteres($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_personnes_par_criteres($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_date_creation_compte($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_date_creation_compte($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_artistes_premium($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_artistes_premium($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_personne->SELECT_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	// ------------------------------------------ Insertions/Modifications
	
	public function fx_creer_compte($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->INSERT_all($oMSG), true);# On récupère l'ID crée
		
		return $oMSG;
	}
	
	public function fx_creer_IP($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->INSERT_IP($oMSG));
		
		return $oMSG;
	}
	
	public function fx_valider_compte($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UPDATE_activation_compte($oMSG));
		
		return $oMSG;
	}
	
	public function fx_lier_IP_et_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->INSERT_liaison_IP_et_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_rang($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UPDATE_TYPE_PERSONNE_by_PSEUDO($oMSG));
		
		return $oMSG;
	}
	
	public function fx_bannir_personne($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UPDATE_validite_compte_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_maj_fiche_personnelle_selon_TYPE_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		
		if($oMSG->getData('TYPE_PERSONNE') == 'Admin' || $oMSG->getData('TYPE_PERSONNE') == 'Prestataire'){
			$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UPDATE_fiche_personnelle_complete_by_ID_PERSONNE($oMSG));
		}else if($oMSG->getData('TYPE_PERSONNE') == 'Organisateur'){
			$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UPDATE_fiche_personnelle_basique_by_ID_PERSONNE($oMSG));
		}else{
			return "Erreur: Type de la personne non défini.";
		}
		
		
		return $oMSG;
	}
	
	public function fx_changer_mdp($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UDPATE_MDP_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_supprimer_infos_perso_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UDPATE_infos_perso_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_REDUCTION_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UDPATE_REDUCTION_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_REDUCTION_by_ID_PARRAIN($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UDPATE_REDUCTION_by_ID_PARRAIN($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UDPATE_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_DERNIERE_ACTIVITE_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_personne->UDPATE_DERNIERE_ACTIVITE_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	
}

?><?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_pub.php';

class PCS_pub{

	private $oCAD;
	private $oMPG_pub;
	
	# Définition des constantes de classe.
	const POSITION_1 = "Sous le slider";
	const POSITION_2 = "Tout en bas";

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_pub = new MPG_pub();
	}
	
	public function fx_compter_toutes_pubs($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pub->SELECT_COUNT_all_pubs($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_pubs_by_POSITION($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pub->SELECT_COUNT_pubs_by_POSITION($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_toutes_pubs($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pub->SELECT_all_pubs($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_pubs_by_POSITION($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pub->SELECT_pubs_by_POSITION($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_pub_by_ID_PUB($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_pub->SELECT_pub_by_ID_PUB($oMSG));
		
		return $oMSG;
	}

	// ------------------------------------------------------------- ActionRows  ------------------------------------------
		
	public function fx_ajouter_pub($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pub->INSERT($oMSG), true);
		
		return $oMSG;
	}	
	
	public function fx_modifier_pub($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pub->UPDATE($oMSG));
		
		return $oMSG;
	}	
	
	public function fx_supprimer_pub($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_pub->DELETE($oMSG));
		
		return $oMSG;
	}
		
}<?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_slide.php';

class PCS_slide{

	private $oCAD;
	private $oMPG_slide;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_slide = new MPG_slide();
	}
	
	// ----------------------- MPG_slide --------------------------
	
	// ----------- GetRows -------------
	public function fx_recuperer_slides($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_slide->SELECT_slides($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_slides_by_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_slide->SELECT_slides_by_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_slide_by_ID_SLIDE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_slide->SELECT_slide_by_ID_SLIDE($oMSG));
		
		return $oMSG;
	}
	
	
	// ----------- ActionRows -------------
	public function fx_ajouter_slide($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_slide->INSERT($oMSG), true);
		
		return $oMSG;
	}
	
	public function fx_modifier_slide($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_slide->UPDATE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_modifier_slide_sauf_URL($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_slide->UPDATE_sauf_URL($oMSG));
		
		return $oMSG;
	}
}
?><?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_types.php';
require_once 'couche_metier/MPG_famille_types.php';
require_once 'couche_metier/VIEW_types.php';

class PCS_types{

	private $oCAD;
	private $oMPG_types;
	private $oMPG_famille_types;
	private $oVIEW_types;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_types = new MPG_types();
		$this->oMPG_famille_types = new MPG_famille_types();
		$this->oVIEW_types = new VIEW_types();
	}
	
	public function fx_recuperer_tous_types_par_famille($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_types->SELECT_ALL_BY_ID_FAMILLE_TYPES($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_types_by_ID_TYPES($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_types->SELECT_COUNT_ID_TYPES_by_ID_TYPES($oMSG));
		
		return $oMSG;
	}
	
	// ------------------------------------- ActionRows -------------------------------------
	
	
	public function fx_ajouter_ID_TYPES($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_types->INSERT_ID_TYPES($oMSG));
		
		return $oMSG;
	}
}<?php
class VIEW_annonce{

	private $ID_ANNONCE;
	private $ID_DEPARTEMENT;
	private $VISIBLE;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_ANNONCE = "";
	$this->ID_DEPARTEMENT = "";
	$this->VISIBLE = "";
	}
	
	
	public function SELECT_min_by_VISIBLE($oMSG){
		$this->VISIBLE = $oMSG->getData('VISIBLE');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');
	
		$this->sql = "SELECT ID_ANNONCE, annonce.ID_PERSONNE AS ID_PERSONNE, TITRE, TYPE_ANNONCE, DATE_ANNONCE, GOLDLIVE, STATUT, PSEUDO ".
		"FROM personne RIGHT OUTER JOIN annonce ON personne.ID_PERSONNE=annonce.ID_PERSONNE WHERE annonce.VISIBLE=:VISIBLE ORDER BY STATUT, GOLDLIVE DESC, DATE_ANNONCE ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
					':VISIBLE' =>$this->VISIBLE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_annonces_par_criteres($oMSG){
		$this->VISIBLE = $oMSG->getData('VISIBLE');
		$this->STATUT = $oMSG->getData('STATUT');
		$criteres = $oMSG->getData('criteres');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');
	
		$this->sql = 
		"SELECT annonce.ID_ANNONCE as ID_ANNONCE, annonce.TITRE as TITRE, annonce.TYPE_ANNONCE, annonce.DATE_ANNONCE, annonce.DATE_DEBUT, annonce.DATE_FIN, ".
		"annonce.BUDGET AS BUDGET, NB_CONVIVES, annonce.DESCRIPTION, annonce.CP, annonce.VILLE ".
		"FROM annonce LEFT OUTER JOIN contrat ON annonce.ID_ANNONCE = contrat.ID_ANNONCE ".
		"WHERE annonce.VISIBLE=:VISIBLE AND annonce.STATUT=:STATUT $criteres ".
		"GROUP BY annonce.ID_ANNONCE ".
		"ORDER BY annonce.GOLDLIVE DESC, annonce.DATE_DEBUT DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";

		$params = array(  
					':VISIBLE' =>$this->VISIBLE,
					':STATUT' =>$this->STATUT,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_annonce_complete_by_ID_ANNONCE($oMSG){
		$this->ID_ANNONCE = $oMSG->getData('ID_ANNONCE');
		$this->VISIBLE = $oMSG->getData('VISIBLE');
	
		$this->sql = "SELECT annonce.ID_ANNONCE, annonce.ID_PERSONNE AS ID_PERSONNE, departement.ID_DEPARTEMENT AS ID_DEPARTEMENT, annonce.TITRE, ".
		"annonce.TYPE_ANNONCE, annonce.DATE_ANNONCE, annonce.GOLDLIVE, annonce.STATUT, annonce.DATE_DEBUT, annonce.DATE_FIN, ".
		"annonce.ARTISTES_RECHERCHES, annonce.BUDGET, annonce.NB_CONVIVES, annonce.DESCRIPTION, annonce.ADRESSE, annonce.VILLE, annonce.CP, ".
		"personne.PSEUDO, departement.NOM FROM annonce LEFT OUTER JOIN departement ON departement.ID_DEPARTEMENT=annonce.ID_DEPARTEMENT LEFT OUTER JOIN personne ".
		"ON personne.ID_PERSONNE = annonce.ID_PERSONNE WHERE annonce.VISIBLE=:VISIBLE AND annonce.ID_ANNONCE=:ID_ANNONCE";
		
		$params = array(  
					':ID_ANNONCE' =>$this->ID_ANNONCE,
					':VISIBLE' =>$this->VISIBLE,					
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_min($oMSG){
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');
		
		$this->sql = "SELECT ID_ANNONCE, annonce.ID_PERSONNE AS ID_PERSONNE, TITRE, TYPE_ANNONCE, DATE_ANNONCE, GOLDLIVE, STATUT, PSEUDO ".
		"FROM personne RIGHT OUTER JOIN annonce ON personne.ID_PERSONNE=annonce.ID_PERSONNE ".
		"GROUP BY annonce.ID_ANNONCE ".
		"ORDER BY annonce.DATE_ANNONCE DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG){
		$this->GOLDLIVE = $oMSG->getData('GOLDLIVE');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		
		$this->sql = "SELECT COUNT(annonce.ID_ANNONCE) as nb_annonce ".
		"FROM personne RIGHT OUTER JOIN annonce ON personne.ID_PERSONNE=annonce.ID_PERSONNE ".
		"WHERE GOLDLIVE=:GOLDLIVE AND annonce.ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array( 
					':GOLDLIVE'=>$this->GOLDLIVE,		
					':ID_PERSONNE'=>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);

		return $oMSG;
	}
	
	public function SELECT_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG){
		$this->GOLDLIVE = $oMSG->getData('GOLDLIVE');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');
		
		$this->sql = "SELECT ID_ANNONCE, annonce.ID_PERSONNE, TITRE, DATE_ANNONCE, STATUT ".
		"FROM personne RIGHT OUTER JOIN annonce ON personne.ID_PERSONNE=annonce.ID_PERSONNE ".
		"WHERE GOLDLIVE=:GOLDLIVE AND annonce.ID_PERSONNE=:ID_PERSONNE ".
		"GROUP BY annonce.ID_ANNONCE ".
		"ORDER BY annonce.DATE_ANNONCE DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array( 
					':GOLDLIVE'=>$this->GOLDLIVE,		
					':ID_PERSONNE'=>$this->ID_PERSONNE,		
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_SUM_couts_annonces_goldlive_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		
		$this->sql = "SELECT SUM(annonce.GOLDLIVE) as prix_total".
		"FROM personne RIGHT OUTER JOIN annonce ON personne.ID_PERSONNE=annonce.ID_PERSONNE ".
		"WHERE annonce.ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array( 
					':ID_PERSONNE'=>$this->ID_PERSONNE,		
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
}<?php
class VIEW_commentaire{

	private $ID_COMMENTAIRE;
	private $ID_PERSONNE;
	private $ID_NOUVEAUTE;
	private $CONTENU;
	private $DATE_CREATION;
	private $VISIBLE;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_COMMENTAIRE = "";
		$this->ID_PERSONNE = "";
		$this->ID_NOUVEAUTE = "";
		$this->CONTENU = "";
		$this->DATE_CREATION = "";
		$this->VISIBLE = "";
	}	
	
	public function SELECT_commentaires_by_ID_NOUVEAUTE($oMSG){
		$this->ID_NOUVEAUTE = $oMSG->getData("ID_NOUVEAUTE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$debut_affichage = $oMSG->getData('debut_affichage');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		
		$this->sql = "SELECT commentaire.ID_COMMENTAIRE, commentaire.ID_PERSONNE, commentaire.ID_NOUVEAUTE, commentaire.CONTENU, commentaire.DATE_CREATION, ".
		"commentaire.VISIBLE, personne.PSEUDO ".
		"FROM commentaire LEFT OUTER JOIN personne ON personne.ID_PERSONNE = commentaire.ID_PERSONNE ".
		"WHERE commentaire.ID_NOUVEAUTE=:ID_NOUVEAUTE AND commentaire.VISIBLE=:VISIBLE ".
		"ORDER BY commentaire.DATE_CREATION DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(
				":ID_NOUVEAUTE"=>$this->ID_NOUVEAUTE,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php
class VIEW_contrat{

	private $ID_CONTRAT;
	private $ID_ANNONCE;
	private $VISIBLE;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_CONTRAT = "";
	$this->ID_ANNONCE = "";
	$this->VISIBLE = "";
	}
	
	
	public function SELECT_COUNT_nb_contrat_by_ID_PERSONNE_et_ID_ANNONCE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->ID_ANNONCE = $oMSG->getData('ID_ANNONCE');
		$condition = $oMSG->getData('condition');
		if(empty($condition)){
			$condition = ";";
		}
	
		$this->sql = "SELECT COUNT(ID_CONTRAT) as nb_contrat FROM contrat NATURAL JOIN contrat_personne WHERE ID_PERSONNE=:ID_PERSONNE AND ID_ANNONCE=:ID_ANNONCE $condition;";
		
		$params = array(  
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					':ID_ANNONCE' =>$this->ID_ANNONCE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_nb_contrat_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
	
		$this->sql = "SELECT COUNT(contrat.ID_CONTRAT) as nb_contrat FROM contrat RIGHT OUTER JOIN contrat_personne ".
		"ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT WHERE contrat_personne.ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(  
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_contrat_min_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');

		$this->sql = "SELECT contrat.ID_CONTRAT, contrat.ID_ANNONCE, DATE_CONTRAT, STATUT_CONTRAT, URL_CONTRAT_PDF, annonce.TITRE  FROM contrat_personne ".
		"LEFT OUTER JOIN contrat ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT ".
		"LEFT OUTER JOIN annonce ON annonce.ID_ANNONCE = contrat.ID_ANNONCE ".
		"WHERE contrat_personne.ID_PERSONNE=:ID_PERSONNE ".
		"ORDER BY DATE_CONTRAT DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_contrats_courants_min_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
	
		$this->sql = "SELECT COUNT(contrat.ID_CONTRAT) as nb_contrat FROM contrat RIGHT OUTER JOIN contrat_personne ".
		"ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT WHERE contrat_personne.ID_PERSONNE=:ID_PERSONNE AND ".
		"(STATUT_CONTRAT='En attente' OR STATUT_CONTRAT='Refusé');";
		
		$params = array(  
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_contrats_courants_min_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');

		$this->sql = "SELECT contrat.ID_CONTRAT, contrat.ID_ANNONCE, DATE_CONTRAT, STATUT_CONTRAT, URL_CONTRAT_PDF, annonce.TITRE  FROM contrat_personne ".
		"LEFT OUTER JOIN contrat ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT ".
		"LEFT OUTER JOIN annonce ON annonce.ID_ANNONCE = contrat.ID_ANNONCE ".
		"WHERE contrat_personne.ID_PERSONNE=:ID_PERSONNE AND (STATUT_CONTRAT='En attente' OR STATUT_CONTRAT='Refusé') ".
		"ORDER BY DATE_CONTRAT DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_contrat_by_ID_CONTRAT($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');

		$this->sql = "SELECT contrat.ID_CONTRAT, contrat.ID_ANNONCE, contrat.DATE_CONTRAT, contrat.STATUT_CONTRAT, contrat.DATE_EVALUATION, ".
		"contrat.DESCRIPTION as DESCRIPTION_contrat, contrat.DATE_DEBUT as DATE_DEBUT_contrat, contrat.DATE_FIN as DATE_FIN_contrat, ".
		"contrat.PRIX as PRIX_contrat, contrat.DESTINATAIRE, annonce.TITRE, annonce.TYPE_ANNONCE, annonce.DATE_DEBUT as DATE_DEBUT_annonce, ".
		"annonce.DATE_FIN as DATE_FIN_annonce, annonce.BUDGET as PRIX_annonce, annonce.DESCRIPTION as DESCRIPTION_annonce ".
		"FROM contrat ".
		"LEFT OUTER JOIN annonce ON annonce.ID_ANNONCE = contrat.ID_ANNONCE ".
		"WHERE contrat.ID_CONTRAT=:ID_CONTRAT;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	public function SELECT_departement_annonce_lors_annulation_contrat($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');

		$this->sql = "SELECT contrat.ID_CONTRAT, contrat.ID_ANNONCE, annonce.ID_DEPARTEMENT ".
		"FROM contrat LEFT OUTER JOIN annonce ON contrat.ID_ANNONCE = annonce.ID_ANNONCE ".
		"WHERE ID_CONTRAT=:ID_CONTRAT";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
				
	public function SELECT_by_STATUT($oMSG){
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
		$debut_affichage = $oMSG->getData("debut_affichage");
		$nb_result_affiches = $oMSG->getData("nb_result_affiches");
		
		$this->sql = "SELECT DISTINCT contrat.ID_CONTRAT, contrat.ID_ANNONCE, contrat.DATE_CONTRAT, contrat.STATUT_CONTRAT, contrat.PRIX, contrat.GOLDLIVE, ".
		"annonce.TITRE ".
		"FROM contrat LEFT OUTER JOIN annonce ON contrat.ID_ANNONCE = annonce.ID_ANNONCE ".
		"WHERE STATUT_CONTRAT=:STATUT_CONTRAT ORDER BY DATE_CONTRAT DESC LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
					':STATUT_CONTRAT' =>$this->STATUT_CONTRAT,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
		
	public function SELECT_all($oMSG){
		$debut_affichage = $oMSG->getData("debut_affichage");
		$nb_result_affiches = $oMSG->getData("nb_result_affiches");
		
		$this->sql = "SELECT DISTINCT contrat.ID_CONTRAT, contrat.ID_ANNONCE, contrat.DATE_CONTRAT, contrat.STATUT_CONTRAT, contrat.PRIX, contrat.GOLDLIVE, ".
		"annonce.TITRE ".
		"FROM contrat LEFT OUTER JOIN annonce ON contrat.ID_ANNONCE = annonce.ID_ANNONCE ".
		"ORDER BY contrat.DATE_CONTRAT DESC, contrat.ID_ANNONCE LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
		
	public function SELECT_COUNT_prestations($oMSG){
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$where = $oMSG->getData('where');
		
		$this->sql = "SELECT COUNT(contrat.ID_CONTRAT) AS nb_contrat ".
		"FROM contrat LEFT OUTER JOIN contrat_personne ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT ".
		"WHERE STATUT_CONTRAT=:STATUT_CONTRAT AND contrat_personne.ID_PERSONNE=:ID_PERSONNE $where;";
		
		$params = array(  
					':STATUT_CONTRAT' => $this->STATUT_CONTRAT,
					':ID_PERSONNE' => $this->ID_PERSONNE,
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
		
	public function SELECT_prestations_min($oMSG){
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$where = $oMSG->getData('where');
		$debut_affichage = $oMSG->getData("debut_affichage");
		$nb_result_affiches = $oMSG->getData("nb_result_affiches");
		
		$this->sql = "SELECT DISTINCT contrat.ID_CONTRAT, contrat.ID_ANNONCE, contrat.DATE_CONTRAT, contrat.DATE_FIN, contrat.PRIX, contrat.DESTINATAIRE, ".
		"annonce.TITRE, annonce.ADRESSE, annonce.CP, annonce.VILLE ".
		"FROM contrat LEFT OUTER JOIN annonce ON contrat.ID_ANNONCE = annonce.ID_ANNONCE ".
		"LEFT OUTER JOIN contrat_personne ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT ".
		"WHERE STATUT_CONTRAT=:STATUT_CONTRAT AND contrat_personne.ID_PERSONNE=:ID_PERSONNE $where ".
		"ORDER BY contrat.DATE_CONTRAT DESC, contrat.ID_ANNONCE LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
					':STATUT_CONTRAT' => $this->STATUT_CONTRAT,
					':ID_PERSONNE' => $this->ID_PERSONNE,
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
		
	public function SELECT_MOY_evaluation_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->TYPE_EVALUATION = $oMSG->getData('TYPE_EVALUATION');
		
		$this->sql = "SELECT DISTINCT AVG(EVALUATION) as moy_evaluation ".
		"FROM contrat_personne LEFT OUTER JOIN contrat ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT ".
		"LEFT OUTER JOIN evaluation ON evaluation.ID_CONTRAT = contrat.ID_CONTRAT ".
		"WHERE contrat_personne.ID_PERSONNE=:ID_PERSONNE AND evaluation.TYPE_EVALUATION=:TYPE_EVALUATION;";

		$params = array(  
					':ID_PERSONNE' => $this->ID_PERSONNE,
					':TYPE_EVALUATION' => $this->TYPE_EVALUATION,
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
		
	public function SELECT_SUM_gains_contrats_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$criteres = $oMSG->getData('criteres');
		
		$this->sql = "SELECT SUM(DISTINCT contrat.PRIX) as prix_total ".
		"FROM contrat_personne LEFT OUTER JOIN contrat ON contrat_personne.ID_CONTRAT = contrat.ID_CONTRAT ".
		"LEFT OUTER JOIN evaluation ON evaluation.ID_CONTRAT = contrat.ID_CONTRAT ".
		"WHERE contrat_personne.ID_PERSONNE=:ID_PERSONNE $criteres";

		$params = array(  
					':ID_PERSONNE' => $this->ID_PERSONNE,
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
}<?php
class VIEW_message{

	private $ID_MESSAGE;
	private $ID_PERSONNE;
	private $STATUT_MESSAGE;
	private $DATE_LECTURE;
	private $DATE_REPONSE;

	
	public function __construct(){
		$this->ID_MESSAGE="";
		$this->ID_PERSONNE="";
		$this->STATUT_MESSAGE="";
		$this->DATE_LECTURE="";
		$this->DATE_REPONSE="";

	
	}
	
	public function SELECT_COUNT_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->STATUT_MESSAGE = $oMSG->getData('STATUT_MESSAGE');
		$this->VISIBLE = $oMSG->getData('VISIBLE');
	
		$this->sql = "SELECT COUNT(message.ID_MESSAGE) as nb_message FROM message LEFT OUTER JOIN message_personne ".
		"ON message.ID_MESSAGE = message_personne.ID_MESSAGE WHERE ID_PERSONNE=:ID_PERSONNE AND STATUT_MESSAGE<>:STATUT_MESSAGE AND VISIBLE=:VISIBLE;";# /!\ <>
		
		$params = array(
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					':STATUT_MESSAGE'=>$this->STATUT_MESSAGE,
					':VISIBLE'=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_min_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->STATUT_MESSAGE = $oMSG->getData('STATUT_MESSAGE');
		$this->VISIBLE = $oMSG->getData('VISIBLE');
		$debut_affichage = $oMSG->getData('debut_affichage');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
	
		$this->sql = "SELECT message.ID_MESSAGE as ID_MESSAGE, TITRE, DATE_ENVOI, EXPEDITEUR, message_personne.ID_PERSONNE, STATUT_MESSAGE FROM message ".
		"LEFT OUTER JOIN message_personne ON message.ID_MESSAGE = message_personne.ID_MESSAGE ".
		"WHERE ID_PERSONNE=:ID_PERSONNE AND STATUT_MESSAGE<>:STATUT_MESSAGE AND VISIBLE=:VISIBLE ".
		"ORDER BY DATE_ENVOI DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";# /!\ <> !
		
		$params = array(
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					':STATUT_MESSAGE'=>$this->STATUT_MESSAGE,
					':VISIBLE'=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->STATUT_MESSAGE = $oMSG->getData('STATUT_MESSAGE');
		$this->VISIBLE = $oMSG->getData('VISIBLE');
	
		$this->sql = "SELECT COUNT(message.ID_MESSAGE) as nb_message FROM message LEFT OUTER JOIN message_personne ".
		"ON message.ID_MESSAGE = message_personne.ID_MESSAGE WHERE ID_PERSONNE=:ID_PERSONNE AND STATUT_MESSAGE=:STATUT_MESSAGE AND VISIBLE=:VISIBLE;";
		
		$params = array(
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					':STATUT_MESSAGE'=>$this->STATUT_MESSAGE,
					':VISIBLE'=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_min_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->STATUT_MESSAGE = $oMSG->getData('STATUT_MESSAGE');
		$this->VISIBLE = $oMSG->getData('VISIBLE');
	
		$this->sql = "SELECT message.ID_MESSAGE as ID_MESSAGE, TITRE, DATE_ENVOI, EXPEDITEUR, ID_PERSONNE, STATUT_MESSAGE FROM message ".
		"LEFT OUTER JOIN message_personne ON message.ID_MESSAGE = message_personne.ID_MESSAGE ".
		"WHERE ID_PERSONNE=:ID_PERSONNE AND STATUT_MESSAGE=:STATUT_MESSAGE AND VISIBLE=:VISIBLE;";
		
		$params = array(
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					':STATUT_MESSAGE'=>$this->STATUT_MESSAGE,
					':VISIBLE'=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_message_by_ID_MESSAGE($oMSG){
		$this->ID_MESSAGE = $oMSG->getData('ID_MESSAGE');
	
		$this->sql = "SELECT message.ID_MESSAGE as ID_MESSAGE, TITRE, CONTENU, DATE_ENVOI, EXPEDITEUR, DESTINATAIRE, TYPE_MESSAGE, ID_PERSONNE, ".
		"STATUT_MESSAGE, DATE_LECTURE, DATE_REPONSE FROM message LEFT OUTER JOIN message_personne ON message.ID_MESSAGE = message_personne.ID_MESSAGE ".
		"WHERE message.ID_MESSAGE=:ID_MESSAGE;";
		
		$params = array(
					':ID_MESSAGE'=>$this->ID_MESSAGE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php
class VIEW_pack{

	private $ID_PERSONNE;
	private $ID_PACK;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_PERSONNE = "";
		$this->ID_PACK = "";		
	}
	
	public function SELECT_ALL_by_DATE_ACHAT_et_ID_PERSONNE($oMSG){		
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$limit = $oMSG->getData("limit");
		
		$this->sql = "SELECT pack.ID_PACK as ID_PACK, NOM, TYPE_PACK, PRIX_BASE, DUREE, CV_VISIBILITE, CV_ACCESSIBLE, pack_personne.NB_FICHES_VISITABLES ".
		"as NB_FICHES_VISITABLES, CV_VIDEO_ACCESSIBLE, ALERTE_NON_DISPONIBILITE, NB_DEPARTEMENTS_ALERTE, PARRAINAGE_ACTIVE, PREVISUALISATION_FICHES, CONTRATS_PDF, ".
		"SUIVI, PUBS, ID_PERSONNE, DATE_ACHAT, DATE_DEBUT, DATE_FIN ".
		"FROM pack LEFT OUTER JOIN pack_personne ON pack.ID_PACK=pack_personne.ID_PACK WHERE ID_PERSONNE=:ID_PERSONNE ".
		"AND DATE_DEBUT < NOW() AND DATE_FIN > NOW() ORDER BY DATE_ACHAT DESC $limit;";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_dernier_achat_by_DATE_ACHAT_et_ID_PERSONNE($oMSG){		
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$limit = $oMSG->getData("limit");
		
		$this->sql = "SELECT pack.ID_PACK as ID_PACK, NOM, TYPE_PACK, PRIX_BASE, DUREE, CV_VISIBILITE, CV_ACCESSIBLE, pack_personne.NB_FICHES_VISITABLES ".
		"as NB_FICHES_VISITABLES, CV_VIDEO_ACCESSIBLE, ALERTE_NON_DISPONIBILITE, NB_DEPARTEMENTS_ALERTE, PARRAINAGE_ACTIVE, PREVISUALISATION_FICHES, CONTRATS_PDF, ".
		"SUIVI, PUBS, ID_PERSONNE, DATE_ACHAT, DATE_DEBUT, DATE_FIN ".
		"FROM pack LEFT OUTER JOIN pack_personne ON pack.ID_PACK=pack_personne.ID_PACK WHERE ID_PERSONNE=:ID_PERSONNE ORDER BY DATE_ACHAT DESC $limit;";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_PACK_by_ID_PERSONNE($oMSG){		
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		
		$this->sql = "SELECT COUNT(pack_personne.ID_PACK)  AS nb_pack FROM pack_personne WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_ALL_by_ID_PERSONNE_et_by_LIMIT($oMSG){		
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$nb_result_affiches = $oMSG->getData("nb_result_affiches");
		$debut_affichage = $oMSG->getData("debut_affichage");
		
		$this->sql = "SELECT pack.ID_PACK as ID_PACK, NOM, TYPE_PACK, PRIX_BASE, DUREE, pack_personne.NB_FICHES_VISITABLES as NB_FICHES_VISITABLES, ".
		"ID_PERSONNE, DATE_ACHAT, DATE_DEBUT, DATE_FIN, pack_personne.REDUCTION AS REDUCTION ".
		"FROM pack LEFT OUTER JOIN pack_personne ON pack.ID_PACK=pack_personne.ID_PACK WHERE ID_PERSONNE=:ID_PERSONNE ORDER BY DATE_ACHAT DESC LIMIT $debut_affichage, $nb_result_affiches";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_pack_by_ID_PERSONNE_et_DATE_ACHAT($oMSG){		
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->DATE_ACHAT = $oMSG->getData("DATE_ACHAT");
		
		$this->sql = "SELECT COUNT(pack_personne.ID_PACK) AS nb_pack, pack_personne.ID_PACK AS ID_PACK, ID_PERSONNE, DATE_ACHAT, DATE_DEBUT, DATE_FIN, DUREE ".
		"FROM pack LEFT OUTER JOIN pack_personne ON pack.ID_PACK=pack_personne.ID_PACK ".
		"WHERE ID_PERSONNE=:ID_PERSONNE AND DATE_ACHAT=:DATE_ACHAT;";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
				":DATE_ACHAT"=>$this->DATE_ACHAT,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_SUM_couts_packs_by_ID_PERSONNE($oMSG){		
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		
		$this->sql = "SELECT SUM(pack.PRIX_BASE) AS prix_total ".
		"FROM pack LEFT OUTER JOIN pack_personne ON pack.ID_PACK=pack_personne.ID_PACK ".
		"WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php
class VIEW_personne{

	private $ID_PERSONNE;
	private $ID_IP;
	private $ID_ANNONCE;
	private $ID_PACK;
	private $ID_CONTRAT;
	private $ID_TYPES;
	private $ID_MESSAGE;
	
	private $sql;
	
	public function __construct() {
		$this->sql = "";
		$this->ID_PERSONNE = "";
		$this->ID_IP = "";
		$this->ID_ANNONCE = "";
		$this->ID_PACK = "";
		$this->ID_CONTRAT = "";
		$this->ID_TYPES = "";
		$this->ID_MESSAGE = "";
	}
	
	// ----------------------------------------------------------- Vues sur la table des IP.
	
	public function SELECT_toutes_ip_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT * FROM ip_personne WHERE ID_PERSONNE=:ID_PERSONNE ORDER BY DATE_CONNEXION DESC;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_date_creation_compte_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		
		$this->sql = "SELECT * FROM ip_personne WHERE ID_PERSONNE=:ID_PERSONNE ORDER BY DATE_CONNEXION ASC LIMIT 0,1;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
						);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_dernieres_connexions_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$limit = $oMSG->getData("limit");
	
		$this->sql = "SELECT * FROM ip_personne WHERE ID_PERSONNE=:ID_PERSONNE ORDER BY DATE_CONNEXION DESC $limit;";
		$params = array(    
						":ID_PERSONNE"=>$this->ID_PERSONNE,
						);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_personne_by_ID_CONTRAT_et_nonTYPE_PERSONNE($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->TYPE_PERSONNE = $oMSG->getData('TYPE_PERSONNE');

		$this->sql = "SELECT personne.ID_PERSONNE, personne.PSEUDO, personne.EMAIL ".
		"FROM contrat_personne LEFT OUTER JOIN personne ON contrat_personne.ID_PERSONNE = personne.ID_PERSONNE ".
		"WHERE contrat_personne.ID_CONTRAT=:ID_CONTRAT AND personne.TYPE_PERSONNE<>:TYPE_PERSONNE;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':TYPE_PERSONNE' =>$this->TYPE_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_personne_by_ID_CONTRAT_et_TYPE_PERSONNE($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->TYPE_PERSONNE = $oMSG->getData('TYPE_PERSONNE');

		$this->sql = "SELECT personne.ID_PERSONNE, personne.PSEUDO, personne.EMAIL ".
		"FROM contrat_personne LEFT OUTER JOIN personne ON contrat_personne.ID_PERSONNE = personne.ID_PERSONNE ".
		"WHERE contrat_personne.ID_CONTRAT=:ID_CONTRAT AND personne.TYPE_PERSONNE=:TYPE_PERSONNE;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':TYPE_PERSONNE' =>$this->TYPE_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_prestataires_lors_annulation_contrat($oMSG){
		$this->ID_DEPARTEMENT = $oMSG->getData('ID_DEPARTEMENT');

		$this->sql = "SELECT personne.ID_PERSONNE, personne.EMAIL, personne.PSEUDO ".
		"FROM  personne LEFT OUTER JOIN pack_personne ON personne.ID_PERSONNE = pack_personne.ID_PERSONNE ".
		"LEFT OUTER JOIN pack ON pack_personne.ID_PACK = pack.ID_PACK ".
		"WHERE personne.DEPARTEMENTS LIKE '%".$this->ID_DEPARTEMENT."%' AND pack.ALERTE_NON_DISPONIBILITE = 1 AND personne.TYPE_PERSONNE = 'Prestataire' ".
		"AND pack_personne.DATE_DEBUT < NOW() AND pack_personne.DATE_FIN > NOW() AND personne.VISIBLE = 1 GROUP BY personne.ID_PERSONNE;";
		
		$params = array(  
							
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_PERSONNE_par_criteres($oMSG){
		$this->VISIBLE = $oMSG->getData('VISIBLE');
		$this->TYPE_PERSONNE = $oMSG->getData('TYPE_PERSONNE');
		$criteres = $oMSG->getData('criteres');
		$sql_LIKE = $oMSG->getData('sql_LIKE');
		$ROLES = $oMSG->getData('ROLES');

		$this->sql = "SELECT COUNT(DISTINCT personne.ID_PERSONNE) AS nb_personne ".
		"FROM personne LEFT OUTER JOIN pack_personne ON personne.ID_PERSONNE = pack_personne.ID_PERSONNE ".
		"LEFT OUTER JOIN pack ON pack.ID_PACK = pack_personne.ID_PACK ".
		"WHERE personne.VISIBLE=:VISIBLE AND personne.TYPE_PERSONNE=:TYPE_PERSONNE ".
		"AND pack_personne.DATE_DEBUT < NOW() AND pack_personne.DATE_FIN > NOW() $criteres ";
		# On rajoute la clause LIKE
		$this->sql.= " ".$sql_LIKE." ";

		
		$params = array(  
						':VISIBLE'=> $this->VISIBLE,	
						':TYPE_PERSONNE'=> $this->TYPE_PERSONNE,	
						':ROLES'=> $ROLES,	
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_personnes_par_criteres($oMSG){
		$this->VISIBLE = $oMSG->getData('VISIBLE');
		$this->TYPE_PERSONNE = $oMSG->getData('TYPE_PERSONNE');
		$criteres = $oMSG->getData('criteres');
		$ORDER_BY = $oMSG->getData('ORDER_BY');
		$sql_LIKE = $oMSG->getData('sql_LIKE');
		$ROLES = $oMSG->getData('ROLES');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');
		

		$this->sql = "SELECT personne.ID_PERSONNE, personne.PSEUDO, personne.URL_PHOTO_PRINCIPALE, personne.STATUT_PERSONNE, personne.ROLES, ".
		"personne.NOM, personne.PRENOM, personne.CIVILITE ".
		"FROM personne LEFT OUTER JOIN pack_personne ON personne.ID_PERSONNE = pack_personne.ID_PERSONNE ".
		"LEFT OUTER JOIN pack ON pack.ID_PACK = pack_personne.ID_PACK ".
		"WHERE personne.VISIBLE=:VISIBLE AND personne.TYPE_PERSONNE=:TYPE_PERSONNE ".
		"AND pack_personne.DATE_DEBUT < NOW() AND pack_personne.DATE_FIN > NOW() $criteres ";
		# On rajoute la clause LIKE
		$this->sql.= " ".$sql_LIKE." GROUP BY personne.ID_PERSONNE ";

		# On rajoute la clause ORDER BY
		if(!empty($ORDER_BY)){
			$this->sql.= " ".$ORDER_BY." ";
		}
		$this->sql.= "LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(  
						':VISIBLE'=> $this->VISIBLE,	
						':TYPE_PERSONNE'=> $this->TYPE_PERSONNE,	
						':ROLES'=> $ROLES,	
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_date_creation_compte($oMSG){
		$this->TYPE_PERSONNE = $oMSG->getData("TYPE_PERSONNE");
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');

		$this->sql = "SELECT DISTINCT personne.ID_PERSONNE, personne.PSEUDO, personne.URL_PHOTO_PRINCIPALE, ip_personne.ID_IP, ip_personne.DATE_CONNEXION ".
		"FROM personne LEFT OUTER JOIN ip_personne ON personne.ID_PERSONNE = ip_personne.ID_PERSONNE ".
		"WHERE personne.TYPE_PERSONNE=:TYPE_PERSONNE AND VISIBLE=1 ".
		"GROUP BY personne.ID_PERSONNE ORDER BY DATE_CONNEXION DESC LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(    
					":TYPE_PERSONNE"=>$this->TYPE_PERSONNE,
						);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_artistes_premium($oMSG){
		$this->VISIBLE = $oMSG->getData('VISIBLE');
		$this->TYPE_PERSONNE = $oMSG->getData('TYPE_PERSONNE');

		

		$this->sql = "SELECT personne.ID_PERSONNE, personne.PSEUDO, personne.URL_PHOTO_PRINCIPALE, personne.ROLES, pack.NOM, pack.CV_ACCESSIBLE, ".
		"pack.CV_VISIBILITE ".
		"FROM personne LEFT OUTER JOIN pack_personne ON personne.ID_PERSONNE = pack_personne.ID_PERSONNE ".
		"LEFT OUTER JOIN pack ON pack.ID_PACK = pack_personne.ID_PACK ".
		"WHERE personne.VISIBLE=:VISIBLE AND personne.TYPE_PERSONNE=:TYPE_PERSONNE ".
		"AND pack_personne.DATE_DEBUT < NOW() AND pack_personne.DATE_FIN > NOW() GROUP BY personne.ID_PERSONNE ORDER BY pack.CV_VISIBILITE DESC;";
		
		$params = array(  
						':VISIBLE'=> $this->VISIBLE,	
						':TYPE_PERSONNE'=> $this->TYPE_PERSONNE,	
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_toutes_identites_personnes_by_TYPE_PERSONNE($oMSG){
		$this->TYPE_PERSONNE = $oMSG->getData('TYPE_PERSONNE');
		$this->VISIBLE = $oMSG->getData('VISIBLE');
		
		$this->sql = "SELECT personne.ID_PERSONNE, personne.PSEUDO, personne.URL_PHOTO_PRINCIPALE, personne.NOM, personne.PRENOM, personne.CIVILITE, personne.EMAIL ".
		"FROM personne ".
		"WHERE personne.VISIBLE=:VISIBLE AND TYPE_PERSONNE=:TYPE_PERSONNE ".
		"ORDER BY PSEUDO, NOM, PRENOM;";
		
		$params = array( 
						':VISIBLE'=> $this->VISIBLE,
						':TYPE_PERSONNE'=> $this->TYPE_PERSONNE,
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
}<?php
class VIEW_types{

	private $ID_TYPES;
	private $ID_FAMILLE_TYPES;
	
	private $sql;
	
	public function __construct() {
		$this->sql = "";
		$this->ID_TYPES = "";
		$this->ID_FAMILLE_TYPES = "";
	}
	
	public function SELECT_ALL_BY_ID_FAMILLE_TYPES($oMSG){
		$this->ID_FAMILLE_TYPES = $oMSG->getData("ID_FAMILLE_TYPES");
	
		$this->sql = "SELECT * FROM types NATURAL JOIN famille_types WHERE ID_FAMILLE_TYPES=:ID_FAMILLE_TYPES;";
		$params = array(    
					":ID_FAMILLE_TYPES"=>$this->ID_FAMILLE_TYPES,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php 
	class CL_cryptage{
	
	public function Cryptage($MDP, $Clef){
		
		# On rajoute un grain de sable et une clé
		$Clef = "¤".$Clef."V4@";
		
		$LClef = strlen($Clef);
		$LMDP = strlen($MDP);
							
		if ($LClef < $LMDP){
					
			$Clef = str_pad($Clef, $LMDP, $Clef, STR_PAD_RIGHT);
		
		}
					
		elseif ($LClef > $LMDP){

			$diff = $LClef - $LMDP;
			$_Clef = substr($Clef, 0, -$diff);

		}
	    
		return $MDP ^ $Clef; // La fonction envoie le texte crypté
				
	}
	
}
?><?php
class CL_date{

	private $seconde;
	private $minute;
	private $heure;
	private $jour;
	private $mois;
	private $annee;
	
	private $date;
	private $now;
	
	private $tab_date;
	
	public function __construct(){
	
		$this->seconde = date("s");
		$this->minute = date("i");
		$this->heure = date("H");
		$this->jour = date("d");
		$this->mois = date("m");
		$this->annee = date("Y");
		
		$this->date = date("Y-m-d");
		$this->now = date("Y-m-d H:i:s");
		
		$this->tab_date = array();
	}
	
	/**
    * @desc Convertit la date au format desiré.
    * @param date $date : Date que l'on souhaite modifier.
    * @return date
	*
	*	/!\ Utiliser plutôt la fonction fx_ajouter_date qui permet de faire la même chose et plus encore. /!\
	*
	*
    */
	public function fx_convertir_date($date, $datetime = false, $return_date_formatee = false, $langue = "fr", $mois_ajout = 0){
		# On remplace toutes les "/" en "-".
		$this->date = str_replace("/", "-", $date);
		
		if($langue == "fr"){
			if(!$datetime){
				$this->tab_date = explode('-' , $this->date);
				$this->date  = $this->tab_date[2].'-'.$this->tab_date[1].'-'.$this->tab_date[0];
				return $this->date;
			
			}else{
				$tab_date = explode('-', $this->date);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])	
				$tab_date2 = explode(' ', $tab_date[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
				$tab_date3 = explode(':', $tab_date2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
				$date = date("d-m-Y H:i:s", mktime($tab_date3[0], $tab_date3[1], $tab_date3[2], $tab_date[1]+$mois_ajout, $tab_date2[0],  $tab_date[0]));
				$date_formatee = date("YmdHis", mktime($tab_date3[0], $tab_date3[1], $tab_date3[2], $tab_date[1]+$mois_ajout, $tab_date2[0],  $tab_date[0]));
				if(!$return_date_formatee){
					return $date;
				}else{
					return $date_formatee;
				}
			}
			# A vérifier car non testé.
		}else if($langue == "en"){
			if(!$datetime){
				$this->tab_date = explode('-' , $this->date);
				$this->date  = $this->tab_date[0].'-'.$this->tab_date[1].'-'.$this->tab_date[2];
				return $this->date;
			
			}else{
				$tab_date = explode('-', $date);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])	
				$tab_date2 = explode(' ', $tab_date[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
				$tab_date3 = explode(':', $tab_date2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
				$date = date("Y-m-d H:i:s", mktime($tab_date3[0], $tab_date3[1], $tab_date3[2], $tab_date[1]+$mois_ajout, $tab_date2[0],  $tab_date[0]));
				$date_formatee = date("YmdHis", mktime($tab_date3[0], $tab_date3[1], $tab_date3[2], $tab_date[1]+$mois_ajout, $tab_date2[0],  $tab_date[0]));
				if(!$return_date_formatee){
					return $date;
				}else{
					return $date_formatee;
				}
			}
		}
	}
	
	/**
    * @desc Vérifie que la date fournit est bien au format voulu.
    * @param date $date : Date que l'on souhaite vérifier.
	* @param string $format_voulu : Format de la date, en ou fr.	
    * @return date
    */
	public function fx_verif_date($date, $format_voulu = "fr", $datetime = false){
		# On remplace toutes les "/" en "-".
		$this->date = str_replace("/", "-", $date);
		
		$datetime_fr= "/\d{2}\-\d{2}\-\d{4} \d{2}:\d{2}:\d{2}/";
		$datetime_en= "/\d{4}\-\d{2}\-\d{2} \d{2}:\d{2}:\d{2}/";
		
		# On vérifie que le format de $date recu est bien une date.
		$date_fr = "/^\d{2}\-\d{2}\-\d{4}$/";
		$date_en = "/^\d{4}\-\d{2}\-\d{2}$/";
		
		if(!$datetime){
			# Si on souhaite un format date (Y-m-d ou d-m-Y) en sortie.
			if($format_voulu == "fr"){
				if(preg_match($date_fr, $this->date)){
					return true;
				}else{
					return false;
				}
			}else{
				if(preg_match($date_en, $this->date)){
					return true;
				}else{
					return false;
				}
			}
		}else{
			# Si on souhaite un format datetime (Y-m-d H:i:s ou d-m-Y H:i:s) en sortie.
			if($format_voulu == "fr"){
				if(preg_match($datetime_fr, $this->date)){
					return true;
				}else{
					return false;
				}
			}else{
				if(preg_match($datetime_en, $this->date)){
					return true;
				}else{
					return false;
				}
			}
			
		}
	}
	
	/**
	* @author  Ambroise Dhenain
	* @since [Création] 15 septembre 2011
	* @since [Modification] 07 octobre 2011
	* 
	* @desc Transforme la date de départ en lui rajoutant du temps.
	*		Permet de passer du format en->fr ou fr->en
	*		Gère les date et datetime
	*		Peut renvoyer une date formatée permettant d'effectuer des opérations d'égalité entre date. (<, >, =)
	*
	* @return Une date ou datetime.
	*
	*
	*/
	public function fx_ajouter_date($date, $datetime = false, $return_date_formatee = false, $format_fournit = "en", $format_voulu = "en", $jour = 0, $mois = 0, $annee = 0, $heure = 0, $minute = 0, $seconde = 0){
		# On remplace toutes les "/" en "-".
		$this->date = str_replace("/", "-", $date);
		
		if($datetime){
			if($format_fournit == 'en'){
				if($format_voulu == 'en'){
					$tab_date = explode('-', $this->date);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])	
					$tab_date2 = explode(' ', $tab_date[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
					$tab_date3 = explode(':', $tab_date2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
					
					if($return_date_formatee){
						# On retourne une date formatée.
						$this->date = date("YmdHis", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date2[0]+$jour,  $tab_date[0]+$annee));
						return $this->date;
					}else{
						# on retourne une date affichable.
						$this->date = date("Y-m-d H:i:s", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date2[0]+$jour,  $tab_date[0]+$annee));
						return $this->date;
					}
				}else if($format_voulu == 'fr'){
					$tab_date = explode('-', $this->date);# On récupère la date dans un tableau de trois cases ([Y][M][D + H:i:s])	
					$tab_date2 = explode(' ', $tab_date[2]);# On récupère le reste de la date dans un tableau à deux cases ([D][H:i:s])
					$tab_date3 = explode(':', $tab_date2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
					if($return_date_formatee){
						# On retourne une date formatée.
						$this->date = date("dmYHis", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date2[0]+$jour,  $tab_date[0]+$annee));
						return $this->date;
					}else{
						# on retourne une date affichable.
						$this->date = date("d-m-Y H:i:s", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date2[0]+$jour,  $tab_date[0]+$annee));
						return $this->date;
					}
				}else{
					return "Erreur: Format voulu invalide. (arg 4)";
				}
			}else if($format_fournit == 'fr'){
				if($format_voulu == 'en'){
					$tab_date = explode('-', $this->date);# On récupère la date dans un tableau de trois cases ([D][M][Y + H:i:s])	
					$tab_date2 = explode(' ', $tab_date[2]);# On récupère le reste de la date dans un tableau à deux cases ([Y][H:i:s])
					$tab_date3 = explode(':', $tab_date2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
					
					if($return_date_formatee){
						# On retourne une date formatée.
						$this->date = date("YmdHis", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date[0]+$jour,  $tab_date2[0]+$annee));
						return $this->date;
					}else{
						# on retourne une date affichable.
						$this->date = date("Y-m-d H:i:s", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date[0]+$jour,  $tab_date2[0]+$annee));
						return $this->date;
					}
				}else if($format_voulu == 'fr'){
					$tab_date = explode('-', $this->date);# On récupère la date dans un tableau de trois cases ([D][M][Y + H:i:s])	
					$tab_date2 = explode(' ', $tab_date[2]);# On récupère le reste de la date dans un tableau à deux cases ([Y][H:i:s])
					$tab_date3 = explode(':', $tab_date2[1]);# On récupère le reste de la date dans un tableau à 3 cases ([H][i][s])
					
					if($return_date_formatee){
						# On retourne une date formatée.
						$this->date = date("YmdHis", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date[0]+$jour,  $tab_date2[0]+$annee));
						return $this->date;
					}else{
						# on retourne une date affichable.
						$this->date = date("d-m-Y H:i:s", mktime($tab_date3[0]+$heure, $tab_date3[1]+$minute, $tab_date3[2]+$seconde, $tab_date[1]+$mois, $tab_date[0]+$jour,  $tab_date2[0]+$annee));
						return $this->date;
					}
				}else{
					return "Erreur: Format voulu invalide. (arg 4)";
				}
			}else{
				return "Erreur: Format fournit invalide. (arg 3)";
			}
		}else{
			if($format_fournit == 'en'){
				if($format_voulu == 'en'){
				
				}else if($format_voulu == 'fr'){
					$tab_date = explode('-', $this->date);# On récupère la date dans un tableau de trois cases ([Y][m][d])
					if($return_date_formatee){
						# On retourne une date formatée.
						$this->date = date("Ymd", mktime(0, 0, 0, $tab_date[1]+$mois, $tab_date[2]+$jour,  $tab_date[0]+$annee));
						return $this->date;
					}else{
						# on retourne une date affichable.
						$this->date = date("d-m-Y", mktime(0, 0, 0, $tab_date[1]+$mois, $tab_date[2]+$jour,  $tab_date[0]+$annee));
						return $this->date;
					}
				}else{
					return "Erreur: Format voulu invalide. (arg 4)";
				}
			}else if($format_fournit == 'fr'){
				if($format_voulu == 'en'){
					$tab_date = explode('-', $this->date);# On récupère la date dans un tableau de trois cases ([d][m][Y])
					if($return_date_formatee){
						# On retourne une date formatée.
						$this->date = date("Ymd", mktime(0, 0, 0, $tab_date[1]+$mois, $tab_date[0]+$jour,  $tab_date[2]+$annee));
						return $this->date;
					}else{
						# on retourne une date affichable.
						$this->date = date("Y-m-d", mktime(0, 0, 0, $tab_date[1]+$mois, $tab_date[0]+$jour,  $tab_date[2]+$annee));
						return $this->date;
					}
					
				}else if($format_voulu == 'fr'){
					
				}else{
					return "Erreur: Format voulu invalide. (arg 4)";
				}
			}else{
				return "Erreur: Format fournit invalide. (arg 3)";
			}
		}
		
	}
	
	/**
	* @author  Ambroise Dhenain
	* @since [Création] 07 octobre 2011
	* @since [Modification] 07 octobre 2011
	* 
	* @desc Formatte un datetime de manière à ce qu'il soit affichable.
	*		Peut supprimer les heures, minutes, secondes.
	*
	* @return Une date ou datetime.
	* @return false si la date n'est pas valide
	*
	*/
	public function fx_formatter_heure($date, $datetime = true, $format_fournit='en', $supprimer_Hms = false, $ajouter_A = true, $return_format_Hhm = true){
		# On remplace toutes les "/" en "-".
		$this->date = str_replace("/", "-", $date);
		
		if(!self::fx_verif_date($this->date, $format_fournit, $datetime)){
			return false;
		}
		
		if($datetime){
			if($supprimer_Hms){
				$this->tab_date = split(' ', $this->date);
				$this->date = $this->tab_date[0];
				
				return $this->date;
			}else if($ajouter_A && $return_format_Hhm){
				$this->date = str_replace(' ', ' à ', $this->date);
				$this->date = substr(str_replace(':', 'h', $this->date), 0, -3);
				
				return $this->date;
			}else if($return_format_Hhm){
				$this->date = substr(str_replace(':', 'h', $this->date), 0, -3);
				
				return $this->date;
			}else if($ajouter_A){
				$this->date = str_replace(' ', ' à ', $this->date);
				
				return $this->date;
			}
		}else{
		
		}
	}
	
}
?><?php
class CL_page{

	private $tab_page_absolu;
	private $tab_page_relatif;
	private $tab_config;
	private $tab_image_relatif;
	private $dossier_image;
	
	# Fonction qui attribue à chaque valeur l'id de la page, il suffit de rajouter un couple clé=>valeur pour référencer une nouvelle page.
	public function __construct(){
	
	# Modifier cette valeur pour modifier tout le début des liens absolus du site:
	$debut = "http://liveanim.com/";
	
	# Modifier cette valeur pour modifier le chemin d'accès depuis le dossier www aux images.
	$this->dossier_image = "images/";
	
	$this->tab_page_relatif = array(# Les liens ci-dessous sont relatifs par rapport à l'URL en cours.
						
						# Pages externes au site:
						
						
						# Pages du site:
						'accueil' =>'http://liveanim.com/',
						'inscription' =>'inscription.php',
						'activation' =>'activation.php',
						'recuperation_mdp' =>'recuperation_mdp.php',
						'gestion_compte' =>'gestion_compte.php',
						'administration' =>'administration.php',
						'changer_rang' =>'changer_rang.php',
						'activer_comptes' =>'activer_comptes.php',
						'bannir_membre' =>'bannir_membre.php',
						'liste_membre' =>'liste_membre.php',
						'comptes_supprimes' =>'comptes_supprimes.php',
						'modifier_fiche_membre' =>'modifier_fiche_membre.php',
						'ajouter_pack' =>'ajouter_pack.php',
						'liste_packs' =>'liste_packs.php',
						'modifier_fiche_pack' =>'modifier_fiche_pack.php',
						'modifier_fiche_perso' =>'modifier_fiche_perso.php',
						'modifier_mdp' =>'modifier_mdp.php',
						'supprimer_compte' =>'supprimer_compte.php',
						'acheter_pack' =>'acheter_pack.php',
						'historique_achat_pack' =>'historique_achat_pack.php',
						'achat_pack_ok' =>'achat_pack_ok.php',
						'achat_pack_annule' =>'achat_pack_annule.php',
						'achat_pack_error' =>'achat_pack_error.php',
						'filleuls' =>'filleuls.php',
						'lien_parrainage' =>'lien_parrainage.php',
						'creer_annonce' =>'creer_annonce.php',
						'liste_annonces_en_attente' =>'liste_annonces_en_attente.php',
						'modifier_fiche_annonce_by_admin' =>'modifier_fiche_annonce_by_admin.php',
						'modifier_fiche_annonce' =>'modifier_fiche_annonce.php',
						'historique_annonce' =>'historique_annonce.php',
						'liste_annonce' =>'liste_annonce.php',
						'annonce' =>'annonce.php',
						'creer_contrat' =>'creer_contrat.php',
						'personne' =>'personne.php',
						'messagerie' =>'messagerie.php',
						'message' =>'message.php',
						'supprimer_message' =>'script_supprimer_messages.php',
						'historique_contrat' =>'historique_contrat.php',
						'contrat' =>'contrat.php',
						'modifier_contrat' =>'modifier_fiche_contrat.php',
						'contrat_pdf' =>'contrat_pdf.php',
						'liste_artiste' =>'liste_artiste.php',
						'ajouter_news' =>'ajouter_news.php',
						'modifier_news' =>'modifier_news.php',
						'liste_news_admin' =>'liste_news_admin.php',
						'liste_news' =>'liste_news.php',
						'news' =>'news.php',
						'liste_annonce_admin' =>'liste_annonce_admin.php',
						'liste_contrats_admin' =>'liste_contrats_admin.php',
						'faq' =>'faq.php',
						'contact' =>'contact.php',
						'liste_prestation' =>'liste_prestation.php',
						'gestion_annonce_goldlive' =>'gestion_annonce_goldlive.php',
						'mentions_legales' =>'ressources/mentionslegales.pdf',
						'annonces_visitees' =>'annonces_visitees.php',
						'gestion_parrainage' =>'gestion_parrainage.php',
						'statistiques_site' =>'statistiques_site.php',
						'gestion_cgu' =>'gestion_cgu.php',
						'gestion_mentions_legales' =>'gestion_mentions_legales.php',
						'gestion_faq' =>'gestion_faq.php',
						'gestion_slides' =>'gestion_slides.php',
						'modifier_slide' =>'modifier_slide.php',
						'envoyer_message_admin' =>'envoyer_message_admin.php',
						'liste_pubs_admin' =>'liste_pubs_admin.php',
						'ajouter_pub' =>'ajouter_pub.php',
						'modifier_pub' =>'modifier_pub.php',
						'envoyer_invitations' =>'envoyer_invitations.php',
						'liste_role_admin' =>'liste_role_admin.php',
						
						
						
						
						
						
						# Dossier du site:
						'paiement_bancaire_pack' =>'bancaire/achats_packs/',
						'paiement_bancaire_annonce_goldlive' =>'bancaire/achats_annonces_goldlive_paypal/',
						'paiement_allopass_annonce_goldlive' =>'bancaire/achats_annonces_goldlive_allopass/',

						
						# Les scripts php sont précisés par le (.php à la fin) script_ au début:
						'deconnexion.php' =>'script_deconnexion.php',
						'script_accepter_contrat' =>'script_accepter_contrat.php',
						'script_annuler_contrat' =>'script_annuler_contrat.php',
						'IPN' =>'script_achat_pack_ipn.php',
						'annonce_goldlive_IPN' =>'script_annonce_goldlive_IPN.php',
						'script_connexion_facebook' =>'script_connexion_facebook.php',
						
						# Les scripts js sont précisés par le .js à la fin, ils se trouvent dans le dossier /js:
						'acheter_pack.js' =>'js/acheter_pack.js',
						'activer_pack.js' =>'js/activer_pack.js',
						
						# Ressources:
						'cgu' =>'ressources/cgu.pdf',					
						
						);
						
	$this->tab_page_absolu = array(# Les liens ci-dessous sont absolus.
												
						# Pages du site:
						'accueil' =>$debut,
						'inscription' =>$debut.$this->tab_page_relatif['inscription'],
						'activation' =>$debut.$this->tab_page_relatif['activation'],
						'recuperation_mdp' =>$debut.$this->tab_page_relatif['recuperation_mdp'],
						'gestion_compte' =>$debut.$this->tab_page_relatif['gestion_compte'],
						'administration' =>$debut.$this->tab_page_relatif['administration'],
						'changer_rang' =>$debut.$this->tab_page_relatif['changer_rang'],
						'activer_comptes' =>$debut.$this->tab_page_relatif['activer_comptes'],
						'bannir_membre' =>$debut.$this->tab_page_relatif['bannir_membre'],
						'liste_membre' =>$debut.$this->tab_page_relatif['liste_membre'],
						'comptes_supprimes' =>$debut.$this->tab_page_relatif['comptes_supprimes'],
						'modifier_fiche_membre' =>$debut.$this->tab_page_relatif['modifier_fiche_membre'],
						'ajouter_pack' =>$debut.$this->tab_page_relatif['ajouter_pack'],
						'liste_packs' =>$debut.$this->tab_page_relatif['liste_packs'],
						'modifier_fiche_pack' =>$debut.$this->tab_page_relatif['modifier_fiche_pack'],
						'modifier_fiche_perso' =>$debut.$this->tab_page_relatif['modifier_fiche_perso'],
						'modifier_mdp' =>$debut.$this->tab_page_relatif['modifier_mdp'],
						'supprimer_compte' =>$debut.$this->tab_page_relatif['supprimer_compte'],
						'acheter_pack' =>$debut.$this->tab_page_relatif['acheter_pack'],
						'historique_achat_pack' =>$debut.$this->tab_page_relatif['historique_achat_pack'],
						'achat_pack_ok' =>$debut.$this->tab_page_relatif['achat_pack_ok'],
						'achat_pack_annule' =>$debut.$this->tab_page_relatif['achat_pack_annule'],
						'achat_pack_error' =>$debut.$this->tab_page_relatif['achat_pack_error'],
						'filleuls' =>$debut.$this->tab_page_relatif['filleuls'],
						'lien_parrainage' =>$debut.$this->tab_page_relatif['lien_parrainage'],
						'creer_annonce' =>$debut.$this->tab_page_relatif['creer_annonce'],
						'liste_annonces_en_attente' =>$debut.$this->tab_page_relatif['liste_annonces_en_attente'],
						'modifier_fiche_annonce_by_admin' =>$debut.$this->tab_page_relatif['modifier_fiche_annonce_by_admin'],
						'modifier_fiche_annonce' =>$debut.$this->tab_page_relatif['modifier_fiche_annonce'],
						'historique_annonce' =>$debut.$this->tab_page_relatif['historique_annonce'],
						'liste_annonce' =>$debut.$this->tab_page_relatif['liste_annonce'],
						'annonce' =>$debut.$this->tab_page_relatif['annonce'],
						'creer_contrat' =>$debut.$this->tab_page_relatif['creer_contrat'],
						'personne' =>$debut.$this->tab_page_relatif['personne'],
						'messagerie' =>$debut.$this->tab_page_relatif['messagerie'],
						'message' =>$debut.$this->tab_page_relatif['message'],
						'supprimer_message' =>$debut.$this->tab_page_relatif['supprimer_message'],
						'historique_contrat' =>$debut.$this->tab_page_relatif['historique_contrat'],
						'contrat' =>$debut.$this->tab_page_relatif['contrat'],
						'modifier_contrat' =>$debut.$this->tab_page_relatif['modifier_contrat'],
						'contrat_pdf' =>$debut.$this->tab_page_relatif['contrat_pdf'],
						'liste_artiste' =>$debut.$this->tab_page_relatif['liste_artiste'],
						'ajouter_news' =>$debut.$this->tab_page_relatif['ajouter_news'],
						'modifier_news' =>$debut.$this->tab_page_relatif['modifier_news'],
						'liste_news_admin' =>$debut.$this->tab_page_relatif['liste_news_admin'],
						'liste_news' =>$debut.$this->tab_page_relatif['liste_news'],
						'news' =>$debut.$this->tab_page_relatif['news'],
						'liste_contrats_admin' =>$debut.$this->tab_page_relatif['liste_contrats_admin'],
						'faq' =>$debut.$this->tab_page_relatif['faq'],
						'contact' =>$debut.$this->tab_page_relatif['contact'],
						'liste_prestation' =>$debut.$this->tab_page_relatif['liste_prestation'],
						'gestion_annonce_goldlive' =>$debut.$this->tab_page_relatif['gestion_annonce_goldlive'],
						'mentions_legales' =>$debut.$this->tab_page_relatif['mentions_legales'],
						'gestion_parrainage' =>$debut.$this->tab_page_relatif['gestion_parrainage'],
						'statistiques_site' =>$debut.$this->tab_page_relatif['statistiques_site'],
						'gestion_cgu' =>$debut.$this->tab_page_relatif['gestion_cgu'],
						'gestion_mentions_legales' =>$debut.$this->tab_page_relatif['gestion_mentions_legales'],
						'gestion_slides' =>$debut.$this->tab_page_relatif['gestion_slides'],
						'modifier_slide' =>$debut.$this->tab_page_relatif['modifier_slide'],
						'envoyer_message_admin' =>$debut.$this->tab_page_relatif['envoyer_message_admin'],
						'liste_pubs_admin' =>$debut.$this->tab_page_relatif['liste_pubs_admin'],
						'ajouter_pub' =>$debut.$this->tab_page_relatif['ajouter_pub'],
						'modifier_pub' =>$debut.$this->tab_page_relatif['modifier_pub'],
						'envoyer_invitations' =>$debut.$this->tab_page_relatif['envoyer_invitations'],
						'liste_role_admin' =>$debut.$this->tab_page_relatif['liste_role_admin'],
						
						
						
						
						
						# Dossier du site:
						'paiement_bancaire_pack' =>$debut.$this->tab_page_relatif['paiement_bancaire_pack'],
						'paiement_bancaire_annonce_goldlive' =>$debut.$this->tab_page_relatif['paiement_bancaire_annonce_goldlive'],
						'paiement_allopass_annonce_goldlive' =>$debut.$this->tab_page_relatif['paiement_allopass_annonce_goldlive'],
						
						# Les scripts php sont précisés par le (.php à la fin) script_ au début:
						'deconnexion.php' =>$debut.$this->tab_page_relatif['deconnexion.php'],
						'script_accepter_contrat' =>$debut.$this->tab_page_relatif['script_accepter_contrat'],
						'script_annuler_contrat' =>$debut.$this->tab_page_relatif['script_annuler_contrat'],
						'IPN' =>$debut.$this->tab_page_relatif['IPN'],
						'annonce_goldlive_IPN' =>$debut.$this->tab_page_relatif['annonce_goldlive_IPN'],
						'script_connexion_facebook' =>$debut.$this->tab_page_relatif['script_connexion_facebook'],
						
						# Les scripts js sont précisés par le .js à la fin:
						'acheter_pack.js' =>$debut.$this->tab_page_relatif['acheter_pack.js'],
						'activer_pack.js' =>$debut.$this->tab_page_relatif['activer_pack.js'],
						
						# Ressources:
						'cgu' =>$debut.$this->tab_page_relatif['cgu'],
						
						);
	
	
	$this->tab_config = array(
						'compte_credite' =>'liveanim@gmail.com',
								
						);
	
	
	
	
	$this->tab_image_relatif = array(
						# Images en vrac
						'casque_blanc'  =>'1page-img4.jpg',
						'casque_argent'  =>'1page-img1.jpg',
						'casque_or'  =>'1page-img1.png',
						'avat_test1'  =>'1page-img5.png',
						'news1'  =>'1page-img12.jpg',
						'disco1'  =>'2page-img3.png',
						'annonces_gold'  =>'annonces_gold.gif',
						'btn_droite'  =>'arrow1.png',
						'btn_droite_petit'  =>'arrow2.png',
						'background'  =>'background.jpg',
						'cadre_connexion1'  =>'Bloc-Connexion.jpg',
						'cadre_connexion3'  =>'Cadre-connexion.png',
						'cadre_connexion2'  =>'Cadre de connexion.png',# Utilisé
						'disco_ball'  =>'disco ball.png',
						'favicon'  =>'favicon.gif',
						'fond_inscription'  =>'fond_inscription.jpg',
						'fond_inscription_bas'  =>'fond_inscription_bas.jpg',
						'fond_inscription_haut'  =>'fond_inscription_haut.jpg',
						'fond_inscription_milieu'  =>'fond_inscription_milieu.png',
						'twitter'  =>'icon1.gif',
						'icon2'  =>'icon2.gif',
						'facebook'  =>'icon3.gif',
						'icon4'  =>'icon4.gif',
						'rss'  =>'icon5.gif',
						'fr'  =>'icon6.gif',
						'etoile_menu'  =>'imgmenu.png',
						'inscription_gratuite'  =>'inscription.png',
						'liste1'  =>'liste1.png',
						'logo_liveanim'  =>'logo.png',
						'micro_renverse'  =>'micro.gif',
						'mon_compte'  =>'mon_compte.png',
						'suivant'  =>'next.png',
						'non1'  =>'non.gif',
						'ok1'  =>'ok.gif',
						
						'pdf'  =>'pdf.png',
						'pdf_non'  =>'pdf_non.png',
						'precedent'  =>'prev.png',
						'previsualiser'  =>'previsualiser.jpg',
						'supprimer_gros'  =>'supprimer_personne.png',
						'supprimer'  =>'supprimer.png',
						'admin_rond'  =>'photo_administration2.gif',
						'supprimer_personne_petit'  =>'supprimer_personne_petit.png',
						
						'valider2'  =>'valider.png',
						'valider3'  =>'valider3.jpg',
						'voir' =>'voir.jpg',
						'voir_non' =>'voir_non.png',
						
						'paypal_boutons' =>'paypal_boutons.gif',
						'news' =>'news.gif',
						'accepter_contrat' =>'accepter_contrat.png',
						'modifier_contrat' =>'modifier_contrat.png',
						'etoile_pleine' =>'Etoile_pleine.png',
						'etoile_vide' =>'Etoile_vide.png',
						
						
						# Sliders
						'cle_administration'  =>'photo_administration1.gif',
						'administration'  =>'slide_administration.gif',
						'slide_test'  =>'slide1.jpg',
						
						# Parrainage
						'special_parrainage'  =>'parrainage1.png',
						
						# Images template LiveAnim (trucs rose ^^)
						'plus' =>'Plus.png',
						'petit_plus' =>'Petit_plus.png',
						'moins' =>'Moins.png',
						'petit_moins' =>'Petit_moins.png',
						'valider'  =>'valider4.png',
						'groupe'  =>'Bonhommes.png',
						'croix'  =>'Croix.png',
						'petite_croix'  =>'non.gif',
						'email'  =>'Email.png',
						'fleche_droite'  =>'Flèche droite.png',
						'fleche_gauche'  =>'Flèche gauche.png',
						'loupe'  =>'Loupe.png',
						'new_message'  =>'Message ouvert.png',
						'messagerie'  =>'Message fermé.png',
						'accueil'  =>'Maison.png',
						'inscription'  =>'inscription.png',
						'liste_annonce'  =>'Liste_annonce.png',
						'exclamation'  =>'exclamation.png',
						'interrogation'  =>'interrogation.png',
						'pouce_endroit'  =>'Pouce endroit.png',
						'pouce_envers'  =>'Pouce envers.png',
						'reglages'  =>'Réglages.png',
						'tel'  =>'Téléphone.png',
						'pouce_endroit'  =>'Pouce_endroit.png',
						'pouce_envers'  =>'Pouce_envers.png',
						);
	
	}
	
	
	# Accesseur en lecture de $tab_page.
    public function getPage($page, $type_lien = "relatif") {
        if($type_lien == "absolu"){
			return $this->tab_page_absolu[$page];
		}else if($type_lien == "relatif"){
			return $this->tab_page_relatif[$page];
		}
	}
	
	# Accesseur en lecture de $tab_config
	public function getConfig($nom_array) {
		return $this->tab_config[$nom_array];
	}
	
	# Accesseur en lecture de $tab_image.
    public function getImage($image) {
		return $this->dossier_image.$this->tab_image_relatif[$image];
	}
	
	# Accesseur en lecture de $tab_image.
    public function getDossierImage() {
		return $this->dossier_image;
	}

}
?><?php
/*
* @Author: Ambroise Dhenain
* @Date: 15 septembre 2011
* @Description: Classe d'upload qui permet d'uploader n'importe quel type de fichier en précisant toutes ses caractéristiques.
* @Exemple d'utilisation: 

// On crée l'objet, on lui passe ses paramètres, ils ne seront pas forcément tous modifiés.
$oCL_upload = new CL_upload($_FILES['fichier_uploade'], "images/uploads/membres", array("png", "gif", "jpg", "jpeg"), 0777, array("image/jpeg", "image/jpeg", "image/png", "image/gif", "image/pjpg", "image/pjpeg"), 200, 200, 30000);
	$new_filename = $ID_PERSONNE."_".date("Y-m-d_H-i-s");
	$ext = explode('.', $_FILES['fichier_uploade']['name']);
	$extension = $ext[count($ext)-1];
	
	// On upload le fichier: $verif_mime = true, $verif_largeur = false, $verif_longueur = false, $verif_size = true (valeurs de base de la fonction).
	$tab_message = $oCL_upload->fx_upload($_FILES['fichier_uploade']['name'], $new_filename);
	
	if($tab_message['reussite'] == true){
		$URL_PHOTO_PRINCIPALE =  $oCL_page->getPage('accueil', 'absolu').$tab_message['resultat'];
	}else{
		$_SESSION['modification_fiche_membre']['message'].= $tab_message['resultat'];
		$URL_PHOTO_PRINCIPALE = "";
		$echec_upload = true;
		# On empèche pas la modification de la fiche.
	}
	
* 
*/

class CL_upload {
    
	private $file;
    private $path;
    private $extensions = array();
    private $chmod = 0777;
	private $mime = array();
	private $hauteur = 200;
	private $largeur = 200;
	private $size = 2097152;
    /* La taille correspond au nombre d'OCTETS maximums du fichier. Ici 2Mo soit le maximal autorisé par php de base. 
	* (Modifiable ! --> http://forum.ovh.com/archive/index.php/t-7622.html  (Serveur Dédié nécessaire !) ) */
	
	private $errorsMessage = "";# Contient tous les messages d'erreurs.
	
    private $messages = array(
                            "success"   => "<span class='alert'>Téléchargement effectué avec succès.</span><br />",
                            "extension" => "<span class='alert'>Extension non autorisé.</span><br />",
                            "echec_upload"    => "<span class='alert'>Une erreur est survenue.</span><br />",
							"nom"		=> "<span class='alert'>Le nom du fichier est invalide.</span><br />",
							"mime"		=> "<span class='alert'>Le type mime du fichier est invalide.</span><br />",
							"largeur"	=> "<span class='alert'>La largeur du fichier est trop grande.</span><br />",
							"longueur"	=> "<span class='alert'>La longueur du fichier est trop grande.</span><br />",
							"size"		=> "<span class='alert'>La taille (Ko) du fichier est trop grande.</span><br />",
                        );    
    
    /**
    * Constructeur
    * @param string $file : Fichier à uploader
    * @param string $path : Chemin du fichier à uploader
    * @param array $extensions : Extensions autorisé pour l'upload
    * @param int $chmod : Droits du fichier uploadé
    * @param array $mime : Les types mimes autorisés
    * @param int $hauteur : Hauteur maximale du fichier (pixels)
	* @param int $largeur : Largeur maximale du fichier (pixels)
	* @param int $size : Taille maximale du fichier (octets)
    */
    public function __construct($file = null, $path = "images/uploads/", $extensions = array("jpg", "jpeg", "png", "gif"), $chmod = 0777, $mime = array("image/jpeg", "image/jpeg", "image/png", "image/gif", "image/pjpg", "image/pjpeg"), $hauteur = 200, $largeur = 200, $size = 2097152) {
        $this->file = $file;
        $this->path = $path;
        $this->extensions = $extensions;
        $this->chmod = $chmod;
		$this->mime = $mime;
		$this->hauteur = $hauteur;
		$this->largeur = $largeur;
		$this->size = $size;
		$this->errorsMessage = "";
    }    
    
    /**
    * Retourne le fichier uploadé
    * @return string
    */
    public function getFile() {
        return $this->file;
    }

    /**
    * Retourne le chemin d'upload
    * @return string
    */
    public function getPath() {
        return $this->path;
    }

    /**
    * Retourne les extensions autorisé sous forme de tableau
    * @return array
    */
    public function getExtensions() {
        return $this->extensions;
    }

    /**
    * Retourne le chmod du répertoire d'upload
    * @return int
    */
    public function getChmod() {
        return $this->chmod;
    }

    /**
    * Retourne la valeur d'une clé de l'attribut $messages
    * @return string
    */
    public function getMessage($name) {
        $keys = array_keys($this->messages);
        if(in_array($name, $keys)){
            return $this->messages[$name];
		}
        else
            return "<strong>" . $name . "</strong> n'est pas pris en charge";
    }

    /**
    * Définit le fichier à uploader
    * @param string $file : Fichier à uploader
    * @return void
    */
    public function setFile($file) {
        $this->file = $file;
    }
    
    /**
    * Définit le chemin de l'upload
    * @param string $path : Chemin du fichier à uploader
    * @return void
    */
    public function setPath($path) {
        $this->path = $path;
    }
    
    /**
    * Définit les extensions autorisé lors de l'upload
    * @param array $extensions : Extensions autorisé pour l'upload
    * @return void
    */
    public function setExtensions($extensions = array()){
        $this->extensions = $extensions;
    }

    /**
    * Définit le chmod du répertoire d'upload
    * @param int $chmod : Chmod du répertoire
    * @return void
    */
    public function setChmod($chmod) {
        $this->chmod = $chmod;
    }
    
    /**
    * Définit un message personnalisé sous forme de tableau associatif
    * @param array $message : Message personnalisé (array("success" => "New message"))
    * @return void
    */
    public function setMessage($message = array()){
        foreach($message as $key => $value){
            $this->messages[$key] = $value;
        }
    }
	
	/**
    * Retourne la hauteur du fichier
    * @return int
    */
    public function getHauteur() {
        return $this->Hauteur;
    }

    /**
    * Définit la hauteur maximale du fichier (en pixels).
	* @param int $hauteur : La hauteur du fichier, en pixels.
    * @return void
    */
    public function setHauteur($hauteur = 200) {
        $this->hauteur = $hauteur;
    } 
	
	/**
    * Retourne la largeur du fichier
    * @return int
    */
    public function getLargeur() {
        return $this->largeur;
    }

    /**
    * Définit la largeur maximale du fichier (en pixels).
	* @param int $largeur : La largeur du fichier, en pixels.
    * @return void
    */
    public function setLargeur($largeur = 200) {
        $this->largeur = $largeur;
    } 
    
	 /**
    * Retourne le type mime du fichier
    * @return string
    */
    public function getMime() {
        return $this->mime;
    }

    /**
    * Définit les types mimes autorisés
	* @param array $mime : Tableau contenant tous les types mime autorisés.
    * @return void
    */
    public function setMime($mime = array()) {
        $this->mime = $mime;
    } 
	
	/**
    * Retourne la taille en octets du fichier
    * @return string
    */
    public function getSize() {
        return $this->size;
    }

    /**
    * Définit la taille maximale (en octet) du fichier
	* @param int $size : La taille en octets. 2Mo si non précisé.
    * @return void
    */
    public function setSize($size = 2097152) {
        $this->size = $size;
    }
	
    /**
    * Upload le fichier
	* @param string $filename : Le nom du fichier.
	* @param string $new_filename : Le nouveau nom du fichier si différent de "0".
	* @param bool $verif_mime : Indique si le type mime doit être vérifiée. Vrai par défaut.
	* @param bool $time_auto : Indique si la fonction time est appliquée automatiquement en cas de fichier déjà existant.
	* @param bool $verif_largeur : Indique si la largeur doit être vérifiée. Faux par défaut.
	* @param bool $verif_longueur : Indique si la longueur doit être vérifiée. Faux par défaut.
	* @param bool $verif_size : Indique si la taille doit être vérifiée. Vrai par défaut.
    * @return string or array
    */
    public function fx_upload($filename, $new_filename = "0", $verif_mime = true, $time_auto = true, $verif_largeur = false, $verif_longueur = false, $verif_size = true){
		$error = 0;# Un type INT permet d'incrémenter à chaque erreur sans ce soucier de la valeur précédente. On peut donc connaître le nombre d'erreurs totales.
        $this->errorsMessage = "";# On réinitialise les messages d'erreurs entre deux appels de fx_upload.
        
		# On récupère l'extension du fichier en découpant le nom à chaque "." et en sélectionnant la dernière partie.
        $ext = explode('.', $filename);
        $extension = $ext[count($ext)-1];

		# On récupère les tailles du fichier. /!\ On regarde par rapport à l'emplacement temporaire du fichier.
		$tailles = getimagesize($this->file['tmp_name']);
		
		if($verif_mime){
			# On récupère le type MIME du fichier.
			$mime = $tailles['mime'];

			if($mime == NULL){
				# On tente alors de récupérer le type du fichier. (Notamment les PDF qui n'ont pas de MIME mais un type.
				$mime = $this->file['type'];
			}
		}
		
		if($verif_size){
			# On récupère la taille en BYTES ~ octets du fichier.
			$size = $this->file['size'];
		}
		
		# Si on a fournit un nouveau nom alors on modifie l'ancien.
		if($new_filename != "0"){
			$filename = $new_filename.".".$extension; # On oublie pas de rajouter l'extension à la fin.
		}else{
			$filename.=".".$extension; # On rajoute l'extention.
		}
		
		
		// ------------------------------------------ On commence les vérifications après avoir récupéré toutes les données.
		
		# On vérifie le nom du fichier.
        if($filename == ''){
			$error++; # Le fichier ne possède pas de nom.
			$this->errorsMessage.= $this->getMessage('nom');
		}
	
		# On vérifie l'extension du fichier.
		if(!in_array(strtolower($extension), $this->extensions)) {
			$this->errorsMessage.= $this->getMessage('extension');
			$error++;
		}

		if($verif_mime){
			# On vérifie le type mime du fichier.
			if(!in_array($mime, $this->mime)) {
				$this->errorsMessage.= $this->getMessage('mime');
				$error++;
			}
		}
		
		# Si on a décidé de vérifier la largeur.
		if($verif_largeur){
			if($tailles[0] > $this->largeur){
				# La largeur de l'image est supérieur à celle que l'on désire.
				$this->errorsMessage.= $this->getMessage('largeur');
				$error++;
			}
		}
	
		# Si on a décidé de vérifier la longueur.
		if($verif_longueur){
			if($tailles[1] > $this->longueur){
				# La longueur de l'image est supérieur à celle que l'on désire.
				$this->errorsMessage.= $this->getMessage('longueur');
				$error++;
			}
		}
	
		if($verif_size){
			if($size > $this->size){
				# Si la taille du fichier est supérieure à la taille que l'on désire.
				$this->errorsMessage.= $this->getMessage('size');
				$error++;
			}
		}

		# S'il n'y a aucune erreur
        if($error == 0) {
			# On regarde si le chemin choisi est un dossier.
            if(!is_dir($this->path)) {
				# Si ce n'est pas un dossier alors on le crée et on lui attribue le chmod. (Chmod = droits d'accès au niveau du serveur pour les dossiers/fichiers).
                mkdir($this->path);
                chmod($this->path, $this->chmod);
            }
            
			# Si on a laissé le time_auto à true alors on modifie le nom du fichier afin de ne pas écraser l'existant. (S'il existe).
			if($time_auto){
				# Si le fichier qu'on veut mettre dans le dossier existe déjà on lui attribue une valeur devant son nom.
				if(file_exists($this->path .'/'. $filename)){
					$filename = time() . $filename;
				}
			}
            
			# On tente d'uploader le fichier.
            $upload = move_uploaded_file($this->file['tmp_name'], $this->path .'/'. $filename);
                if($upload){
					$chemin = $this->path .'/'. $filename;
					
                    return array("reussite" => true, "resultat" => $this->path .'/'. $filename);# On retourne true pour dire que ça a fonctionné.
				}
                else{
                    return array("reussite" => false, "resultat" => $this->getMessage('echec_upload'));
				}
        }else {
			# S'il y a une/des erreur(s) alors on retourne le message d'erreur et un booleen false
            return array("reussite" => false, "resultat" => $this->errorsMessage);
        }
    }
    
    /**
    * Permet d'avoir un aperçu rapide de l'objet instancié.
    * @return string
    */
    public function getUpload() {
        echo '<pre>';
        print_r($this);
        echo '</pre>';
    }
	
	/**
    * Permet d'avoir un aperçu rapide de l'objet instancié et de toutes ses méthodes.
    * @return string
    */
	public function __toString(){
		return '<pre>' . print_r($this, true) . 'Méthodes: ' . print_r(get_class_methods(__CLASS__), true) . '<pre>';
	}

}
?><?php
class CL_video{

	private $url;
	private $url_hebergeur;
	private $url_decoupee;
	private $delimiter;
	private $tag_video;
	private $regex;
	private $youtube;
	private $youtu;
	private $youtubewatch;
	
	public function __construct($delimiter = "/", $regex = ""){
		$this->url = "";
		$this->url_hebergeur = "";
		$this->url_decoupee = "";
		$this->delimiter = $delimiter;
		$this->tag_video = "";
		$this->regex = $regex;
		$this->youtube = "http://www.youtube.com/v/";
		$this->youtu = "http://youtu.be/";
		$this->youtubewatch = "http://www.youtube.com/watch?v=";
	}

	public function fx_recuperer_tag($url){
		$this->url = $url;
		
		$this->url_decoupee = explode($this->delimiter, $this->url);
		
		# On compte le nombre d'éléments dans le tableau.
		$nb_elements = count($this->url_decoupee);
	
		# Vérification youtube
		if(substr_count($this->url, $this->youtube) > 0){
			return $this->url;
			
		}else if(substr_count($this->url, $this->youtu)  > 0){
			# On retourne la chaine de base + le dernier élément du tableau.
			return $this->youtube.$this->url_decoupee[$nb_elements-1];
			
		}else if(substr_count($this->url, $this->youtubewatch)  > 0){
			# On retourne la chaine mais en modifiant le début.
			return str_replace("http://www.youtube.com/watch?v=", "http://www.youtube.com/v/", $this->url);
		
		}else{
			//return $this->youtube.$this->url_decoupee[$nb_elements-1];
		}
	}

}
?><?php
class MPG_annonce{

	private $ID_ANNONCE;
	private $ID_PERSONNE;
	private $ID_DEPARTEMENT;
	private $TITRE;
	private $TYPE_ANNONCE;
	private $DATE_ANNONCE;
	private $DATE_DEBUT;
	private $DATE_FIN;
	private $ARTISTES_RECHERCHES;
	private $BUDGET;
	private $NB_CONVIVES;
	private $DESCRIPTION;
	private $ADRESSE;
	private $CP;
	private $VILLE;
	private $GOLDLIVE;
	private $VISIBLE;
	private $STATUT;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_ANNONCE = "";
	$this->ID_PERSONNE = "";
	$this->ID_DEPARTEMENT = "";
	$this->TITRE = "";
	$this->TYPE_ANNONCE = "";
	$this->DATE_ANNONCE = "";
	$this->DATE_DEBUT = "";
	$this->DATE_FIN = "";
	$this->ARTISTES_RECHERCHES = "";
	$this->BUDGET = "";
	$this->NB_CONVIVES = "";
	$this->DESCRIPTION = "";
	$this->ADRESSE = "";
	$this->CP = "";
	$this->VILLE = "";
	$this->GOLDLIVE = "";
	$this->VISIBLE = "";
	$this->STATUT = "";
	}
	
	
	public function SELECT_COUNT_ID_ANNONCE_by_VISIBLE($oMSG){
		$this->VISIBLE = $oMSG->getData("VISIBLE");
	
		$this->sql = "SELECT COUNT(ID_ANNONCE) as nb_annonce FROM annonce WHERE VISIBLE=:VISIBLE;";
		$params = array(    
					":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_by_ID_ANNONCE($oMSG){
		$this->ID_ANNONCE = $oMSG->getData("ID_ANNONCE");
	
		$this->sql = "SELECT ID_ANNONCE, ID_PERSONNE, ID_DEPARTEMENT, TITRE, TYPE_ANNONCE, DATE_ANNONCE, DATE_DEBUT, DATE_FIN, ARTISTES_RECHERCHES, ".
		"BUDGET, NB_CONVIVES, DESCRIPTION, ADRESSE, CP, VILLE, GOLDLIVE, VISIBLE, STATUT FROM annonce WHERE ID_ANNONCE=:ID_ANNONCE;";
		$params = array(    
					":ID_ANNONCE"=>$this->ID_ANNONCE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_ANNONCE_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT COUNT(ID_ANNONCE) as nb_annonce FROM annonce WHERE ID_PERSONNE=:ID_PERSONNE;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_toutes_annonces_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$debut_affichage = $oMSG->getData("debut_affichage");
		$nb_result_affiches = $oMSG->getData("nb_result_affiches");
	
		$this->sql = "SELECT ID_ANNONCE, TITRE, TYPE_ANNONCE, DATE_ANNONCE, DATE_DEBUT, DATE_FIN, ".
		"GOLDLIVE, VISIBLE, STATUT FROM annonce WHERE ID_PERSONNE=:ID_PERSONNE ".
		"ORDER BY DATE_ANNONCE DESC LIMIT $debut_affichage, $nb_result_affiches;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_ANNONCE_futures_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT COUNT(ID_ANNONCE) as nb_annonce FROM annonce WHERE ID_PERSONNE=:ID_PERSONNE AND DATE_DEBUT > NOW();";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_annonces_futures_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$debut_affichage = $oMSG->getData("debut_affichage");
		$nb_result_affiches = $oMSG->getData("nb_result_affiches");
		
		$this->sql = "SELECT ID_ANNONCE, TITRE, TYPE_ANNONCE, DATE_ANNONCE, DATE_DEBUT, DATE_FIN, ".
		"GOLDLIVE, VISIBLE, STATUT FROM annonce WHERE ID_PERSONNE=:ID_PERSONNE AND DATE_DEBUT > NOW() ".
		"ORDER BY DATE_ANNONCE DESC LIMIT $debut_affichage, $nb_result_affiches;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_annonces_par_criteres($oMSG){
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->STATUT = $oMSG->getData("STATUT");
		$criteres = $oMSG->getData("criteres");
		
		$this->sql = "SELECT COUNT(ID_ANNONCE) as nb_annonce FROM annonce WHERE VISIBLE=:VISIBLE AND STATUT=:STATUT $criteres";
		$params = array(    
					":VISIBLE"=>$this->VISIBLE,
					":STATUT"=>$this->STATUT,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_annonce_valide_by_ID_ANNONCE($oMSG){
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->STATUT = $oMSG->getData("STATUT");
		$this->ID_ANNONCE = $oMSG->getData("ID_ANNONCE");		

		$this->sql = "SELECT ID_ANNONCE, ID_PERSONNE, TITRE, TYPE_ANNONCE, DATE_DEBUT, DATE_FIN, BUDGET FROM annonce WHERE VISIBLE=:VISIBLE AND STATUT=:STATUT AND ID_ANNONCE=:ID_ANNONCE AND DATE_DEBUT > NOW();";
		$params = array(    
					":VISIBLE"=>$this->VISIBLE,
					":STATUT"=>$this->STATUT,
					":ID_ANNONCE"=>$this->ID_ANNONCE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_toutes_annonces($oMSG){
		
		$this->sql = "SELECT COUNT(ID_ANNONCE) as nb_annonce FROM annonce;";
		$params = array(    
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_tous_goldlive($oMSG){
		
		$this->sql = "SELECT COUNT(ID_ANNONCE) as nb_annonce FROM annonce WHERE GOLDLIVE=1;";
		$params = array(    
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	// ----------------------------------------------------- INSERT ---------------------------------------------------
	
	public function INSERT($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->ID_DEPARTEMENT = $oMSG->getData("ID_DEPARTEMENT");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->TYPE_ANNONCE = $oMSG->getData("TYPE_ANNONCE");
		$this->DATE_ANNONCE = $oMSG->getData("DATE_ANNONCE");
		$this->DATE_DEBUT = $oMSG->getData("DATE_DEBUT");
		$this->DATE_FIN = $oMSG->getData("DATE_FIN");
		$this->ARTISTES_RECHERCHES = $oMSG->getData("ARTISTES_RECHERCHES");
		$this->BUDGET = $oMSG->getData("BUDGET");
		$this->NB_CONVIVES = $oMSG->getData("NB_CONVIVES");
		$this->DESCRIPTION = $oMSG->getData("DESCRIPTION");
		$this->ADRESSE = $oMSG->getData("ADRESSE");
		$this->CP = $oMSG->getData("CP");
		$this->VILLE = $oMSG->getData("VILLE");
		$this->GOLDLIVE = $oMSG->getData("GOLDLIVE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->STATUT = $oMSG->getData("STATUT");
	
		$this->sql = "INSERT INTO annonce (ID_PERSONNE, ID_DEPARTEMENT, TITRE, TYPE_ANNONCE, DATE_ANNONCE, DATE_DEBUT, DATE_FIN, ARTISTES_RECHERCHES, BUDGET, ".
		"NB_CONVIVES, DESCRIPTION, ADRESSE, CP, VILLE, GOLDLIVE, VISIBLE, STATUT) VALUES(:ID_PERSONNE, :ID_DEPARTEMENT, :TITRE, :TYPE_ANNONCE, :DATE_ANNONCE, :DATE_DEBUT, ".
		":DATE_FIN, :ARTISTES_RECHERCHES, :BUDGET, :NB_CONVIVES, :DESCRIPTION, :ADRESSE, :CP, :VILLE, :GOLDLIVE, :VISIBLE, :STATUT);";

		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":ID_DEPARTEMENT"=>$this->ID_DEPARTEMENT,
					":TITRE"=>$this->TITRE,
					":TYPE_ANNONCE"=>$this->TYPE_ANNONCE,
					":DATE_ANNONCE"=>$this->DATE_ANNONCE,
					":DATE_DEBUT"=>$this->DATE_DEBUT,
					":DATE_FIN"=>$this->DATE_FIN,
					":ARTISTES_RECHERCHES"=>$this->ARTISTES_RECHERCHES,
					":BUDGET"=>$this->BUDGET,
					":NB_CONVIVES"=>$this->NB_CONVIVES,
					":DESCRIPTION"=>$this->DESCRIPTION,
					":ADRESSE"=>$this->ADRESSE,
					":CP"=>$this->CP,
					":VILLE"=>$this->VILLE,
					":GOLDLIVE"=>$this->GOLDLIVE,
					":VISIBLE"=>$this->VISIBLE,
					":STATUT"=>$this->STATUT,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ------------------------------------- UPDATE ---------------------------------
	
	public function UPDATE_by_ID_ANNONCE($oMSG){
		$this->ID_ANNONCE = $oMSG->getData("ID_ANNONCE");
		$this->ID_DEPARTEMENT = $oMSG->getData("ID_DEPARTEMENT");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->TYPE_ANNONCE = $oMSG->getData("TYPE_ANNONCE");
		$this->DATE_DEBUT = $oMSG->getData("DATE_DEBUT");
		$this->DATE_FIN = $oMSG->getData("DATE_FIN");
		$this->ARTISTES_RECHERCHES = $oMSG->getData("ARTISTES_RECHERCHES");
		$this->BUDGET = $oMSG->getData("BUDGET");
		$this->NB_CONVIVES = $oMSG->getData("NB_CONVIVES");
		$this->DESCRIPTION = $oMSG->getData("DESCRIPTION");
		$this->ADRESSE = $oMSG->getData("ADRESSE");
		$this->CP = $oMSG->getData("CP");
		$this->VILLE = $oMSG->getData("VILLE");
		$this->GOLDLIVE = $oMSG->getData("GOLDLIVE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->STATUT = $oMSG->getData("STATUT");
	
		$this->sql = "UPDATE annonce SET ID_DEPARTEMENT=:ID_DEPARTEMENT, TITRE=:TITRE, TYPE_ANNONCE=:TYPE_ANNONCE, DATE_DEBUT=:DATE_DEBUT, DATE_FIN=:DATE_FIN, ".
		"ARTISTES_RECHERCHES=:ARTISTES_RECHERCHES, BUDGET=:BUDGET, NB_CONVIVES=:NB_CONVIVES, DESCRIPTION=:DESCRIPTION, ADRESSE=:ADRESSE, CP=:CP, VILLE=:VILLE, ".
		"GOLDLIVE=:GOLDLIVE, VISIBLE=:VISIBLE, STATUT=:STATUT WHERE ID_ANNONCE=:ID_ANNONCE;";

		$params = array(    
					":ID_ANNONCE"=>$this->ID_ANNONCE,
					":ID_DEPARTEMENT"=>$this->ID_DEPARTEMENT,
					":TITRE"=>$this->TITRE,
					":TYPE_ANNONCE"=>$this->TYPE_ANNONCE,
					":DATE_DEBUT"=>$this->DATE_DEBUT,
					":DATE_FIN"=>$this->DATE_FIN,
					":ARTISTES_RECHERCHES"=>$this->ARTISTES_RECHERCHES,
					":BUDGET"=>$this->BUDGET,
					":NB_CONVIVES"=>$this->NB_CONVIVES,
					":DESCRIPTION"=>$this->DESCRIPTION,
					":ADRESSE"=>$this->ADRESSE,
					":CP"=>$this->CP,
					":VILLE"=>$this->VILLE,
					":GOLDLIVE"=>$this->GOLDLIVE,
					":VISIBLE"=>$this->VISIBLE,
					":STATUT"=>$this->STATUT,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_goldlive_by_ID_ANNONCE($oMSG){
		$this->ID_ANNONCE = $oMSG->getData("ID_ANNONCE");
		$this->GOLDLIVE = $oMSG->getData("GOLDLIVE");

	
		$this->sql = "UPDATE annonce SET GOLDLIVE=:GOLDLIVE WHERE ID_ANNONCE=:ID_ANNONCE;";

		$params = array(    
					":ID_ANNONCE"=>$this->ID_ANNONCE,
					":GOLDLIVE"=>$this->GOLDLIVE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
}<?php
class MPG_commentaire{

	private $ID_COMMENTAIRE;
	private $ID_PERSONNE;
	private $ID_NOUVEAUTE;
	private $CONTENU;
	private $DATE_CREATION;
	private $VISIBLE;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_COMMENTAIRE = "";
		$this->ID_PERSONNE = "";
		$this->ID_NOUVEAUTE = "";
		$this->CONTENU = "";
		$this->DATE_CREATION = "";
		$this->VISIBLE = "";
	}
	
	
	public function SELECT_commentaire_by_ID_COMMENTAIRE($oMSG){
		$this->ID_COMMENTAIRE = $oMSG->getData("ID_COMMENTAIRE");
		
		$this->sql = "SELECT ID_COMMENTAIRE, ID_PERSONNE, ID_NOUVEAUTE, CONTENU, DATE_CREATION, VISIBLE ".
		"FROM commentaire ".
		"WHERE ID_COMMENTAIRE=:ID_COMMENTAIRE ".
		"ORDER BY DATE_CREATION DESC;";
		
		$params = array(
				":ID_COMMENTAIRE"=>$this->ID_COMMENTAIRE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	public function SELECT_COUNT_tous_commentaires_by_ID_NOUVEAUTE($oMSG){
		$this->ID_NOUVEAUTE = $oMSG->getData("ID_NOUVEAUTE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "SELECT COUNT(ID_COMMENTAIRE) AS nb_commentaire FROM commentaire ".
		"WHERE ID_NOUVEAUTE=:ID_NOUVEAUTE AND VISIBLE=:VISIBLE;";
		
		$params = array(
				":ID_NOUVEAUTE"=>$this->ID_NOUVEAUTE,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	
	// -------------------------------------------------- INSERT -------------------------------------
	
	public function INSERT($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->ID_NOUVEAUTE = $oMSG->getData("ID_NOUVEAUTE");
		$this->CONTENU = $oMSG->getData("CONTENU");
		$this->DATE_CREATION = $oMSG->getData("DATE_CREATION");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "INSERT INTO commentaire (ID_PERSONNE, ID_NOUVEAUTE, CONTENU, DATE_CREATION, VISIBLE) ".
		"VALUES (:ID_PERSONNE, :ID_NOUVEAUTE, :CONTENU, :DATE_CREATION, :VISIBLE);";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
				":ID_NOUVEAUTE"=>$this->ID_NOUVEAUTE,
				":CONTENU"=>$this->CONTENU,
				":DATE_CREATION"=>$this->DATE_CREATION,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	public function UPDATE_chacher_commentaire($oMSG){
		$this->ID_COMMENTAIRE = $oMSG->getData("ID_COMMENTAIRE");
		$this->ID_NOUVEAUTE = $oMSG->getData("ID_NOUVEAUTE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "UPDATE commentaire SET VISIBLE=:VISIBLE WHERE ID_COMMENTAIRE=:ID_COMMENTAIRE AND ID_NOUVEAUTE=:ID_NOUVEAUTE";
		
		$params = array(
				":ID_COMMENTAIRE"=>$this->ID_COMMENTAIRE,
				":ID_NOUVEAUTE"=>$this->ID_NOUVEAUTE,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
}
?><?php
class MPG_contrat{

	private $ID_CONTRAT;
	private $ID_ANNONCE;
	private $DATE_CONTRAT;
	private $STATUT_CONTRAT;
	private $URL_CONTRAT_PDF;
	private $DATE_EVALUATION;
	private $DESCRIPTION;
	private $DATE_DEBUT;
	private $DATE_FIN;
	private $PRIX;
	private $GOLDLIVE;
	private $DESTINATAIRE;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_CONTRAT = "";
	$this->ID_ANNONCE = "";
	$this->DATE_CONTRAT = "";
	$this->STATUT_CONTRAT = "";
	$this->URL_CONTRAT_PDF = "";
	$this->DATE_EVALUATION = "";
	$this->DESCRIPTION = "";
	$this->DATE_DEBUT = "";
	$this->DATE_FIN = "";
	$this->PRIX = "";
	$this->GOLDLIVE = "";
	$this->DESTINATAIRE = "";
	}
	
	
	public function SELECT_COUNT_ID_CONTRAT_by_ID_ANNONCE($oMSG){
		$this->ID_ANNONCE = $oMSG->getData('ID_ANNONCE');
	
		$this->sql = "SELECT COUNT(ID_CONTRAT) as nb_contrat FROM contrat WHERE ID_ANNONCE=:ID_ANNONCE;";
		
		$params = array(  
					':ID_ANNONCE' =>$this->ID_ANNONCE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_CONTRAT_by_ID_CONTRAT_et_DESTINATAIRE($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->DESTINATAIRE = $oMSG->getData('DESTINATAIRE');
	
		$this->sql = "SELECT COUNT(ID_CONTRAT) as nb_contrat FROM contrat WHERE ID_CONTRAT=:ID_CONTRAT AND DESTINATAIRE=:DESTINATAIRE;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':DESTINATAIRE' =>$this->DESTINATAIRE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
		
	public function SELECT_COUNT_by_STATUT($oMSG){
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
	
		$this->sql = "SELECT COUNT(ID_CONTRAT) as nb_contrat FROM contrat WHERE STATUT_CONTRAT=:STATUT_CONTRAT;";
		
		$params = array(  
					':STATUT_CONTRAT' =>$this->STATUT_CONTRAT,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
		
	public function SELECT_COUNT_all($oMSG){
	
		$this->sql = "SELECT COUNT(ID_CONTRAT) as nb_contrat FROM contrat;";
		
		$params = array(  
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// --------------------------------------------- INSERT -----------------------------------------
	
	public function INSERT($oMSG){
		$this->ID_ANNONCE = $oMSG->getData('ID_ANNONCE');
		$this->DATE_CONTRAT = $oMSG->getData('DATE_CONTRAT');
		$this->DATE_DEBUT = $oMSG->getData('DATE_DEBUT');
		$this->DATE_FIN = $oMSG->getData('DATE_FIN');
		$this->PRIX = $oMSG->getData('PRIX');
		$this->DESCRIPTION = $oMSG->getData('DESCRIPTION');
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
		$this->DESTINATAIRE = $oMSG->getData('DESTINATAIRE');
	
		$this->sql = "INSERT INTO contrat (ID_ANNONCE, DATE_CONTRAT, STATUT_CONTRAT, DESCRIPTION, DATE_DEBUT, DATE_FIN, PRIX, DESTINATAIRE) ".
		"VALUES (:ID_ANNONCE, :DATE_CONTRAT, :STATUT_CONTRAT, :DESCRIPTION, :DATE_DEBUT, :DATE_FIN, :PRIX, :DESTINATAIRE);";
		
		$params = array(  
					':ID_ANNONCE' =>$this->ID_ANNONCE,		
					':DATE_CONTRAT' =>$this->DATE_CONTRAT,		
					':DATE_DEBUT' =>$this->DATE_DEBUT,		
					':DATE_FIN' =>$this->DATE_FIN,		
					':PRIX' =>$this->PRIX,		
					':DESCRIPTION' =>$this->DESCRIPTION,		
					':STATUT_CONTRAT' =>$this->STATUT_CONTRAT,		
					':DESTINATAIRE' =>$this->DESTINATAIRE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// --------------------------------------------- UPDATE -----------------------------------------
	
	public function UPDATE_refus($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->DATE_DEBUT = $oMSG->getData('DATE_DEBUT');
		$this->DATE_FIN = $oMSG->getData('DATE_FIN');
		$this->PRIX = $oMSG->getData('PRIX');
		$this->DESCRIPTION = $oMSG->getData('DESCRIPTION');
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
		$this->DESTINATAIRE = $oMSG->getData('DESTINATAIRE');
	
		$this->sql = "UPDATE contrat SET DATE_DEBUT=:DATE_DEBUT, DATE_FIN=:DATE_FIN, PRIX=:PRIX, DESCRIPTION=:DESCRIPTION, DESTINATAIRE=:DESTINATAIRE, ".
		"STATUT_CONTRAT=:STATUT_CONTRAT WHERE ID_CONTRAT=:ID_CONTRAT;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':DATE_DEBUT' =>$this->DATE_DEBUT,		
					':DATE_FIN' =>$this->DATE_FIN,		
					':PRIX' =>$this->PRIX,		
					':DESCRIPTION' =>$this->DESCRIPTION,		
					':STATUT_CONTRAT' =>$this->STATUT_CONTRAT,		
					':DESTINATAIRE' =>$this->DESTINATAIRE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_statut_by_ID_CONTRAT($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
	
		$this->sql = "UPDATE contrat SET STATUT_CONTRAT=:STATUT_CONTRAT WHERE ID_CONTRAT=:ID_CONTRAT;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':STATUT_CONTRAT' =>$this->STATUT_CONTRAT,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_validation($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->STATUT_CONTRAT = $oMSG->getData('STATUT_CONTRAT');
		$this->URL_CONTRAT_PDF = $oMSG->getData('URL_CONTRAT_PDF');
	
		$this->sql = "UPDATE contrat SET STATUT_CONTRAT=:STATUT_CONTRAT, URL_CONTRAT_PDF=:URL_CONTRAT_PDF WHERE ID_CONTRAT=:ID_CONTRAT;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':STATUT_CONTRAT' =>$this->STATUT_CONTRAT,		
					':URL_CONTRAT_PDF' =>$this->URL_CONTRAT_PDF,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_DATE_EVALUATION_by_ID_CONTRAT($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->DATE_EVALUATION = $oMSG->getData('DATE_EVALUATION');
	
		$this->sql = "UPDATE contrat SET DATE_EVALUATION=:DATE_EVALUATION WHERE ID_CONTRAT=:ID_CONTRAT;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':DATE_EVALUATION' =>$this->DATE_EVALUATION,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
		
}<?php
class MPG_contrat_personne{

	private $ID_CONTRAT;
	private $ID_PERSONNE;

	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_CONTRAT = "";
	$this->ID_PERSONNE = "";

	}
	
	
	// --------------------------------------------- SELECT -----------------------------------------
	
	public function SELECT_COUNT_ID_CONTRAT_by_ID_CONTRAT_et_ID_PERSONNE($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
	
		$this->sql = "SELECT COUNT(ID_CONTRAT) as nb_contrat FROM contrat_personne WHERE ID_CONTRAT=:ID_CONTRAT AND ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
	
		$this->sql = "SELECT ID_PERSONNE FROM contrat_personne WHERE ID_CONTRAT=:ID_CONTRAT AND ID_PERSONNE<>:ID_PERSONNE;";#/!\ <>
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// --------------------------------------------- INSERT -----------------------------------------
	
	public function INSERT($oMSG){
		$this->ID_CONTRAT = $oMSG->getData('ID_CONTRAT');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
	
		$this->sql = "INSERT INTO contrat_personne (ID_CONTRAT, ID_PERSONNE) VALUES (:ID_CONTRAT, :ID_PERSONNE);";
		
		$params = array(  
					':ID_CONTRAT' =>$this->ID_CONTRAT,		
					':ID_PERSONNE' =>$this->ID_PERSONNE,		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php
class MPG_departement{

	private $ID_DEPARTEMENT;
	private $ID_REGION;
	private $NOM;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_DEPARTEMENT = "";
	$this->ID_REGION = "";
	$this->NOM = "";

	}
	
	
	public function SELECT_all($oMSG){
	
		$this->sql = "SELECT ID_DEPARTEMENT, ID_REGION, NOM FROM departement ORDER BY ID_DEPARTEMENT;";
		$params = array(    
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
}<?php
class MPG_evaluation{

	private $ID_EVALUATION;
	private $ID_CONTRAT;
	private $EVALUATION;
	private $COMMENTAIRE;
	private $TYPE_EVALUATION;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_EVALUATION = "";
	$this->ID_CONTRAT = "";
	$this->EVALUATION = "";
	$this->COMMENTAIRE = "";
	$this->TYPE_EVALUATION = "";
	}
	
	
	// ------------------------------------------------------- SELECT ---------------------------------------------------------
	
	
	
	public function SELECT_COUNT_ID_EVALUATION_by_ID_CONTRAT($oMSG){
		$this->ID_CONTRAT = $oMSG->getData("ID_CONTRAT");
	
		$this->sql = "SELECT COUNT(ID_EVALUATION) as nb_evaluation FROM evaluation WHERE ID_CONTRAT=:ID_CONTRAT;";
		$params = array(    
					":ID_CONTRAT"=>$this->ID_CONTRAT,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_evaluations_by_ID_CONTRAT($oMSG){
		$this->ID_CONTRAT = $oMSG->getData("ID_CONTRAT");
	
		$this->sql = "SELECT ID_EVALUATION, ID_CONTRAT, EVALUATION, COMMENTAIRE, TYPE_EVALUATION ".
		"FROM evaluation WHERE ID_CONTRAT=:ID_CONTRAT;";
		$params = array(    
					":ID_CONTRAT"=>$this->ID_CONTRAT,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);

		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_EVALUATION_by_ID_CONTRAT_et_TYPE_EVALUATION($oMSG){
		$this->ID_CONTRAT = $oMSG->getData("ID_CONTRAT");
		$this->TYPE_EVALUATION = $oMSG->getData("TYPE_EVALUATION");
	
		$this->sql = "SELECT COUNT(ID_EVALUATION) as nb_evaluation FROM evaluation WHERE ID_CONTRAT=:ID_CONTRAT AND TYPE_EVALUATION=:TYPE_EVALUATION;";
		$params = array(    
					":ID_CONTRAT"=>$this->ID_CONTRAT,
					":TYPE_EVALUATION"=>$this->TYPE_EVALUATION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_evaluations_by_ID_CONTRAT_et_TYPE_EVALUATION($oMSG){
		$this->ID_CONTRAT = $oMSG->getData("ID_CONTRAT");
		$this->TYPE_EVALUATION = $oMSG->getData("TYPE_EVALUATION");
	
		$this->sql = "SELECT ID_EVALUATION, ID_CONTRAT, EVALUATION, COMMENTAIRE, TYPE_EVALUATION ".
		"FROM evaluation WHERE ID_CONTRAT=:ID_CONTRAT AND TYPE_EVALUATION=:TYPE_EVALUATION;";
		$params = array(    
					":ID_CONTRAT"=>$this->ID_CONTRAT,
					":TYPE_EVALUATION"=>$this->TYPE_EVALUATION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	// ------------------------------------------------------- INSERT ---------------------------------------------------------
	
	
	public function INSERT($oMSG){
		$this->ID_CONTRAT = $oMSG->getData("ID_CONTRAT");
		$this->EVALUATION = $oMSG->getData("EVALUATION");
		$this->COMMENTAIRE = $oMSG->getData("COMMENTAIRE");
		$this->TYPE_EVALUATION = $oMSG->getData("TYPE_EVALUATION");
	
		$this->sql = "INSERT INTO evaluation (ID_CONTRAT, EVALUATION, COMMENTAIRE, TYPE_EVALUATION) ".
		"VALUES (:ID_CONTRAT, :EVALUATION, :COMMENTAIRE, :TYPE_EVALUATION);";
		$params = array(    
					":ID_CONTRAT"=>$this->ID_CONTRAT,
					":EVALUATION"=>$this->EVALUATION,
					":COMMENTAIRE"=>$this->COMMENTAIRE,
					":TYPE_EVALUATION"=>$this->TYPE_EVALUATION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	// ------------------------------------------------------- UPDATE ---------------------------------------------------------
	
	
	public function UPDATE($oMSG){
		$this->ID_CONTRAT = $oMSG->getData("ID_CONTRAT");
		$this->EVALUATION = $oMSG->getData("EVALUATION");
		$this->COMMENTAIRE = $oMSG->getData("COMMENTAIRE");
		$this->TYPE_EVALUATION = $oMSG->getData("TYPE_EVALUATION");
	
		$this->sql = "UPDATE evaluation SET EVALUATION=:EVALUATION, COMMENTAIRE=:COMMENTAIRE ".
		"WHERE ID_CONTRAT=:ID_CONTRAT AND TYPE_EVALUATION=:TYPE_EVALUATION;";
		$params = array(    
					":ID_CONTRAT"=>$this->ID_CONTRAT,
					":EVALUATION"=>$this->EVALUATION,
					":COMMENTAIRE"=>$this->COMMENTAIRE,
					":TYPE_EVALUATION"=>$this->TYPE_EVALUATION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php
class MPG_famille_types{

	private $ID_FAMILLE_TYPES;
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_FAMILLE_TYPES = "";
	}
	
}<?php
class MPG_message{

	private $ID_MESSAGE;
	private $TITRE;
	private $CONTENU;
	private $DATE_ENVOI;
	private $EXPEDITEUR;
	private $DESTINATAIRE;
	private $TYPE_MESSAGE;
	private $VISIBLE;
	
	public function __construct(){
		$this->ID_MESSAGE="";
		$this->TITRE="";
		$this->CONTENU="";
		$this->DATE_ENVOI="";
		$this->EXPEDITEUR="";
		$this->DESTINATAIRE="";
		$this->TYPE_MESSAGE="";
		$this->VISIBLE="";
	
	}
	
	// ----------------------------------------------------- INSERT ---------------------------------------------------------
	
	public function INSERT($oMSG){
		$this->TITRE = $oMSG->getData('TITRE');
		$this->CONTENU = $oMSG->getData('CONTENU');
		$this->DATE_ENVOI = $oMSG->getData('DATE_ENVOI');
		$this->EXPEDITEUR = $oMSG->getData('EXPEDITEUR');
		$this->DESTINATAIRE = $oMSG->getData('DESTINATAIRE');
		$this->TYPE_MESSAGE = $oMSG->getData('TYPE_MESSAGE');
		$this->VISIBLE = $oMSG->getData('VISIBLE');
	
		$this->sql = "INSERT INTO message (TITRE, CONTENU, DATE_ENVOI, EXPEDITEUR, DESTINATAIRE, TYPE_MESSAGE, VISIBLE) ".
		"VALUES (:TITRE, :CONTENU, :DATE_ENVOI, :EXPEDITEUR, :DESTINATAIRE, :TYPE_MESSAGE, :VISIBLE);";
		
		$params = array(
					':TITRE'=>$this->TITRE,
					':CONTENU'=>$this->CONTENU,
					':DATE_ENVOI'=>$this->DATE_ENVOI,
					':EXPEDITEUR'=>$this->EXPEDITEUR,
					':DESTINATAIRE'=>$this->DESTINATAIRE,
					':TYPE_MESSAGE'=>$this->TYPE_MESSAGE,
					':VISIBLE'=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
}<?php
class MPG_message_personne{

	private $ID_MESSAGE;
	private $ID_PERSONNE;
	private $STATUT_MESSAGE;
	private $DATE_LECTURE;
	private $DATE_REPONSE;

	
	public function __construct(){
		$this->ID_MESSAGE="";
		$this->ID_PERSONNE="";
		$this->STATUT_MESSAGE="";
		$this->DATE_LECTURE="";
		$this->DATE_REPONSE="";	
	}
	
	// ----------------------------------------------------- SELECT -----------------------------------------------
	
	public function SELECT_COUNT_message_by_ID_MESSAGE_et_ID_PERSONNE($oMSG){
		$this->ID_MESSAGE = $oMSG->getData('ID_MESSAGE');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		
		$this->sql = "SELECT COUNT(ID_MESSAGE) as nb_message FROM message_personne WHERE ID_MESSAGE=:ID_MESSAGE AND ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(
					':ID_MESSAGE'=>$this->ID_MESSAGE,
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ----------------------------------------------------- INSERT -----------------------------------------------
	
	public function INSERT($oMSG){
		$this->ID_MESSAGE = $oMSG->getData('ID_MESSAGE');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->STATUT_MESSAGE = $oMSG->getData('STATUT_MESSAGE');
		
		$this->sql = "INSERT INTO message_personne (ID_MESSAGE, ID_PERSONNE, STATUT_MESSAGE) ".
		"VALUES (:ID_MESSAGE, :ID_PERSONNE, :STATUT_MESSAGE);";
		
		$params = array(
					':ID_MESSAGE'=>$this->ID_MESSAGE,
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					':STATUT_MESSAGE'=>$this->STATUT_MESSAGE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ----------------------------------------------------- UPDATE -----------------------------------------------
	
	public function UPDATE_message_lu_by_ID_MESSAGE_et_ID_PERSONNE($oMSG){
		$this->ID_MESSAGE = $oMSG->getData('ID_MESSAGE');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->DATE_LECTURE = $oMSG->getData('DATE_LECTURE');
		$this->STATUT_MESSAGE = $oMSG->getData('STATUT_MESSAGE');
		
		$this->sql = "UPDATE message_personne SET DATE_LECTURE=:DATE_LECTURE, STATUT_MESSAGE=:STATUT_MESSAGE WHERE ID_MESSAGE=:ID_MESSAGE ".
		"AND ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(
					':ID_MESSAGE'=>$this->ID_MESSAGE,
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					':DATE_LECTURE'=>$this->DATE_LECTURE,
					':STATUT_MESSAGE'=>$this->STATUT_MESSAGE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_message_supprime_by_ID_MESSAGE_et_ID_PERSONNE($oMSG){
		$this->ID_MESSAGE = $oMSG->getData('ID_MESSAGE');
		$this->ID_PERSONNE = $oMSG->getData('ID_PERSONNE');
		$this->STATUT_MESSAGE = $oMSG->getData('STATUT_MESSAGE');
		
		$this->sql = "UPDATE message_personne SET STATUT_MESSAGE=:STATUT_MESSAGE WHERE ID_MESSAGE=:ID_MESSAGE AND ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(
					':ID_MESSAGE'=>$this->ID_MESSAGE,
					':ID_PERSONNE'=>$this->ID_PERSONNE,
					':STATUT_MESSAGE'=>$this->STATUT_MESSAGE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
}<?php
class MPG_nouveaute{

	private $ID_NOUVEAUTE;
	private $AUTEUR;
	private $TITRE;
	private $ENTETE;
	private $CONTENU;
	private $URL_PHOTO;
	private $DATE_CREATION;
	private $VISIBLE;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_NOUVEAUTE = "";
		$this->AUTEUR = "";
		$this->TITRE = "";
		$this->ENTETE = "";
		$this->CONTENU = "";
		$this->URL_PHOTO = "";
		$this->DATE_CREATION = "";
		$this->VISIBLE = "";
	}
	
	
	public function SELECT_COUNT_nouveaute_by_VISIBLE($oMSG){
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "SELECT COUNT(ID_NOUVEAUTE) AS nb_nouveautees FROM nouveaute WHERE VISIBLE=:VISIBLE;";
		
		$params = array(
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_nouveautees_by_VISIBLE($oMSG){
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$debut_affichage = $oMSG->getData('debut_affichage');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		
		$this->sql = "SELECT ID_NOUVEAUTE, AUTEUR, TITRE, ENTETE, CONTENU, URL_PHOTO, DATE_CREATION, VISIBLE ".
		"FROM nouveaute ".
		"WHERE VISIBLE=:VISIBLE ".
		"ORDER BY DATE_CREATION DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_nouveautee_by_ID_NOUVEAUTE_and_VISIBLE($oMSG){
		$this->ID_NOUVEAUTE = $oMSG->getData("ID_NOUVEAUTE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "SELECT ID_NOUVEAUTE, AUTEUR, TITRE, ENTETE, CONTENU, URL_PHOTO, DATE_CREATION, VISIBLE ".
		"FROM nouveaute ".
		"WHERE ID_NOUVEAUTE=:ID_NOUVEAUTE AND VISIBLE=:VISIBLE;";
		
		$params = array(
				":ID_NOUVEAUTE"=>$this->ID_NOUVEAUTE,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_nouveautee_by_ID_NOUVEAUTE($oMSG){
		$this->ID_NOUVEAUTE = $oMSG->getData("ID_NOUVEAUTE");
		
		$this->sql = "SELECT ID_NOUVEAUTE, AUTEUR, TITRE, ENTETE, CONTENU, URL_PHOTO, DATE_CREATION, VISIBLE ".
		"FROM nouveaute ".
		"WHERE ID_NOUVEAUTE=:ID_NOUVEAUTE;";
		
		$params = array(
				":ID_NOUVEAUTE"=>$this->ID_NOUVEAUTE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_toutes_nouveautes($oMSG){
		
		$this->sql = "SELECT COUNT(ID_NOUVEAUTE) AS nb_nouveautees FROM nouveaute;";
		
		$params = array(
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_nouveautees($oMSG){
		$debut_affichage = $oMSG->getData('debut_affichage');
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		
		$this->sql = "SELECT ID_NOUVEAUTE, AUTEUR, TITRE, ENTETE, CONTENU, URL_PHOTO, DATE_CREATION, VISIBLE ".
		"FROM nouveaute ".
		"ORDER BY DATE_CREATION DESC ".
		"LIMIT $debut_affichage, $nb_result_affiches;";
		
		$params = array(
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	// -------------------------------------------------- INSERT -------------------------------------
	
	public function INSERT($oMSG){
		$this->AUTEUR = $oMSG->getData("AUTEUR");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->ENTETE = $oMSG->getData("ENTETE");
		$this->CONTENU = $oMSG->getData("CONTENU");
		$this->URL_PHOTO = $oMSG->getData("URL_PHOTO");
		$this->DATE_CREATION = $oMSG->getData("DATE_CREATION");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "INSERT INTO nouveaute (AUTEUR, TITRE, ENTETE, CONTENU, URL_PHOTO, DATE_CREATION, VISIBLE) ".
		"VALUES (:AUTEUR, :TITRE, :ENTETE, :CONTENU, :URL_PHOTO, :DATE_CREATION, :VISIBLE);";
		
		$params = array(
				":AUTEUR"=>$this->AUTEUR,
				":TITRE"=>$this->TITRE,
				":ENTETE"=>$this->ENTETE,
				":CONTENU"=>$this->CONTENU,
				":URL_PHOTO"=>$this->URL_PHOTO,
				":DATE_CREATION"=>$this->DATE_CREATION,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	public function UPDATE($oMSG){
		$this->ID_NOUVEAUTE = $oMSG->getData("ID_NOUVEAUTE");
		$this->AUTEUR = $oMSG->getData("AUTEUR");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->ENTETE = $oMSG->getData("ENTETE");
		$this->CONTENU = $oMSG->getData("CONTENU");
		$this->URL_PHOTO = $oMSG->getData("URL_PHOTO");
		$this->DATE_CREATION = $oMSG->getData("DATE_CREATION");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "UPDATE nouveaute SET AUTEUR=:AUTEUR, TITRE=:TITRE, ENTETE=:ENTETE, CONTENU=:CONTENU, URL_PHOTO=:URL_PHOTO, ".
		"DATE_CREATION=:DATE_CREATION, VISIBLE=:VISIBLE ".
		"WHERE ID_NOUVEAUTE=:ID_NOUVEAUTE";
		
		$params = array(
				":ID_NOUVEAUTE"=>$this->ID_NOUVEAUTE,
				":AUTEUR"=>$this->AUTEUR,
				":TITRE"=>$this->TITRE,
				":ENTETE"=>$this->ENTETE,
				":CONTENU"=>$this->CONTENU,
				":URL_PHOTO"=>$this->URL_PHOTO,
				":DATE_CREATION"=>$this->DATE_CREATION,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
}
?><?php
class MPG_pack{

	private $ID_PACK;
	private $NOM;
	private $DESCRIPTION;
	private $TYPE_PACK;
	private $PRIX_BASE;
	private $DUREE;
	private $SOUMIS_REDUCTIONS_PARRAINAGE;
	private $GAIN_PARRAINAGE_MAX;
	private $REDUCTION;
	private $VISIBLE;
	private $CV_VISIBILITE;
	private $CV_ACCESSIBLE;
	private $NB_FICHES_VISITABLES;
	private $CV_VIDEO_ACCESSIBLE;
	private $ALERTE_NON_DISPONIBILITE;
	private $NB_DEPARTEMENTS_ALERTE;
	private $PARRAINAGE_ACTIVE;
	private $PREVISUALISATION_FICHES;
	private $CONTRATS_PDF;
	private $SUIVI;
	private $PUBS;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_PACK = "";
		$this->NOM = "";
		$this->DESCRIPTION = "";
		$this->TYPE_PACK = "";
		$this->PRIX_BASE = "";
		$this->DUREE = "";
		$this->SOUMIS_REDUCTIONS_PARRAINAGE = "";
		$this->GAIN_PARRAINAGE_MAX = "";
		$this->REDUCTION = "";
		$this->VISIBLE = "";
		$this->CV_VISIBILITE = "";
		$this->CV_ACCESSIBLE = "";
		$this->NB_FICHES_VISITABLES = "";
		$this->CV_VIDEO_ACCESSIBLE = "";
		$this->ALERTE_NON_DISPONIBILITE = "";
		$this->NB_DEPARTEMENTS_ALERTE = "";
		$this->PARRAINAGE_ACTIVE = "";
		$this->PREVISUALISATION_FICHES = "";
		$this->CONTRATS_PDF = "";
		$this->SUIVI = "";
		$this->PUBS = "";
	}
	
	public function SELECT_COUNT_all_packs($oMSG){

		$this->sql = "SELECT COUNT(ID_PACK) AS nb_packs from pack;";
		
		$params = array(
		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_PACK_by_VISIBLE($oMSG){
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "SELECT COUNT(ID_PACK) AS nb_packs from pack WHERE VISIBLE=:VISIBLE;";
		
		$params = array(
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_by_ID_PACK($oMSG){		
		$this->ID_PACK = $oMSG->getData("ID_PACK");
		
		$this->sql = "SELECT * from pack WHERE ID_PACK=:ID_PACK;";
		
		$params = array(
				":ID_PACK"=>$this->ID_PACK,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_minimum($oMSG){		
		$this->sql = "SELECT ID_PACK, NOM, TYPE_PACK, PRIX_BASE, DUREE, VISIBLE from pack ORDER BY PRIX_BASE DESC;";
		
		$params = array(
		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_by_VISIBLE($oMSG){	
		$this->VISIBLE = $oMSG->getData("VISIBLE");
	
		$this->sql = "SELECT * from pack WHERE VISIBLE=:VISIBLE ORDER BY PRIX_BASE DESC;";
		
		$params = array(
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_ALL_by_TYPE_PACK_et_LIMIT($oMSG){		
		$this->TYPE_PACK = $oMSG->getData("TYPE_PACK");
		$limit = $oMSG->getData("limit");
		
		$this->sql = "SELECT * from pack WHERE TYPE_PACK=:TYPE_PACK $limit;";
		
		$params = array(
				":TYPE_PACK"=>$this->TYPE_PACK,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// --------------------------------------------------- INSERT ---------------------------------------------------
	
	public function INSERT($oMSG){
		$this->NOM = $oMSG->getData("NOM");
		$this->DESCRIPTION = $oMSG->getData("DESCRIPTION");
		$this->TYPE_PACK = $oMSG->getData("TYPE_PACK");
		$this->PRIX_BASE = $oMSG->getData("PRIX_BASE");
		$this->DUREE = $oMSG->getData("DUREE");
		$this->SOUMIS_REDUCTIONS_PARRAINAGE = $oMSG->getData("SOUMIS_REDUCTIONS_PARRAINAGE");
		$this->GAIN_PARRAINAGE_MAX = $oMSG->getData("GAIN_PARRAINAGE_MAX");
		$this->REDUCTION = $oMSG->getData("REDUCTION");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->CV_VISIBILITE = $oMSG->getData("CV_VISIBILITE");
		$this->CV_ACCESSIBLE = $oMSG->getData("CV_ACCESSIBLE");
		$this->NB_FICHES_VISITABLES = $oMSG->getData("NB_FICHES_VISITABLES");
		$this->CV_VIDEO_ACCESSIBLE = $oMSG->getData("CV_VIDEO_ACCESSIBLE");
		$this->ALERTE_NON_DISPONIBILITE = $oMSG->getData("ALERTE_NON_DISPONIBILITE");
		$this->NB_DEPARTEMENTS_ALERTE = $oMSG->getData("NB_DEPARTEMENTS_ALERTE");
		$this->PARRAINAGE_ACTIVE = $oMSG->getData("PARRAINAGE_ACTIVE");
		$this->PREVISUALISATION_FICHES = $oMSG->getData("PREVISUALISATION_FICHES");
		$this->CONTRATS_PDF = $oMSG->getData("CONTRATS_PDF");
		$this->SUIVI = $oMSG->getData("SUIVI");
		$this->PUBS = $oMSG->getData("PUBS");
	
		$this->sql = "INSERT INTO pack (NOM, DESCRIPTION, TYPE_PACK, PRIX_BASE, DUREE, SOUMIS_REDUCTIONS_PARRAINAGE, GAIN_PARRAINAGE_MAX, REDUCTION, ".
		"VISIBLE, CV_VISIBILITE, CV_ACCESSIBLE, NB_FICHES_VISITABLES, CV_VIDEO_ACCESSIBLE, ALERTE_NON_DISPONIBILITE, NB_DEPARTEMENTS_ALERTE, ".
		"PARRAINAGE_ACTIVE, PREVISUALISATION_FICHES, CONTRATS_PDF, SUIVI, PUBS) ".
		"VALUES (:NOM, :DESCRIPTION, :TYPE_PACK, :PRIX_BASE, :DUREE, :SOUMIS_REDUCTIONS_PARRAINAGE, :GAIN_PARRAINAGE_MAX, :REDUCTION, :VISIBLE, :CV_VISIBILITE, ".
		":CV_ACCESSIBLE, :NB_FICHES_VISITABLES, :CV_VIDEO_ACCESSIBLE, :ALERTE_NON_DISPONIBILITE, :NB_DEPARTEMENTS_ALERTE, :PARRAINAGE_ACTIVE, ".
		":PREVISUALISATION_FICHES, :CONTRATS_PDF, :SUIVI, :PUBS);";
		
		$params = array(    
					":NOM"=>$this->NOM,
					":DESCRIPTION"=>$this->DESCRIPTION,
					":TYPE_PACK"=>$this->TYPE_PACK,
					":PRIX_BASE"=>$this->PRIX_BASE,
					":DUREE"=>$this->DUREE,
					":SOUMIS_REDUCTIONS_PARRAINAGE"=>$this->SOUMIS_REDUCTIONS_PARRAINAGE,
					":GAIN_PARRAINAGE_MAX"=>$this->GAIN_PARRAINAGE_MAX,
					":REDUCTION"=>$this->REDUCTION,
					":VISIBLE"=>$this->VISIBLE,
					":CV_VISIBILITE"=>$this->CV_VISIBILITE,
					":CV_ACCESSIBLE"=>$this->CV_ACCESSIBLE,
					":NB_FICHES_VISITABLES"=>$this->NB_FICHES_VISITABLES,
					":CV_VIDEO_ACCESSIBLE"=>$this->CV_VIDEO_ACCESSIBLE,
					":ALERTE_NON_DISPONIBILITE"=>$this->ALERTE_NON_DISPONIBILITE,
					":NB_DEPARTEMENTS_ALERTE"=>$this->NB_DEPARTEMENTS_ALERTE,
					":PARRAINAGE_ACTIVE"=>$this->PARRAINAGE_ACTIVE,
					":PREVISUALISATION_FICHES"=>$this->PREVISUALISATION_FICHES,
					":CONTRATS_PDF"=>$this->CONTRATS_PDF,
					":SUIVI"=>$this->SUIVI,
					":PUBS"=>$this->PUBS,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// --------------------------------------------------- UPDATE  -----------------------------------------------------
	
	public function UPDATE($oMSG){
		$this->ID_PACK = $oMSG->getData("ID_PACK");
		$this->NOM = $oMSG->getData("NOM");
		$this->DESCRIPTION = $oMSG->getData("DESCRIPTION");
		$this->TYPE_PACK = $oMSG->getData("TYPE_PACK");
		$this->PRIX_BASE = $oMSG->getData("PRIX_BASE");
		$this->DUREE = $oMSG->getData("DUREE");
		$this->SOUMIS_REDUCTIONS_PARRAINAGE = $oMSG->getData("SOUMIS_REDUCTIONS_PARRAINAGE");
		$this->GAIN_PARRAINAGE_MAX = $oMSG->getData("GAIN_PARRAINAGE_MAX");
		$this->REDUCTION = $oMSG->getData("REDUCTION");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->CV_VISIBILITE = $oMSG->getData("CV_VISIBILITE");
		$this->CV_ACCESSIBLE = $oMSG->getData("CV_ACCESSIBLE");
		$this->NB_FICHES_VISITABLES = $oMSG->getData("NB_FICHES_VISITABLES");
		$this->CV_VIDEO_ACCESSIBLE = $oMSG->getData("CV_VIDEO_ACCESSIBLE");
		$this->ALERTE_NON_DISPONIBILITE = $oMSG->getData("ALERTE_NON_DISPONIBILITE");
		$this->NB_DEPARTEMENTS_ALERTE = $oMSG->getData("NB_DEPARTEMENTS_ALERTE");
		$this->PARRAINAGE_ACTIVE = $oMSG->getData("PARRAINAGE_ACTIVE");
		$this->PREVISUALISATION_FICHES = $oMSG->getData("PREVISUALISATION_FICHES");
		$this->CONTRATS_PDF = $oMSG->getData("CONTRATS_PDF");
		$this->SUIVI = $oMSG->getData("SUIVI");
		$this->PUBS = $oMSG->getData("PUBS");
	
		$this->sql = "UPDATE pack SET NOM=:NOM, DESCRIPTION=:DESCRIPTION, TYPE_PACK=:TYPE_PACK, PRIX_BASE=:PRIX_BASE, DUREE=:DUREE, ".
		"SOUMIS_REDUCTIONS_PARRAINAGE=:SOUMIS_REDUCTIONS_PARRAINAGE, GAIN_PARRAINAGE_MAX=:GAIN_PARRAINAGE_MAX, REDUCTION=:REDUCTION, ".
		"VISIBLE=:VISIBLE, CV_VISIBILITE=:CV_VISIBILITE, CV_ACCESSIBLE=:CV_ACCESSIBLE, NB_FICHES_VISITABLES=:NB_FICHES_VISITABLES, ".
		"CV_VIDEO_ACCESSIBLE=:CV_VIDEO_ACCESSIBLE, ALERTE_NON_DISPONIBILITE=:ALERTE_NON_DISPONIBILITE, NB_DEPARTEMENTS_ALERTE=:NB_DEPARTEMENTS_ALERTE, ".
		"PARRAINAGE_ACTIVE=:PARRAINAGE_ACTIVE, PREVISUALISATION_FICHES=:PREVISUALISATION_FICHES, CONTRATS_PDF=:CONTRATS_PDF, SUIVI=:SUIVI, PUBS=:PUBS ".
		"WHERE ID_PACK=:ID_PACK;";
		
		$params = array(    
					":ID_PACK"=>$this->ID_PACK,
					":NOM"=>$this->NOM,
					":DESCRIPTION"=>$this->DESCRIPTION,
					":TYPE_PACK"=>$this->TYPE_PACK,
					":PRIX_BASE"=>$this->PRIX_BASE,
					":DUREE"=>$this->DUREE,
					":SOUMIS_REDUCTIONS_PARRAINAGE"=>$this->SOUMIS_REDUCTIONS_PARRAINAGE,
					":GAIN_PARRAINAGE_MAX"=>$this->GAIN_PARRAINAGE_MAX,
					":REDUCTION"=>$this->REDUCTION,
					":VISIBLE"=>$this->VISIBLE,
					":CV_VISIBILITE"=>$this->CV_VISIBILITE,
					":CV_ACCESSIBLE"=>$this->CV_ACCESSIBLE,
					":NB_FICHES_VISITABLES"=>$this->NB_FICHES_VISITABLES,
					":CV_VIDEO_ACCESSIBLE"=>$this->CV_VIDEO_ACCESSIBLE,
					":ALERTE_NON_DISPONIBILITE"=>$this->ALERTE_NON_DISPONIBILITE,
					":NB_DEPARTEMENTS_ALERTE"=>$this->NB_DEPARTEMENTS_ALERTE,
					":PARRAINAGE_ACTIVE"=>$this->PARRAINAGE_ACTIVE,
					":PREVISUALISATION_FICHES"=>$this->PREVISUALISATION_FICHES,
					":CONTRATS_PDF"=>$this->CONTRATS_PDF,
					":SUIVI"=>$this->SUIVI,
					":PUBS"=>$this->PUBS,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php
class MPG_pack_personne{

	private $ID_PERSONNE;
	private $ID_PACK;
	private $DATE_ACHAT;
	private $DATE_DEBUT;
	private $DATE_FIN;
	private $REDUCTION;
	private $NB_FICHES_VISITABLES;
	private	$DATAS_PAYPAL;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_PERSONNE = "";
		$this->ID_PACK = "";
		$this->DATE_ACHAT = "";
		$this->DATE_DEBUT = "";
		$this->DATE_FIN = "";
		$this->REDUCTION = "";
		$this->NB_FICHES_VISITABLES = "";		
		$this->DATAS_PAYPAL = "";			
	}
	
	// -------------------------------------------------- SELECT -----------------------------------------------------------
	
	public function SELECT_COUNT_packs_achetes_by_ID_PACK($oMSG){		
		$this->ID_PACK = $oMSG->getData("ID_PACK");
		
		$this->sql = "SELECT COUNT(ID_PACK) as nb_pack FROM pack_personne WHERE ID_PACK=:ID_PACK;";
		
		$params = array(
				":ID_PACK"=>$this->ID_PACK,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// -------------------------------------------------- INSERT -----------------------------------------------------------
	
	public function INSERT($oMSG){		
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->ID_PACK = $oMSG->getData("ID_PACK");
		$this->DATE_ACHAT = $oMSG->getData("DATE_ACHAT");
		$this->DATE_DEBUT = $oMSG->getData("DATE_DEBUT");
		$this->DATE_FIN = $oMSG->getData("DATE_FIN");
		$this->REDUCTION = $oMSG->getData("REDUCTION");
		$this->NB_FICHES_VISITABLES = $oMSG->getData("NB_FICHES_VISITABLES");
		$this->DATAS_PAYPAL = $oMSG->getData("DATAS_PAYPAL");
		
		$this->sql = "INSERT INTO pack_personne (ID_PERSONNE, ID_PACK, DATE_ACHAT, DATE_DEBUT, DATE_FIN, REDUCTION, NB_FICHES_VISITABLES, DATAS_PAYPAL) ".
		"VALUES (:ID_PERSONNE, :ID_PACK, :DATE_ACHAT, :DATE_DEBUT, :DATE_FIN, :REDUCTION, :NB_FICHES_VISITABLES, :DATAS_PAYPAL);";
		
		$params = array(
				":ID_PERSONNE"=>$this->ID_PERSONNE,
				":ID_PACK"=>$this->ID_PACK,
				":DATE_ACHAT"=>$this->DATE_ACHAT,
				":DATE_DEBUT"=>$this->DATE_DEBUT,
				":DATE_FIN"=>$this->DATE_FIN,
				":REDUCTION"=>$this->REDUCTION,
				":NB_FICHES_VISITABLES"=>$this->NB_FICHES_VISITABLES,
				":DATAS_PAYPAL"=>$this->DATAS_PAYPAL,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ------------------------------------------------- UPDATE ------------------------------------------------------
	
	public function UPDATE_DATE_FIN_by_IDs($oMSG){		
	$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	$this->ID_PACK = $oMSG->getData("ID_PACK");
	$this->DATE_ACHAT = $oMSG->getData("DATE_ACHAT");
	$this->DATE_FIN = $oMSG->getData("DATE_FIN");
	
	$this->sql = "UPDATE pack_personne SET DATE_FIN=:DATE_FIN WHERE ID_PACK=:ID_PACK AND ID_PERSONNE=:ID_PERSONNE AND DATE_ACHAT=:DATE_ACHAT;";
	
	$params = array(
			":ID_PERSONNE"=>$this->ID_PERSONNE,
			":ID_PACK"=>$this->ID_PACK,
			":DATE_ACHAT"=>$this->DATE_ACHAT,
			":DATE_FIN"=>$this->DATE_FIN,
				);
	
	$oMSG->setData(0, $this->sql);
	$oMSG->setData(1, $params);
	
	return $oMSG;
	}
	
	public function UPDATE_DATE_DEBUT_et_DATE_FIN_by_IDs($oMSG){		
	$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	$this->ID_PACK = $oMSG->getData("ID_PACK");
	$this->DATE_ACHAT = $oMSG->getData("DATE_ACHAT");
	$this->DATE_DEBUT = $oMSG->getData("DATE_DEBUT");
	$this->DATE_FIN = $oMSG->getData("DATE_FIN");
	
	$this->sql = "UPDATE pack_personne SET DATE_DEBUT=:DATE_DEBUT, DATE_FIN=:DATE_FIN WHERE ID_PACK=:ID_PACK AND ID_PERSONNE=:ID_PERSONNE AND DATE_ACHAT=:DATE_ACHAT;";
	
	$params = array(
			":ID_PERSONNE"=>$this->ID_PERSONNE,
			":ID_PACK"=>$this->ID_PACK,
			":DATE_ACHAT"=>$this->DATE_ACHAT,
			":DATE_DEBUT"=>$this->DATE_DEBUT,
			":DATE_FIN"=>$this->DATE_FIN,
				);
	
	$oMSG->setData(0, $this->sql);
	$oMSG->setData(1, $params);
	
	return $oMSG;
	}
	
	public function UPDATE_decremente_NB_FICHES_VISITABLES_by_IDs($oMSG){		
	$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	$this->ID_PACK = $oMSG->getData("ID_PACK");
	$this->DATE_ACHAT = $oMSG->getData("DATE_ACHAT");
	$this->NB_FICHES_VISITABLES = $oMSG->getData("NB_FICHES_VISITABLES");
	
	$this->sql = "UPDATE pack_personne SET NB_FICHES_VISITABLES=:NB_FICHES_VISITABLES-1 WHERE ID_PACK=:ID_PACK AND ID_PERSONNE=:ID_PERSONNE AND DATE_ACHAT=:DATE_ACHAT;";
	
	$params = array(
			":ID_PERSONNE"=>$this->ID_PERSONNE,
			":ID_PACK"=>$this->ID_PACK,
			":DATE_ACHAT"=>$this->DATE_ACHAT,
			":NB_FICHES_VISITABLES"=>$this->NB_FICHES_VISITABLES,
				);
	
	$oMSG->setData(0, $this->sql);
	$oMSG->setData(1, $params);
	
	return $oMSG;
	}
	
}<?php
class MPG_personne{

	private $ID_PERSONNE;
	private $PSEUDO;
	private $NOM;
	private $PRENOM;
	private $DESCRIPTION;
	private $URL_PHOTO_PRINCIPALE;
	private $DATE_NAISSANCE;
	private $CIVILITE;
	private $EMAIL;
	private $MDP;
	private $TYPE_PERSONNE;
	private $STATUT_PERSONNE;
	private $CONNAISSANCE_SITE;
	private $NEWSLETTER;
	private $OFFRES_ANNONCEURS;
	private $DEPARTEMENTS;
	private $VILLE;
	private $ADRESSE;
	private $CP;
	private $TEL_FIXE;
	private $TEL_PORTABLE;
	private $REDUCTION;
	private $PARRAIN;
	private $SIRRET;
	private $TARIFS;
	private $DISTANCE_PRESTATION_MAX;
	private $CV_VIDEO;
	private $MATERIEL;
	private $VISIBLE;
	private $DATE_BANNISSEMENT;
	private $PERSONNE_SUPPRIMEE;
	private $DATE_SUPPRESSION_REELLE;
	private $RAISON_SUPPRESSION;	
	private $CLE_ACTIVATION;
	private $ANNONCES_VISITEES;
	private $ROLES;
	private $ID_FACEBOOK;
	private $DERNIERE_ACTIVITE;
	
	# IP
	private $ID_IP;
	private $IP_COOKIE;
	private $COOKIE_DETRUIT;
	private $DATE_CONNEXION;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_PERSONNE = "";
	$this->PSEUDO = "";
	$this->NOM = "";
	$this->PRENOM = "";
	$this->DESCRIPTION = "";
	$this->URL_PHOTO_PRINCIPALE = "";
	$this->DATE_NAISSANCE = "";
	$this->CIVILITE = "";
	$this->EMAIL = "";
	$this->MDP = "";
	$this->TYPE_PERSONNE = "";
	$this->STATUT_PERSONNE = "";
	$this->CONNAISSANCE_SITE = "";
	$this->NEWSLETTER = "";
	$this->OFFRES_ANNONCEURS = "";
	$this->DEPARTEMENTS = "";
	$this->VILLE = "";
	$this->ADRESSE = "";
	$this->CP = "";
	$this->TEL_FIXE = "";
	$this->TEL_PORTABLE = "";
	$this->REDUCTION = "";
	$this->PARRAIN = "";
	$this->SIRRET = "";
	$this->TARIFS = "";
	$this->DISTANCE_PRESTATION_MAX = "";
	$this->CV_VIDEO = "";
	$this->MATERIEL = "";
	$this->VISIBLE = "";
	$this->DATE_BANNISSEMENT = "";
	$this->PERSONNE_SUPPRIMEE = "";
	$this->DATE_SUPPRESSION_REELLE = "";
	$this->RAISON_SUPPRESSION = "";	
	$this->CLE_ACTIVATION = "";	
	$this->ANNONCES_VISITEES = "";	
	$this->ROLES = "";	
	$this->ID_FACEBOOK = "";	
	$this->DERNIERE_ACTIVITE = "";	
	
	# IP
	$this->ID_IP = "";
	$this->IP_COOKIE = "";
	$this->COOKIE_DETRUIT = "";	
	$this->DATE_CONNEXION = "";
	}
	
	public function SELECT_COUNT_PSEUDO($oMSG){
		$this->PSEUDO = $oMSG->getData("PSEUDO");
	
		$this->sql = "SELECT COUNT(PSEUDO) AS nb_pseudo FROM personne WHERE PSEUDO=:PSEUDO;";
		$params = array(    
					":PSEUDO"=>$this->PSEUDO,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_pseudo_by_PSEUDO_et_MDP($oMSG){
		$this->PSEUDO = $oMSG->getData("PSEUDO");
		$this->MDP = $oMSG->getData("MDP");
	
		$this->sql = "SELECT COUNT(PSEUDO) AS nb_pseudo FROM personne WHERE PSEUDO=:PSEUDO AND MDP=:MDP;";
		$params = array(    
					":PSEUDO"=>$this->PSEUDO,
					":MDP"=>$this->MDP,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_personne_by_ID_PERSONNE_et_MDP($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->MDP = $oMSG->getData("MDP");
	
		$this->sql = "SELECT COUNT(ID_PERSONNE) AS nb_personne FROM personne WHERE ID_PERSONNE=:ID_PERSONNE AND MDP=:MDP;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":MDP"=>$this->MDP,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_EMAIL($oMSG){
		$this->EMAIL = $oMSG->getData("EMAIL");
	
		$this->sql = "SELECT COUNT(EMAIL) AS nb_email FROM personne WHERE EMAIL=:EMAIL;";
		$params = array(    
					":EMAIL"=>$this->EMAIL,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_compte_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT * FROM personne WHERE ID_PERSONNE=:ID_PERSONNE;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_compte_min_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, NOM, PRENOM, CIVILITE, TYPE_PERSONNE, EMAIL ".
		"FROM personne ".
		"WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_by_PSEUDO($oMSG){
		$this->PSEUDO = $oMSG->getData("PSEUDO");
	
		$this->sql = "SELECT * FROM personne WHERE PSEUDO=:PSEUDO;";
		$params = array(    
					":PSEUDO"=>$this->PSEUDO,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_by_PSEUDO_et_EMAIL($oMSG){
		$this->PSEUDO = $oMSG->getData("PSEUDO");
		$this->EMAIL = $oMSG->getData("EMAIL");
	
		$this->sql = "SELECT * FROM personne WHERE PSEUDO=:PSEUDO AND EMAIL=:EMAIL;";
		$params = array(    
					":PSEUDO"=>$this->PSEUDO,
					":EMAIL"=>$this->EMAIL,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_by_EMAIL_et_CLE_ACTIVATION($oMSG){
		$this->CLE_ACTIVATION = $oMSG->getData("CLE_ACTIVATION");
		$this->EMAIL = $oMSG->getData("EMAIL");
	
		$this->sql = "SELECT COUNT(ID_PERSONNE) AS nb_personne, CLE_ACTIVATION  FROM personne WHERE CLE_ACTIVATION=:CLE_ACTIVATION AND EMAIL=:EMAIL AND VISIBLE=false;";
		$params = array(    
					":CLE_ACTIVATION"=>$this->CLE_ACTIVATION,
					":EMAIL"=>$this->EMAIL,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_IP_by_ID_IP($oMSG){
		$this->ID_IP = $oMSG->getData("ID_IP");
	
		$this->sql = "SELECT COUNT(ID_IP) AS nb_IP FROM ip WHERE ID_IP=:ID_IP;";
		$params = array(    
					":ID_IP"=>$this->ID_IP,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_IP_by_IP_COOKIE($oMSG){
		$this->IP_COOKIE = $oMSG->getData("IP_COOKIE");
	
		$this->sql = "SELECT COUNT(ID_IP) AS nb_IP FROM ip WHERE ID_IP=:IP_COOKIE;";
		$params = array(    
					":IP_COOKIE"=>$this->IP_COOKIE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_by_CLE_ACTIVATION($oMSG){
		$this->CLE_ACTIVATION = $oMSG->getData("CLE_ACTIVATION");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, EMAIL, VISIBLE, CLE_ACTIVATION, ID_IP, DATE_CONNEXION, IP_COOKIE ".
		"FROM ip_personne NATURAL JOIN personne WHERE CLE_ACTIVATION<>:CLE_ACTIVATION GROUP BY ID_PERSONNE HAVING COUNT(ID_IP) >= 1 ORDER BY ID_IP, IP_COOKIE, DATE_CONNEXION, PSEUDO, EMAIL;";# ATTENTION: "!=" et non "="
		$params = array(    
					":CLE_ACTIVATION"=>$this->CLE_ACTIVATION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_by_ID_IP($oMSG){
		$this->ID_IP = $oMSG->getData("ID_IP");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, EMAIL, VISIBLE, CLE_ACTIVATION, ID_IP, DATE_CONNEXION, IP_COOKIE ".
		"FROM ip_personne NATURAL JOIN personne WHERE ID_IP=:ID_IP GROUP BY PSEUDO ORDER BY ID_IP, IP_COOKIE, DATE_CONNEXION, PSEUDO, EMAIL;";
		$params = array(    
					":ID_IP"=>$this->ID_IP,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_by_IP_COOKIE($oMSG){
		$this->IP_COOKIE = $oMSG->getData("IP_COOKIE");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, EMAIL, VISIBLE, CLE_ACTIVATION, ID_IP, DATE_CONNEXION, IP_COOKIE ".
		"FROM ip_personne NATURAL JOIN personne WHERE IP_COOKIE=:IP_COOKIE GROUP BY PSEUDO ORDER BY ID_IP, IP_COOKIE, DATE_CONNEXION, PSEUDO, EMAIL;";
		$params = array(    
					":IP_COOKIE"=>$this->IP_COOKIE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_tous_membres($oMSG){
		$champs = $oMSG->getData("champs");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, EMAIL FROM personne ORDER BY PSEUDO;";
		$params = array(    
					
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_tous_membres($oMSG){
	
		$this->sql = "SELECT COUNT(ID_PERSONNE) AS nb_personne FROM personne;";
		$params = array(    
		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_tous_membres_by_LIMIT($oMSG){
		$nb_result_affiches = $oMSG->getData('nb_result_affiches');
		$debut_affichage = $oMSG->getData('debut_affichage');
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, URL_PHOTO_PRINCIPALE, EMAIL, TYPE_PERSONNE, VISIBLE, DATE_BANNISSEMENT, PERSONNE_SUPPRIMEE, ".
		"DATE_SUPPRESSION_REELLE, RAISON_SUPPRESSION, CLE_ACTIVATION FROM personne ORDER BY PSEUDO, TYPE_PERSONNE, EMAIL LIMIT $debut_affichage, ".
		"$nb_result_affiches ;";
		$params = array(    
		
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	public function SELECT_COUNT_by_CLE_ACTIVATION($oMSG){
		$this->CLE_ACTIVATION = $oMSG->getData("CLE_ACTIVATION");
	
		$this->sql = "SELECT COUNT(ID_PERSONNE) as nb_comptes ".
		"FROM ip_personne NATURAL JOIN personne WHERE CLE_ACTIVATION!=:CLE_ACTIVATION AND (SELECT COUNT(ID_IP) FROM ip_personne) > 1;";# ATTENTION: "!=" et non "="
		$params = array(    
					":CLE_ACTIVATION"=>$this->CLE_ACTIVATION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_comptes_by_PERSONNE_SUPPRIMEE_et_VISIBILITE($oMSG){
		$this->PERSONNE_SUPPRIMEE = $oMSG->getData("PERSONNE_SUPPRIMEE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
	
		$this->sql = "SELECT COUNT(ID_PERSONNE) as nb_comptes_supprimes ".
		"FROM personne WHERE PERSONNE_SUPPRIMEE=:PERSONNE_SUPPRIMEE AND VISIBLE=:VISIBLE;";
		$params = array(    
					":PERSONNE_SUPPRIMEE"=>$this->PERSONNE_SUPPRIMEE,
					":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_comptes_supprimes_par_utilisateur($oMSG){
		$this->PERSONNE_SUPPRIMEE = $oMSG->getData("PERSONNE_SUPPRIMEE");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, NOM, PRENOM, CIVILITE, EMAIL, TEL_FIXE, TEL_PORTABLE, RAISON_SUPPRESSION ".
		"FROM personne WHERE PERSONNE_SUPPRIMEE=:PERSONNE_SUPPRIMEE AND VISIBLE=:VISIBLE ORDER BY DATE_SUPPRESSION_REELLE DESC;";
		$params = array(    
					":PERSONNE_SUPPRIMEE"=>$this->PERSONNE_SUPPRIMEE,
					":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_REDUCTION_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT REDUCTION FROM personne WHERE ID_PERSONNE=:ID_PERSONNE;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_ID_PERSONNE_by_ID_PERSONNE_et_EMAIL_et_MDP($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->EMAIL = $oMSG->getData("EMAIL");
		$this->MDP = $oMSG->getData("MDP");
	
		$this->sql = "SELECT COUNT(ID_PERSONNE) as nb_personne FROM personne WHERE ID_PERSONNE=:ID_PERSONNE AND EMAIL=:EMAIL AND MDP=:MDP;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":EMAIL"=>$this->EMAIL,
					":MDP"=>$this->MDP,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_filleuls_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT COUNT(ID_PERSONNE) as nb_personne FROM personne WHERE ID_PERSONNE=:ID_PERSONNE ORDER BY PSEUDO;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_filleuls_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, NOM, PRENOM, CIVILITE, TYPE_PERSONNE FROM personne WHERE ID_PERSONNE=:ID_PERSONNE ORDER BY PSEUDO;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_adresse_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, NOM, PRENOM, CIVILITE, TYPE_PERSONNE, ADRESSE, CP, VILLE FROM personne WHERE ID_PERSONNE=:ID_PERSONNE;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT ANNONCES_VISITEES FROM personne WHERE ID_PERSONNE=:ID_PERSONNE;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_PSEUDO_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "SELECT PSEUDO FROM personne WHERE ID_PERSONNE=:ID_PERSONNE;";
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_all_by_ID_FACEBOOK($oMSG){
		$this->ID_FACEBOOK = $oMSG->getData("ID_FACEBOOK");
	
		$this->sql = "SELECT ID_PERSONNE, PSEUDO, NOM, PRENOM, CIVILITE, EMAIL, TYPE_PERSONNE, PARRAIN, REDUCTION, ANNONCES_VISITEES ".
		"FROM personne WHERE ID_FACEBOOK=:ID_FACEBOOK;";
		$params = array(    
					":ID_FACEBOOK"=>$this->ID_FACEBOOK,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_tous_PARRAIN($oMSG){
	
		$this->sql = "SELECT COUNT(PARRAIN) as nb_parrain, PARRAIN FROM personne WHERE PARRAIN != 'Aucun' GROUP BY PARRAIN ORDER BY nb_parrain DESC;";
		
		$params = array(    
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_COUNT_connectes($oMSG){
		$this->DERNIERE_ACTIVITE = $oMSG->getData("DERNIERE_ACTIVITE");
		
		$this->sql = "SELECT COUNT(ID_PERSONNE) as nb_personne FROM personne WHERE DERNIERE_ACTIVITE>:DERNIERE_ACTIVITE;";
		
		$params = array(    
				":DERNIERE_ACTIVITE"=>$this->DERNIERE_ACTIVITE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ------------------------------------------------------------- INSERT
	
	public function INSERT_all($oMSG){
		$this->PSEUDO = $oMSG->getData("PSEUDO");
		$this->NOM = $oMSG->getData("NOM");
		$this->PRENOM = $oMSG->getData("PRENOM");
		$this->CIVILITE = $oMSG->getData("CIVILITE");
		$this->EMAIL = $oMSG->getData("EMAIL");
		$this->MDP = $oMSG->getData("MDP");
		$this->TYPE_PERSONNE = $oMSG->getData("TYPE_PERSONNE");
		$this->CONNAISSANCE_SITE = $oMSG->getData("CONNAISSANCE_SITE");
		$this->NEWSLETTER = $oMSG->getData("NEWSLETTER");
		$this->OFFRES_ANNONCEURS = $oMSG->getData("OFFRES_ANNONCEURS");
		$this->PARRAIN = $oMSG->getData("PARRAIN");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->CLE_ACTIVATION = $oMSG->getData("CLE_ACTIVATION");
		
	
		$this->sql = "INSERT INTO personne (PSEUDO, NOM, PRENOM, CIVILITE, EMAIL, MDP, TYPE_PERSONNE, CONNAISSANCE_SITE, NEWSLETTER, OFFRES_ANNONCEURS, PARRAIN, VISIBLE, CLE_ACTIVATION) ".
					 "VALUES (:PSEUDO, :NOM, :PRENOM, :CIVILITE, :EMAIL, :MDP, :TYPE_PERSONNE, :CONNAISSANCE_SITE, :NEWSLETTER, :OFFRES_ANNONCEURS, :PARRAIN, :VISIBLE, :CLE_ACTIVATION);";
		$params = array(    
					":PSEUDO"=>$this->PSEUDO,
					":NOM"=>$this->NOM,
					":PRENOM"=>$this->PRENOM,
					":CIVILITE"=>$this->CIVILITE,
					":EMAIL"=>$this->EMAIL,
					":MDP"=>$this->MDP,
					":TYPE_PERSONNE"=>$this->TYPE_PERSONNE,
					":CONNAISSANCE_SITE"=>$this->CONNAISSANCE_SITE,
					":NEWSLETTER"=>$this->NEWSLETTER,
					":OFFRES_ANNONCEURS"=>$this->OFFRES_ANNONCEURS,
					":PARRAIN"=>$this->PARRAIN,
					":VISIBLE"=>$this->VISIBLE,
					":CLE_ACTIVATION"=>$this->CLE_ACTIVATION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function INSERT_IP($oMSG){
		$this->ID_IP = $oMSG->getData("ID_IP");
	
		$this->sql = "INSERT INTO ip (ID_IP) VALUES (:ID_IP);";
		$params = array(    
					":ID_IP"=>$this->ID_IP,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function INSERT_liaison_IP_et_PERSONNE($oMSG){
		$this->ID_IP = $oMSG->getData("ID_IP");
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->IP_COOKIE = $oMSG->getData("IP_COOKIE");
		$this->COOKIE_DETRUIT = $oMSG->getData("COOKIE_DETRUIT");
		$this->DATE_CONNEXION = $oMSG->getData("DATE_CONNEXION");
	
		$this->sql = "INSERT INTO ip_personne (ID_IP, ID_PERSONNE, IP_COOKIE, COOKIE_DETRUIT, DATE_CONNEXION) VALUES (:ID_IP, :ID_PERSONNE, :IP_COOKIE, :COOKIE_DETRUIT, :DATE_CONNEXION);";
		$params = array(    
					":ID_IP"=>$this->ID_IP,
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":IP_COOKIE"=>$this->IP_COOKIE,
					":COOKIE_DETRUIT"=>$this->COOKIE_DETRUIT,
					":DATE_CONNEXION"=>$this->DATE_CONNEXION,
					);

		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// --------------------------------------------------------------- UPDATE
	
	public function UPDATE_activation_compte($oMSG){
		$this->CLE_ACTIVATION = $oMSG->getData("CLE_ACTIVATION");
		$this->EMAIL = $oMSG->getData("EMAIL");
	
		$this->sql = "UPDATE personne SET CLE_ACTIVATION=:CLE_ACTIVATION, VISIBLE=true WHERE EMAIL=:EMAIL;";
		$params = array(    
					":CLE_ACTIVATION"=>$this->CLE_ACTIVATION,
					":EMAIL"=>$this->EMAIL,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_TYPE_PERSONNE_by_PSEUDO($oMSG){
		$this->PSEUDO = $oMSG->getData("PSEUDO");
		$this->TYPE_PERSONNE = $oMSG->getData("TYPE_PERSONNE");
	
		$this->sql = "UPDATE personne SET TYPE_PERSONNE=:TYPE_PERSONNE WHERE PSEUDO=:PSEUDO;";
		$params = array(    
					":PSEUDO"=>$this->PSEUDO,
					":TYPE_PERSONNE"=>$this->TYPE_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_validite_compte_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->DATE_BANNISSEMENT = $oMSG->getData("DATE_BANNISSEMENT");
		$this->DATE_SUPPRESSION_REELLE = $oMSG->getData("DATE_SUPPRESSION_REELLE");
		$this->RAISON_SUPPRESSION = $oMSG->getData("RAISON_SUPPRESSION");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		$this->PERSONNE_SUPPRIMEE = $oMSG->getData("PERSONNE_SUPPRIMEE");
	
		$this->sql = "UPDATE personne SET DATE_BANNISSEMENT=:DATE_BANNISSEMENT, DATE_SUPPRESSION_REELLE=:DATE_SUPPRESSION_REELLE, RAISON_SUPPRESSION=:RAISON_SUPPRESSION, VISIBLE=:VISIBLE, PERSONNE_SUPPRIMEE=:PERSONNE_SUPPRIMEE ".
		"WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":DATE_BANNISSEMENT"=>$this->DATE_BANNISSEMENT,
					":DATE_SUPPRESSION_REELLE"=>$this->DATE_SUPPRESSION_REELLE,
					":RAISON_SUPPRESSION"=>$this->RAISON_SUPPRESSION,
					":VISIBLE"=>$this->VISIBLE,
					":PERSONNE_SUPPRIMEE"=>$this->PERSONNE_SUPPRIMEE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UPDATE_fiche_personnelle_basique_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->NOM = $oMSG->getData("NOM");
		$this->PRENOM = $oMSG->getData("PRENOM");
		$this->CIVILITE = $oMSG->getData("CIVILITE");
		$this->DATE_NAISSANCE = $oMSG->getData("DATE_NAISSANCE");
		$this->URL_PHOTO_PRINCIPALE = $oMSG->getData("URL_PHOTO_PRINCIPALE");
		$this->EMAIL = $oMSG->getData("EMAIL");
		$this->TEL_FIXE = $oMSG->getData("TEL_FIXE");
		$this->TEL_PORTABLE = $oMSG->getData("TEL_PORTABLE");
		$this->REDUCTION = $oMSG->getData("REDUCTION");
		$this->ADRESSE = $oMSG->getData("ADRESSE");
		$this->CP = $oMSG->getData("CP");
		$this->VILLE = $oMSG->getData("VILLE");
		$this->NEWSLETTER = $oMSG->getData("NEWSLETTER");
		$this->OFFRES_ANNONCEURS = $oMSG->getData("OFFRES_ANNONCEURS");

	
		$this->sql = "UPDATE personne SET NOM=:NOM, PRENOM=:PRENOM, CIVILITE=:CIVILITE, DATE_NAISSANCE=:DATE_NAISSANCE, ".
		"URL_PHOTO_PRINCIPALE=:URL_PHOTO_PRINCIPALE, EMAIL=:EMAIL, TEL_FIXE=:TEL_FIXE, TEL_PORTABLE=:TEL_PORTABLE, REDUCTION=:REDUCTION, ".
		"ADRESSE=:ADRESSE, CP=:CP, VILLE=:VILLE, NEWSLETTER=:NEWSLETTER, OFFRES_ANNONCEURS=:OFFRES_ANNONCEURS ".
		"WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":NOM"=>$this->NOM,
					":PRENOM"=>$this->PRENOM,
					":CIVILITE"=>$this->CIVILITE,
					":DATE_NAISSANCE"=>$this->DATE_NAISSANCE,
					":URL_PHOTO_PRINCIPALE"=>$this->URL_PHOTO_PRINCIPALE,
					":EMAIL"=>$this->EMAIL,
					":TEL_FIXE"=>$this->TEL_FIXE,
					":TEL_PORTABLE"=>$this->TEL_PORTABLE,
					":REDUCTION"=>$this->REDUCTION,
					":ADRESSE"=>$this->ADRESSE,
					":CP"=>$this->CP,
					":VILLE"=>$this->VILLE,
					":NEWSLETTER"=>$this->NEWSLETTER,
					":OFFRES_ANNONCEURS"=>$this->OFFRES_ANNONCEURS,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	
	public function UPDATE_fiche_personnelle_complete_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->NOM = $oMSG->getData("NOM");
		$this->PRENOM = $oMSG->getData("PRENOM");
		$this->CIVILITE = $oMSG->getData("CIVILITE");
		$this->DATE_NAISSANCE = $oMSG->getData("DATE_NAISSANCE");
		$this->URL_PHOTO_PRINCIPALE = $oMSG->getData("URL_PHOTO_PRINCIPALE");
		$this->EMAIL = $oMSG->getData("EMAIL");
		$this->TEL_FIXE = $oMSG->getData("TEL_FIXE");
		$this->TEL_PORTABLE = $oMSG->getData("TEL_PORTABLE");
		$this->REDUCTION = $oMSG->getData("REDUCTION");
		$this->ADRESSE = $oMSG->getData("ADRESSE");
		$this->CP = $oMSG->getData("CP");
		$this->VILLE = $oMSG->getData("VILLE");
		$this->NEWSLETTER = $oMSG->getData("NEWSLETTER");
		$this->OFFRES_ANNONCEURS = $oMSG->getData("OFFRES_ANNONCEURS");
		
		$this->DESCRIPTION = $oMSG->getData("DESCRIPTION");
		$this->STATUT_PERSONNE = $oMSG->getData("STATUT_PERSONNE");
		$this->DEPARTEMENTS = $oMSG->getData("DEPARTEMENTS");
		$this->SIRET = $oMSG->getData("SIRET");
		$this->TARIFS = $oMSG->getData("TARIFS");
		$this->DISTANCE_PRESTATION_MAX = $oMSG->getData("DISTANCE_PRESTATION_MAX");
		$this->CV_VIDEO = $oMSG->getData("CV_VIDEO");
		$this->MATERIEL = $oMSG->getData("MATERIEL");
		$this->ROLES = $oMSG->getData("ROLES");
		// Les ANNONCES_VISITEES ne sont pas gérées pour le moment. 

	
		$this->sql = "UPDATE personne SET NOM=:NOM, PRENOM=:PRENOM, CIVILITE=:CIVILITE, DATE_NAISSANCE=:DATE_NAISSANCE, ".
		"URL_PHOTO_PRINCIPALE=:URL_PHOTO_PRINCIPALE, EMAIL=:EMAIL, TEL_FIXE=:TEL_FIXE, TEL_PORTABLE=:TEL_PORTABLE, REDUCTION=:REDUCTION, ADRESSE=:ADRESSE, ".
		"CP=:CP, VILLE=:VILLE, NEWSLETTER=:NEWSLETTER, OFFRES_ANNONCEURS=:OFFRES_ANNONCEURS, DESCRIPTION=:DESCRIPTION, ".
		"STATUT_PERSONNE=:STATUT_PERSONNE, DEPARTEMENTS=:DEPARTEMENTS, SIRET=:SIRET, TARIFS=:TARIFS, ".
		"DISTANCE_PRESTATION_MAX=:DISTANCE_PRESTATION_MAX, CV_VIDEO=:CV_VIDEO, MATERIEL=:MATERIEL, ROLES=:ROLES ".
		"WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":NOM"=>$this->NOM,
					":PRENOM"=>$this->PRENOM,
					":CIVILITE"=>$this->CIVILITE,
					":DATE_NAISSANCE"=>$this->DATE_NAISSANCE,
					":URL_PHOTO_PRINCIPALE"=>$this->URL_PHOTO_PRINCIPALE,
					":EMAIL"=>$this->EMAIL,
					":TEL_FIXE"=>$this->TEL_FIXE,
					":TEL_PORTABLE"=>$this->TEL_PORTABLE,
					":REDUCTION"=>$this->REDUCTION,
					":ADRESSE"=>$this->ADRESSE,
					":CP"=>$this->CP,
					":VILLE"=>$this->VILLE,
					":NEWSLETTER"=>$this->NEWSLETTER,
					":OFFRES_ANNONCEURS"=>$this->OFFRES_ANNONCEURS,
					":DESCRIPTION"=>$this->DESCRIPTION,
					":STATUT_PERSONNE"=>$this->STATUT_PERSONNE,
					":DEPARTEMENTS"=>$this->DEPARTEMENTS,
					":SIRET"=>$this->SIRET,
					":TARIFS"=>$this->TARIFS,
					":DISTANCE_PRESTATION_MAX"=>$this->DISTANCE_PRESTATION_MAX,
					":CV_VIDEO"=>$this->CV_VIDEO,
					":MATERIEL"=>$this->MATERIEL,
					":ROLES"=>$this->ROLES,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UDPATE_MDP_by_ID_PERSONNE($oMSG){
		$this->MDP = $oMSG->getData("MDP");
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
	
		$this->sql = "UPDATE personne SET MDP=:MDP WHERE ID_PERSONNE=:ID_PERSONNE";
		$params = array(    
					":MDP"=>$this->MDP,
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UDPATE_infos_perso_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->NOM = $oMSG->getData("NOM");
		$this->PRENOM = $oMSG->getData("PRENOM");
		$this->CIVILITE = $oMSG->getData("CIVILITE");
		$this->DATE_NAISSANCE = $oMSG->getData("DATE_NAISSANCE");
		$this->URL_PHOTO_PRINCIPALE = $oMSG->getData("URL_PHOTO_PRINCIPALE");
		$this->TEL_FIXE = $oMSG->getData("TEL_FIXE");
		$this->TEL_PORTABLE = $oMSG->getData("TEL_PORTABLE");
		$this->ADRESSE = $oMSG->getData("ADRESSE");
		$this->CP = $oMSG->getData("CP");
		$this->VILLE = $oMSG->getData("VILLE");

	
		$this->sql = "UPDATE personne SET NOM=:NOM, PRENOM=:PRENOM, CIVILITE=:CIVILITE, DATE_NAISSANCE=:DATE_NAISSANCE, URL_PHOTO_PRINCIPALE=:URL_PHOTO_PRINCIPALE, ".
		"TEL_FIXE=:TEL_FIXE, TEL_PORTABLE=:TEL_PORTABLE, ADRESSE=:ADRESSE, CP=:CP, VILLE=:VILLE WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":NOM"=>$this->NOM,
					":PRENOM"=>$this->PRENOM,
					":CIVILITE"=>$this->CIVILITE,
					":DATE_NAISSANCE"=>$this->DATE_NAISSANCE,
					":URL_PHOTO_PRINCIPALE"=>$this->URL_PHOTO_PRINCIPALE,
					":TEL_FIXE"=>$this->TEL_FIXE,
					":TEL_PORTABLE"=>$this->TEL_PORTABLE,
					":ADRESSE"=>$this->ADRESSE,
					":CP"=>$this->CP,
					":VILLE"=>$this->VILLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UDPATE_REDUCTION_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->REDUCTION = $oMSG->getData("REDUCTION");

	
		$this->sql = "UPDATE personne SET REDUCTION=:REDUCTION WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":REDUCTION"=>$this->REDUCTION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UDPATE_REDUCTION_by_ID_PARRAIN($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->REDUCTION = $oMSG->getData("REDUCTION");

	
		$this->sql = "UPDATE personne SET REDUCTION=REDUCTION+:REDUCTION WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":REDUCTION"=>$this->REDUCTION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UDPATE_ANNONCES_VISITEES_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->ANNONCES_VISITEES = $oMSG->getData("ANNONCES_VISITEES");

	
		$this->sql = "UPDATE personne SET ANNONCES_VISITEES=:ANNONCES_VISITEES WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":ANNONCES_VISITEES"=>$this->ANNONCES_VISITEES,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function UDPATE_DERNIERE_ACTIVITE_by_ID_PERSONNE($oMSG){
		$this->ID_PERSONNE = $oMSG->getData("ID_PERSONNE");
		$this->DERNIERE_ACTIVITE = $oMSG->getData("DERNIERE_ACTIVITE");

	
		$this->sql = "UPDATE personne SET DERNIERE_ACTIVITE=:DERNIERE_ACTIVITE WHERE ID_PERSONNE=:ID_PERSONNE;";
		
		$params = array(    
					":ID_PERSONNE"=>$this->ID_PERSONNE,
					":DERNIERE_ACTIVITE"=>$this->DERNIERE_ACTIVITE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}
?><?php
class MPG_pub{

	private $ID_PUB;
	private $TITRE;
	private $CONTENU;
	private $POSITION;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_PUB = "";
		$this->TITRE = "";
		$this->CONTENU = "";
		$this->POSITION = "";
	}
	
	// ----------------------------------------------- SELECT -----------------------------------------------------
	
	public function SELECT_COUNT_all_pubs($oMSG){
		$this->sql = "SELECT COUNT(ID_PUB) as nb_pubs ".
		"FROM pub;";
		
		$params = array(
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
	
	public function SELECT_COUNT_pubs_by_POSITION($oMSG){
		$this->POSITION = $oMSG->getData("POSITION");
	
		$this->sql = "SELECT COUNT(ID_PUB) as nb_pubs ".
		"FROM pub ".
		"WHERE POSITION=:POSITION;";
		
		$params = array(
				":POSITION"=>$this->POSITION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
	
	public function SELECT_all_pubs($oMSG){
	
		$this->sql = "SELECT ID_PUB, TITRE, CONTENU, POSITION ".
		"FROM pub ".
		"ORDER BY POSITION;";
		
		$params = array(
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
	
	public function SELECT_pubs_by_POSITION($oMSG){
		$this->POSITION = $oMSG->getData("POSITION");
	
		$this->sql = "SELECT ID_PUB, TITRE, CONTENU, POSITION ".
		"FROM pub ".
		"WHERE POSITION=:POSITION;";
		
		$params = array(
				":POSITION"=>$this->POSITION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
	
	public function SELECT_pub_by_ID_PUB($oMSG){
		$this->ID_PUB = $oMSG->getData("ID_PUB");
	
		$this->sql = "SELECT ID_PUB, TITRE, CONTENU, POSITION ".
		"FROM pub ".
		"WHERE ID_PUB=:ID_PUB;";
		
		$params = array(
				":ID_PUB"=>$this->ID_PUB,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
	
	// ----------------------------------------------- INSERT -----------------------------------------------------
	
	
	public function INSERT($oMSG){
		$this->ID_PUB = $oMSG->getData("ID_PUB");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->CONTENU = $oMSG->getData("CONTENU");
		$this->POSITION = $oMSG->getData("POSITION");
	
		$this->sql = "INSERT INTO pub (ID_PUB, TITRE, CONTENU, POSITION) VALUES (:ID_PUB, :TITRE, :CONTENU, :POSITION);";
		
		$params = array(
				":ID_PUB"=>$this->ID_PUB,
				":TITRE"=>$this->TITRE,
				":CONTENU"=>$this->CONTENU,
				":POSITION"=>$this->POSITION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
	
	// ----------------------------------------------- UPDATE -----------------------------------------------------
	
	
	public function UPDATE($oMSG){
		$this->ID_PUB = $oMSG->getData("ID_PUB");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->CONTENU = $oMSG->getData("CONTENU");
		$this->POSITION = $oMSG->getData("POSITION");
	
		$this->sql = "UPDATE pub SET TITRE=:TITRE, CONTENU=:CONTENU, POSITION=:POSITION WHERE ID_PUB=:ID_PUB;";
		
		$params = array(
				":ID_PUB"=>$this->ID_PUB,
				":TITRE"=>$this->TITRE,
				":CONTENU"=>$this->CONTENU,
				":POSITION"=>$this->POSITION,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
	
	// ----------------------------------------------- DELETE -----------------------------------------------------
	
	
	public function DELETE($oMSG){
		$this->ID_PUB = $oMSG->getData("ID_PUB");
	
		$this->sql = "DELETE FROM pub WHERE ID_PUB=:ID_PUB;";
		
		$params = array(
				":ID_PUB"=>$this->ID_PUB,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;

	}
}<?php
class MPG_slide{

	private $ID_SLIDE;
	private $TITRE;
	private $URL;
	private $LIEN;
	private $CLASSE;
	private $ORDRE;
	private $ACCES;
	private $VISIBLE;

	private $sql;

	public function __construct() {
		$this->sql = "";
		$this->ID_SLIDE = "";
		$this->TITRE = "";
		$this->URL = "";
		$this->LIEN = "";
		$this->CLASSE = "";
		$this->ORDRE = "";
		$this->ACCES = "";
		$this->VISIBLE = "";
	}
	
	// ----------------------------------------------- SELECT -----------------------------------------------------
	
	public function SELECT_slides($oMSG){
		$this->sql = "SELECT ID_SLIDE, TITRE, URL, LIEN, CLASSE, ORDRE, ACCES, VISIBLE ".
		"FROM slide ".
		"ORDER BY ORDRE;";
		
		$params = array(
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_slides_by_VISIBLE($oMSG){
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "SELECT ID_SLIDE, TITRE, URL, LIEN, CLASSE, ORDRE, ACCES, VISIBLE ".
		"FROM slide ".
		"WHERE VISIBLE=:VISIBLE ".
		"ORDER BY ORDRE;";
		
		$params = array(
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	public function SELECT_slide_by_ID_SLIDE($oMSG){
		$this->ID_SLIDE = $oMSG->getData("ID_SLIDE");
		
		$this->sql = "SELECT ID_SLIDE, TITRE, URL, LIEN, CLASSE, ORDRE, ACCES, VISIBLE ".
		"FROM slide ".
		"WHERE ID_SLIDE=:ID_SLIDE;";
		
		$params = array(
				":ID_SLIDE"=>$this->ID_SLIDE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ----------------------------------------------- INSERT -----------------------------------------------------

	public function INSERT($oMSG){
		$this->TITRE = $oMSG->getData("TITRE");
		$this->URL = $oMSG->getData("URL");
		$this->LIEN = $oMSG->getData("LIEN");
		$this->CLASSE = $oMSG->getData("CLASSE");
		$this->ORDRE = $oMSG->getData("ORDRE");
		$this->ACCES = $oMSG->getData("ACCES");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "INSERT INTO slide (TITRE, URL, LIEN, CLASSE, ORDRE, ACCES, VISIBLE) VALUES (:TITRE, :URL, :LIEN, :CLASSE, :ORDRE, :ACCES, :VISIBLE);";
		
		$params = array(
				":TITRE"=>$this->TITRE,
				":URL"=>$this->URL,
				":LIEN"=>$this->LIEN,
				":CLASSE"=>$this->CLASSE,
				":ORDRE"=>$this->ORDRE,
				":ACCES"=>$this->ACCES,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ----------------------------------------------- UDPATE -----------------------------------------------------

	public function UPDATE($oMSG){
		$this->ID_SLIDE = $oMSG->getData("ID_SLIDE");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->URL = $oMSG->getData("URL");
		$this->LIEN = $oMSG->getData("LIEN");
		$this->CLASSE = $oMSG->getData("CLASSE");
		$this->ORDRE = $oMSG->getData("ORDRE");
		$this->ACCES = $oMSG->getData("ACCES");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "UPDATE slide SET TITRE=:TITRE, URL=:URL, LIEN=:LIEN, CLASSE=:CLASSE, ORDRE=:ORDRE, ACCES=:ACCES, VISIBLE=:VISIBLE ".
		"WHERE ID_SLIDE=:ID_SLIDE;";
		
		$params = array(
				":ID_SLIDE"=>$this->ID_SLIDE,
				":TITRE"=>$this->TITRE,
				":URL"=>$this->URL,
				":LIEN"=>$this->LIEN,
				":CLASSE"=>$this->CLASSE,
				":ORDRE"=>$this->ORDRE,
				":ACCES"=>$this->ACCES,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}	
	
	public function UPDATE_sauf_URL($oMSG){
		$this->ID_SLIDE = $oMSG->getData("ID_SLIDE");
		$this->TITRE = $oMSG->getData("TITRE");
		$this->LIEN = $oMSG->getData("LIEN");
		$this->CLASSE = $oMSG->getData("CLASSE");
		$this->ORDRE = $oMSG->getData("ORDRE");
		$this->ACCES = $oMSG->getData("ACCES");
		$this->VISIBLE = $oMSG->getData("VISIBLE");
		
		$this->sql = "UPDATE slide SET TITRE=:TITRE, LIEN=:LIEN, CLASSE=:CLASSE, ORDRE=:ORDRE, ACCES=:ACCES, VISIBLE=:VISIBLE ".
		"WHERE ID_SLIDE=:ID_SLIDE;";
		
		$params = array(
				":ID_SLIDE"=>$this->ID_SLIDE,
				":TITRE"=>$this->TITRE,
				":LIEN"=>$this->LIEN,
				":CLASSE"=>$this->CLASSE,
				":ORDRE"=>$this->ORDRE,
				":ACCES"=>$this->ACCES,
				":VISIBLE"=>$this->VISIBLE,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}	

}
?><?php
class MPG_types{

	private $ID_TYPES;
	private $ID_FAMILLE_TYPES;
	
	private $sql;
	
	public function __construct() {
	$this->sql = "";
	$this->ID_TYPES = "";
	$this->ID_FAMILLE_TYPES = "";
	}
	
	
	public function SELECT_COUNT_ID_TYPES_by_ID_TYPES($oMSG){
		$this->ID_TYPES = $oMSG->getData("ID_TYPES");
	
		$this->sql = "SELECT COUNT(ID_TYPES) as nb_types FROM types WHERE ID_TYPES=:ID_TYPES;";
		$params = array(    
					":ID_TYPES"=>$this->ID_TYPES,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
	// ------------------------------------- INSERT ----------------------------------
	
	public function INSERT_ID_TYPES($oMSG){
		$this->ID_TYPES = $oMSG->getData("ID_TYPES");
		$this->ID_FAMILLE_TYPES = $oMSG->getData("ID_FAMILLE_TYPES");

		$this->sql = "INSERT INTO types (ID_TYPES, ID_FAMILLE_TYPES) VALUES (:ID_TYPES, :ID_FAMILLE_TYPES);";
		$params = array(    
					":ID_TYPES"=>$this->ID_TYPES,
					":ID_FAMILLE_TYPES"=>$this->ID_FAMILLE_TYPES,
					);
		
		$oMSG->setData(0, $this->sql);
		$oMSG->setData(1, $params);
		
		return $oMSG;
	}
	
}<?php
/**
* Cette classe permet de transmettre un flot d'informations très importantes.
* A utiliser pour transmettre la plupart des informations.
*/
class MSG{
	
	private $statut; # Booléen de validation des diverses opérations.
	private $message_erreur; # Message d'erreur à l'intention de l'utilisateur.
	private $data; # Tableau contenant toutes les données.
	
	function __construct(){
		$this->statut = false;
		$this->message_erreur = NULL;
		$this->data = array();
	
	}
	
	# Accesseurs:
	public function getStatut(){
		return $this->statut;
	}
	
	public function getMessage_erreur(){
		return $this->message_erreur;
	}
	
	public function getData($data){
		return $this->data[$data];
	}
	
	public function getDatas(){
		return $this->data;
	}


	# Mutateur:
	public function setStatut($statut){
		$this->statut = $statut;
	}
	
	public function setMessage_erreur($message){
		$this->message_erreur = $message;
	}
	
	public function setData($key, $value){
		$this->data[$key] = $value;
	}
	
	public function setDatas($data){
		$this->data = $data;
	}
	
}




?><?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_annonce.php';
require_once 'couche_metier/MPG_departement.php';
require_once 'couche_metier/VIEW_annonce.php';

class PCS_annonce{

	private $oCAD;
	private $oMPG_annonce;
	private $oMPG_departement;
	private $oVIEW_annonce;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_annonce = new MPG_annonce();
		$this->oMPG_departement = new MPG_departement();
		$this->oVIEW_annonce = new VIEW_annonce();
	}
	
	// ----------------------- MPG_annonce --------------------------
	
	public function fx_recuperer_annonce_by_ID_ANNONCE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_all_by_ID_ANNONCE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_annonce_by_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_COUNT_ID_ANNONCE_by_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_toutes_annonces_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_COUNT_ID_ANNONCE_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_toutes_annonces_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_toutes_annonces_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_annonces_futures_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_COUNT_ID_ANNONCE_futures_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_toutes_annonces_futures_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_annonces_futures_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_annonces_par_criteres($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_COUNT_annonces_par_criteres($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_annonce_valide_by_ID_ANNONCE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_annonce_valide_by_ID_ANNONCE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_toutes_annonces($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_COUNT_toutes_annonces($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_tous_goldlive($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_annonce->SELECT_COUNT_tous_goldlive($oMSG));
		
		return $oMSG;
	}
	
	// ----------------------- MPG_departement ----------------------
	
	public function fx_recuperer_tous_departements($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_departement->SELECT_all($oMSG));
		
		return $oMSG;
	}
	
	
	// --------------------- VIEW_annonce --------------------------
	
	public function fx_recuperer_min_annonce_by_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_annonce->SELECT_min_by_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_annonces_par_criteres($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_annonce->SELECT_annonces_par_criteres($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_annonce_complete_by_ID_ANNONCE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_annonce->SELECT_annonce_complete_by_ID_ANNONCE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_toutes_annonces_min($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_annonce->SELECT_all_min($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_annonce->SELECT_COUNT_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_annonce->SELECT_annonces_by_GOLDLIVE_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_calculer_couts_annonces_goldlive_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_annonce->SELECT_SUM_couts_annonces_goldlive_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	// ---------------------------------------------------------------- ActionRows ----------------------------------------------------------------------
	
	// ----------------------- MPG_annonce ----------------------------
	
	public function fx_creer_annonce($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_annonce->INSERT($oMSG), true);
		
		return $oMSG;
	}
	
	public function fx_modifier_annonce_by_ID_ANNONCE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_annonce->UPDATE_by_ID_ANNONCE($oMSG), true);
		
		return $oMSG;
	}
	
	public function fx_modifier_goldlive_by_ID_ANNONCE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_annonce->UPDATE_goldlive_by_ID_ANNONCE($oMSG), true);
		
		return $oMSG;
	}
}<?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_commentaire.php';
require_once 'couche_metier/VIEW_commentaire.php';

class PCS_commentaire{

	private $oCAD;
	private $oMPG_commentaire;
	private $oVIEW_commentaire;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_commentaire = new MPG_commentaire();
		$this->oVIEW_commentaire = new VIEW_commentaire();
	}
	
	public function fx_selectionner_commentaire_by_ID_COMMENTAIRE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_commentaire->SELECT_commentaire_by_ID_COMMENTAIRE($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_compter_tous_commentaires_by_ID_NOUVEAUTE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_commentaire->SELECT_COUNT_tous_commentaires_by_ID_NOUVEAUTE($oMSG));
		
		return $oMSG;
	}
	
	// --------------------- VIEW_commentaire -------------------
	
	public function fx_selectionner_commentaires_by_ID_NOUVEAUTE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_commentaire->SELECT_commentaires_by_ID_NOUVEAUTE($oMSG));
		
		return $oMSG;
	}
	
	// ------------------------------------------------------------- ActionRows  ------------------------------------------
	
	public function fx_ajouter_commentaire($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_commentaire->INSERT($oMSG), true);
		
		return $oMSG;
	}
	
	public function fx_cacher_commentaire($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_commentaire->UPDATE_chacher_commentaire($oMSG), true);
		
		return $oMSG;
	}
	
	
	
}
?><?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_contrat.php';
require_once 'couche_metier/MPG_contrat_personne.php';
require_once 'couche_metier/VIEW_contrat.php';

class PCS_contrat{

	private $oCAD;
	private $oMPG_contrat;
	private $oVIEW_contrat;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_contrat = new MPG_contrat();
		$this->oMPG_contrat_personne = new MPG_contrat_personne();
		$this->oVIEW_contrat = new VIEW_contrat();
	}
	
	// ----------------------- MPG_contrat --------------------------
	
	public function fx_compter_contrat_by_ID_ANNONCE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_contrat->SELECT_COUNT_ID_CONTRAT_by_ID_ANNONCE($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_compter_ID_CONTRAT_by_ID_CONTRAT_et_DESTINATAIRE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_contrat->SELECT_COUNT_ID_CONTRAT_by_ID_CONTRAT_et_DESTINATAIRE($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_compter_tous_contrats_by_STATUT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_contrat->SELECT_COUNT_by_STATUT($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_compter_tous_contrats($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_contrat->SELECT_COUNT_all($oMSG));
		
		return $oMSG;
	}
	
	
	
	// ----------------------- MPG_contrat_personne --------------------------
	
	public function fx_compter_contrat_by_ID_CONTRAT_et_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_contrat_personne->SELECT_COUNT_ID_CONTRAT_by_ID_CONTRAT_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_contrat_personne->SELECT_destinataire_by_ID_CONTRAT_et_nonID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	
	// ----------------------- VIEW_contrat --------------------------
	
	public function fx_compter_contrat_by_ID_ANNONCE_et_ID_PERSONNE_et_condition($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_COUNT_nb_contrat_by_ID_PERSONNE_et_ID_ANNONCE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_contrat_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_COUNT_nb_contrat_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_contrat_min_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_contrat_min_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_contrats_courants_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_COUNT_contrats_courants_min_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_contrats_courants_min_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_contrats_courants_min_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_contrat_by_ID_CONTRAT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_contrat_by_ID_CONTRAT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_departement_annonce_lors_annulation_contrat($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_departement_annonce_lors_annulation_contrat($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_tous_contrats_by_STATUT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_by_STATUT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_tous_contrats($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_all($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_prestations_effectues($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_COUNT_prestations($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_prestations_min($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_prestations_min($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_moy_evaluation_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_MOY_evaluation_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_calculer_gains_contrats_by_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_contrat->SELECT_SUM_gains_contrats_by_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	// ---------------------------------------------------------------- ActionRows ----------------------------------------------------------------------
	
	// ----------------------- MPG_contrat ----------------------------
	
	public function fx_creer_contrat($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_contrat->INSERT($oMSG), true);
		
		return $oMSG;
	}
	
	public function fx_maj_contrat($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_contrat->UPDATE_refus($oMSG));
		
		return $oMSG;
	}
	
	public function fx_maj_STATUT_by_ID_CONTRAT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_contrat->UPDATE_statut_by_ID_CONTRAT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_valider_contrat($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_contrat->UPDATE_validation($oMSG));
		
		return $oMSG;
	}
	
	public function fx_maj_DATE_EVALUATION_by_ID_CONTRAT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_contrat->UPDATE_DATE_EVALUATION_by_ID_CONTRAT($oMSG));
		
		return $oMSG;
	}
	
	// ---------------------- MPG_contrat_personne --------------------
	
	public function fx_lier_contrat($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_contrat_personne->INSERT($oMSG));
		
		return $oMSG;
	}
}<?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_evaluation.php';

class PCS_evaluation{

	private $oCAD;
	private $oMPG_evaluation;

	public function __construct() {
		$this->oCAD = new CAD();
		$this->oMPG_evaluation = new MPG_evaluation();
	}
	
	// ----------------------- MPG_evaluation --------------------------
	
	public function fx_compter_evaluation_by_ID_CONTRAT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_evaluation->SELECT_COUNT_ID_EVALUATION_by_ID_CONTRAT($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_recuperer_evaluations_by_ID_CONTRAT($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_evaluation->SELECT_evaluations_by_ID_CONTRAT($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_compter_evaluation_by_ID_CONTRAT_et_TYPE_EVALUATION($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_evaluation->SELECT_COUNT_ID_EVALUATION_by_ID_CONTRAT_et_TYPE_EVALUATION($oMSG));
		
		return $oMSG;
	}
	
	
	public function fx_recuperer_evaluations_by_ID_CONTRAT_et_TYPE_EVALUATION($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_evaluation->SELECT_evaluations_by_ID_CONTRAT_et_TYPE_EVALUATION($oMSG));
		
		return $oMSG;
	}

	// ---------------------------------------------------------------- ActionRows ----------------------------------------------------------------------
		
	public function fx_creer_evaluation($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_evaluation->INSERT($oMSG), true);
		
		return $oMSG;
	}
	
	public function fx_maj_evaluation($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_evaluation->UPDATE($oMSG), true);
		
		return $oMSG;
	}
	
}<?php
require_once 'couche_donnees/CAD.php';
require_once 'couche_metier/MPG_message.php';
require_once 'couche_metier/MPG_message_personne.php';
require_once 'couche_metier/VIEW_message.php';

class PCS_message{

	private $oCAD;
	private $oMPG_message;
	private $oMPG_departement;
	private $oVIEW_message;
	
	public function __construct(){
		$this->oCAD = new CAD();
		$this->oMPG_message = new MPG_message();
		$this->oMPG_message_personne = new MPG_message_personne();
		$this->oVIEW_message = new VIEW_message();
	
	}
	// ---------------------------------------------- GetRow --------------------------------------------

	// ---------------------- MPG_message_personne ------------------
	
	public function fx_compter_message_by_ID_MESSAGE_et_ID_PERSONNE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oMPG_message_personne->SELECT_COUNT_message_by_ID_MESSAGE_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	// ------------------------ VIEW_message -----------------------

	public function fx_compter_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_message->SELECT_COUNT_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_message->SELECT_min_message_by_nonSTATUT_et_ID_PERSONNE_et_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_compter_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_message->SELECT_COUNT_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_message->SELECT_min_message_by_STATUT_et_ID_PERSONNE_et_VISIBLE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_recuperer_message_by_ID_MESSAGE($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->GetRows($this->oVIEW_message->SELECT_message_by_ID_MESSAGE($oMSG));
		
		return $oMSG;
	}
	
	// ---------------------------------------------- ActionRows --------------------------------------------
	
	// ---------------------- MPG_message_personne ------------------

	public function fx_creer_message($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_message->INSERT($oMSG), true);# Récupération de l'ID crée.
		
		return $oMSG;
	}
	// ------------------------- MPG_message_personne -----------------
	
	public function fx_lier_message($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_message_personne->INSERT($oMSG));
		
		return $oMSG;
	}
	
	public function fx_message_lu($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_message_personne->UPDATE_message_lu_by_ID_MESSAGE_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}
	
	public function fx_supprimer_message($oMSG){
		$this->oCAD = new CAD();
		$oMSG = $this->oCAD->ActionRows($this->oMPG_message_personne->UPDATE_message_supprime_by_ID_MESSAGE_et_ID_PERSONNE($oMSG));
		
		return $oMSG;
	}

}
?>
